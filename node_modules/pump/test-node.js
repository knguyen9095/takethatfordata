var pump = require('./index')

var rs = require('fs').createReadStream('/dev/random')
var ws = require('fs').createWriteStream('/dev/null')

var toHex = function () ***REMOVED***
  var reverse = new (require('stream').Transform)()

  reverse._transform = function (chunk, enc, callback) ***REMOVED***
    reverse.push(chunk.toString('hex'))
    callback()
  ***REMOVED***

  return reverse
***REMOVED***

var wsClosed = false
var rsClosed = false
var callbackCalled = false

var check = function () ***REMOVED***
  if (wsClosed && rsClosed && callbackCalled) ***REMOVED***
    console.log('test-node.js passes')
    clearTimeout(timeout)
  ***REMOVED***
***REMOVED***

ws.on('close', function () ***REMOVED***
  wsClosed = true
  check()
***REMOVED***)

rs.on('close', function () ***REMOVED***
  rsClosed = true
  check()
***REMOVED***)

var res = pump(rs, toHex(), toHex(), toHex(), ws, function () ***REMOVED***
  callbackCalled = true
  check()
***REMOVED***)

if (res) ***REMOVED***
  process.exit(1)
***REMOVED***

setTimeout(function () ***REMOVED***
  rs.destroy()
***REMOVED***, 1000)

var timeout = setTimeout(function () ***REMOVED***
  throw new Error('timeout')
***REMOVED***, 5000)
