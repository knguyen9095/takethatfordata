#!/usr/bin/env node
'use strict';

var path = require('path');
var fs = require('fs');
var acorn = require('../dist/acorn.js');

var infile;
var forceFile;
var silent = false;
var compact = false;
var tokenize = false;
var options = ***REMOVED******REMOVED***

function help(status) ***REMOVED***
  var print = (status == 0) ? console.log : console.error
  print("usage: " + path.basename(process.argv[1]) + " [--ecma3|--ecma5|--ecma6|--ecma7|...|--ecma2015|--ecma2016|...]")
  print("        [--tokenize] [--locations] [---allow-hash-bang] [--compact] [--silent] [--module] [--help] [--] [infile]")
  process.exit(status)
***REMOVED***

for (var i = 2; i < process.argv.length; ++i) ***REMOVED***
  var arg = process.argv[i]
  if ((arg == "-" || arg[0] != "-") && !infile) infile = arg
  else if (arg == "--" && !infile && i + 2 == process.argv.length) forceFile = infile = process.argv[++i]
  else if (arg == "--locations") options.locations = true
  else if (arg == "--allow-hash-bang") options.allowHashBang = true
  else if (arg == "--silent") silent = true
  else if (arg == "--compact") compact = true
  else if (arg == "--help") help(0)
  else if (arg == "--tokenize") tokenize = true
  else if (arg == "--module") options.sourceType = 'module'
  else ***REMOVED***
    var match = arg.match(/^--ecma(\d+)$/)
    if (match)
      options.ecmaVersion = +match[1]
    else
      help(1)
  ***REMOVED***
***REMOVED***

function run(code) ***REMOVED***
  var result
  if (!tokenize) ***REMOVED***
    try ***REMOVED*** result = acorn.parse(code, options) ***REMOVED***
    catch(e) ***REMOVED*** console.error(e.message); process.exit(1) ***REMOVED***
  ***REMOVED*** else ***REMOVED***
    result = []
    var tokenizer = acorn.tokenizer(code, options), token
    while (true) ***REMOVED***
      try ***REMOVED*** token = tokenizer.getToken() ***REMOVED***
      catch(e) ***REMOVED*** console.error(e.message); process.exit(1) ***REMOVED***
      result.push(token)
      if (token.type == acorn.tokTypes.eof) break
    ***REMOVED***
  ***REMOVED***
  if (!silent) console.log(JSON.stringify(result, null, compact ? null : 2))
***REMOVED***

if (forceFile || infile && infile != "-") ***REMOVED***
  run(fs.readFileSync(infile, "utf8"))
***REMOVED*** else ***REMOVED***
  var code = ""
  process.stdin.resume()
  process.stdin.on("data", function (chunk) ***REMOVED*** return code += chunk; ***REMOVED***)
  process.stdin.on("end", function () ***REMOVED*** return run(code); ***REMOVED***)
***REMOVED***