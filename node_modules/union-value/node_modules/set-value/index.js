/*!
 * set-value <https://github.com/jonschlinkert/set-value>
 *
 * Copyright (c) 2014-2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */

'use strict';

var toPath = require('to-object-path');
var extend = require('extend-shallow');
var isPlainObject = require('is-plain-object');
var isObject = require('is-extendable');

module.exports = function(obj, path, val) ***REMOVED***
  if (!isObject(obj)) ***REMOVED***
    return obj;
  ***REMOVED***

  if (Array.isArray(path)) ***REMOVED***
    path = toPath(path);
  ***REMOVED***

  if (typeof path !== 'string') ***REMOVED***
    return obj;
  ***REMOVED***

  var segs = path.split('.');
  var len = segs.length, i = -1;
  var res = obj;
  var last;

  while (++i < len) ***REMOVED***
    var key = segs[i];

    while (key[key.length - 1] === '\\') ***REMOVED***
      key = key.slice(0, -1) + '.' + segs[++i];
    ***REMOVED***

    if (i === len - 1) ***REMOVED***
      last = key;
      break;
    ***REMOVED***

    if (!isObject(obj[key])) ***REMOVED***
      obj[key] = ***REMOVED******REMOVED***;
    ***REMOVED***
    obj = obj[key];
  ***REMOVED***

  if (obj.hasOwnProperty(last) && isObject(obj[last])) ***REMOVED***
    if (isPlainObject(val)) ***REMOVED***
      extend(obj[last], val);
    ***REMOVED*** else ***REMOVED***
      obj[last] = val;
    ***REMOVED***

  ***REMOVED*** else ***REMOVED***
    obj[last] = val;
  ***REMOVED***
  return res;
***REMOVED***;

