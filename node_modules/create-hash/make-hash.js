'use strict'
var intSize = 4
var zeroBuffer = new Buffer(intSize)
zeroBuffer.fill(0)

var charSize = 8
var hashSize = 16

function toArray (buf) ***REMOVED***
  if ((buf.length % intSize) !== 0) ***REMOVED***
    var len = buf.length + (intSize - (buf.length % intSize))
    buf = Buffer.concat([buf, zeroBuffer], len)
  ***REMOVED***

  var arr = new Array(buf.length >>> 2)
  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) ***REMOVED***
    arr[j] = buf.readInt32LE(i)
  ***REMOVED***

  return arr
***REMOVED***

module.exports = function hash (buf, fn) ***REMOVED***
  var arr = fn(toArray(buf), buf.length * charSize)
  buf = new Buffer(hashSize)
  for (var i = 0; i < arr.length; i++) ***REMOVED***
    buf.writeInt32LE(arr[i], i << 2, true)
  ***REMOVED***
  return buf
***REMOVED***
