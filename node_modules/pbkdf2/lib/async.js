var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var Buffer = require('safe-buffer').Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = ***REMOVED***
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
***REMOVED***
var checks = []
function checkNative (algo) ***REMOVED***
  if (global.process && !global.process.browser) ***REMOVED***
    return Promise.resolve(false)
  ***REMOVED***
  if (!subtle || !subtle.importKey || !subtle.deriveBits) ***REMOVED***
    return Promise.resolve(false)
  ***REMOVED***
  if (checks[algo] !== undefined) ***REMOVED***
    return checks[algo]
  ***REMOVED***
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () ***REMOVED***
      return true
    ***REMOVED***).catch(function () ***REMOVED***
      return false
    ***REMOVED***)
  checks[algo] = prom
  return prom
***REMOVED***
function browserPbkdf2 (password, salt, iterations, length, algo) ***REMOVED***
  return subtle.importKey(
    'raw', password, ***REMOVED***name: 'PBKDF2'***REMOVED***, false, ['deriveBits']
  ).then(function (key) ***REMOVED***
    return subtle.deriveBits(***REMOVED***
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: ***REMOVED***
        name: algo
      ***REMOVED***
    ***REMOVED***, key, length << 3)
  ***REMOVED***).then(function (res) ***REMOVED***
    return Buffer.from(res)
  ***REMOVED***)
***REMOVED***
function resolvePromise (promise, callback) ***REMOVED***
  promise.then(function (out) ***REMOVED***
    process.nextTick(function () ***REMOVED***
      callback(null, out)
    ***REMOVED***)
  ***REMOVED***, function (e) ***REMOVED***
    process.nextTick(function () ***REMOVED***
      callback(e)
    ***REMOVED***)
  ***REMOVED***)
***REMOVED***
module.exports = function (password, salt, iterations, keylen, digest, callback) ***REMOVED***
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)
  if (typeof digest === 'function') ***REMOVED***
    callback = digest
    digest = undefined
  ***REMOVED***
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]
  if (!algo || typeof global.Promise !== 'function') ***REMOVED***
    return process.nextTick(function () ***REMOVED***
      var out
      try ***REMOVED***
        out = sync(password, salt, iterations, keylen, digest)
      ***REMOVED*** catch (e) ***REMOVED***
        return callback(e)
      ***REMOVED***
      callback(null, out)
    ***REMOVED***)
  ***REMOVED***
  resolvePromise(checkNative(algo).then(function (resp) ***REMOVED***
    if (resp) ***REMOVED***
      return browserPbkdf2(password, salt, iterations, keylen, algo)
    ***REMOVED*** else ***REMOVED***
      return sync(password, salt, iterations, keylen, digest)
    ***REMOVED***
  ***REMOVED***), callback)
***REMOVED***
