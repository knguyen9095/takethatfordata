/*!
 * object-visit <https://github.com/jonschlinkert/object-visit>
 *
 * Copyright (c) 2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */

'use strict';

var isObject = require('isobject');

module.exports = function visit(thisArg, method, target, val) ***REMOVED***
  if (!isObject(thisArg) && typeof thisArg !== 'function') ***REMOVED***
    throw new Error('object-visit expects `thisArg` to be an object.');
  ***REMOVED***

  if (typeof method !== 'string') ***REMOVED***
    throw new Error('object-visit expects `method` name to be a string');
  ***REMOVED***

  if (typeof thisArg[method] !== 'function') ***REMOVED***
    return thisArg;
  ***REMOVED***

  var args = [].slice.call(arguments, 3);
  target = target || ***REMOVED******REMOVED***;

  for (var key in target) ***REMOVED***
    var arr = [key, target[key]].concat(args);
    thisArg[method].apply(thisArg, arr);
  ***REMOVED***
  return thisArg;
***REMOVED***;
