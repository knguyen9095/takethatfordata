#!/usr/bin/env node
'use strict';

var path = require('path');
var fs = require('fs');
var acorn = require('../dist/acorn.js');

var infile;
var forceFile;
var silent = false;
var compact = false;
var tokenize = false;
var options = ***REMOVED******REMOVED***;

function help(status) ***REMOVED***
  var print = (status == 0) ? console.log : console.error;
  print("usage: " + path.basename(process.argv[1]) + " [--ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|...|--ecma2015|--ecma2016|--ecma2017|--ecma2018|...]");
  print("        [--tokenize] [--locations] [---allow-hash-bang] [--compact] [--silent] [--module] [--help] [--] [infile]");
  process.exit(status);
***REMOVED***

for (var i = 2; i < process.argv.length; ++i) ***REMOVED***
  var arg = process.argv[i];
  if ((arg == "-" || arg[0] != "-") && !infile) ***REMOVED*** infile = arg; ***REMOVED***
  else if (arg == "--" && !infile && i + 2 == process.argv.length) ***REMOVED*** forceFile = infile = process.argv[++i]; ***REMOVED***
  else if (arg == "--locations") ***REMOVED*** options.locations = true; ***REMOVED***
  else if (arg == "--allow-hash-bang") ***REMOVED*** options.allowHashBang = true; ***REMOVED***
  else if (arg == "--silent") ***REMOVED*** silent = true; ***REMOVED***
  else if (arg == "--compact") ***REMOVED*** compact = true; ***REMOVED***
  else if (arg == "--help") ***REMOVED*** help(0); ***REMOVED***
  else if (arg == "--tokenize") ***REMOVED*** tokenize = true; ***REMOVED***
  else if (arg == "--module") ***REMOVED*** options.sourceType = "module"; ***REMOVED***
  else ***REMOVED***
    var match = arg.match(/^--ecma(\d+)$/);
    if (match)
      ***REMOVED*** options.ecmaVersion = +match[1]; ***REMOVED***
    else
      ***REMOVED*** help(1); ***REMOVED***
  ***REMOVED***
***REMOVED***

function run(code) ***REMOVED***
  var result;
  try ***REMOVED***
    if (!tokenize) ***REMOVED***
      result = acorn.parse(code, options);
    ***REMOVED*** else ***REMOVED***
      result = [];
      var tokenizer$$1 = acorn.tokenizer(code, options), token;
      do ***REMOVED***
        token = tokenizer$$1.getToken();
        result.push(token);
      ***REMOVED*** while (token.type != acorn.tokTypes.eof)
    ***REMOVED***
  ***REMOVED*** catch (e) ***REMOVED***
    console.error(e.message);
    process.exit(1);
  ***REMOVED***
  if (!silent) ***REMOVED*** console.log(JSON.stringify(result, null, compact ? null : 2)); ***REMOVED***
***REMOVED***

if (forceFile || infile && infile != "-") ***REMOVED***
  run(fs.readFileSync(infile, "utf8"));
***REMOVED*** else ***REMOVED***
  var code = "";
  process.stdin.resume();
  process.stdin.on("data", function (chunk) ***REMOVED*** return code += chunk; ***REMOVED***);
  process.stdin.on("end", function () ***REMOVED*** return run(code); ***REMOVED***);
***REMOVED***
