var fs = require('fs')
var path = require('path')
var assign = require('./assign')
var YError = require('./yerror')

var previouslyVisitedConfigs = []

function checkForCircularExtends (path) ***REMOVED***
  if (previouslyVisitedConfigs.indexOf(path) > -1) ***REMOVED***
    throw new YError("Circular extended configurations: '" + path + "'.")
  ***REMOVED***
***REMOVED***

function getPathToDefaultConfig (cwd, pathToExtend) ***REMOVED***
  return path.resolve(cwd, pathToExtend)
***REMOVED***

function applyExtends (config, cwd) ***REMOVED***
  var defaultConfig = ***REMOVED******REMOVED***

  if (config.hasOwnProperty('extends')) ***REMOVED***
    if (typeof config.extends !== 'string') return defaultConfig
    var isPath = /\.json$/.test(config.extends)
    var pathToDefault = null
    if (!isPath) ***REMOVED***
      try ***REMOVED***
        pathToDefault = require.resolve(config.extends)
      ***REMOVED*** catch (err) ***REMOVED***
        // most likely this simply isn't a module.
      ***REMOVED***
    ***REMOVED*** else ***REMOVED***
      pathToDefault = getPathToDefaultConfig(cwd, config.extends)
    ***REMOVED***
    // maybe the module uses key for some other reason,
    // err on side of caution.
    if (!pathToDefault && !isPath) return config

    checkForCircularExtends(pathToDefault)

    previouslyVisitedConfigs.push(pathToDefault)

    defaultConfig = isPath ? JSON.parse(fs.readFileSync(pathToDefault, 'utf8')) : require(config.extends)
    delete config.extends
    defaultConfig = applyExtends(defaultConfig, path.dirname(pathToDefault))
  ***REMOVED***

  previouslyVisitedConfigs = []

  return assign(defaultConfig, config)
***REMOVED***

module.exports = applyExtends
