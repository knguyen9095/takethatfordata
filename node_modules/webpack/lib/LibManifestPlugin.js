/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const path = require("path");
const asyncLib = require("async");

class LibManifestPlugin ***REMOVED***
	constructor(options) ***REMOVED***
		this.options = options;
	***REMOVED***

	apply(compiler) ***REMOVED***
		compiler.plugin("emit", (compilation, callback) => ***REMOVED***
			asyncLib.forEach(compilation.chunks, (chunk, callback) => ***REMOVED***
				if(!chunk.isInitial()) ***REMOVED***
					callback();
					return;
				***REMOVED***
				const targetPath = compilation.getPath(this.options.path, ***REMOVED***
					hash: compilation.hash,
					chunk
				***REMOVED***);
				const name = this.options.name && compilation.getPath(this.options.name, ***REMOVED***
					hash: compilation.hash,
					chunk
				***REMOVED***);
				const manifest = ***REMOVED***
					name,
					type: this.options.type,
					content: chunk.mapModules(module => ***REMOVED***
						if(module.libIdent) ***REMOVED***
							const ident = module.libIdent(***REMOVED***
								context: this.options.context || compiler.options.context
							***REMOVED***);
							if(ident) ***REMOVED***
								return ***REMOVED***
									ident,
									data: ***REMOVED***
										id: module.id,
										meta: module.meta,
										exports: Array.isArray(module.providedExports) ? module.providedExports : undefined
									***REMOVED***
								***REMOVED***;
							***REMOVED***
						***REMOVED***
					***REMOVED***).filter(Boolean).reduce((obj, item) => ***REMOVED***
						obj[item.ident] = item.data;
						return obj;
					***REMOVED***, Object.create(null))
				***REMOVED***;
				const content = new Buffer(JSON.stringify(manifest), "utf8"); //eslint-disable-line
				compiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => ***REMOVED***
					if(err) return callback(err);
					compiler.outputFileSystem.writeFile(targetPath, content, callback);
				***REMOVED***);
			***REMOVED***, callback);
		***REMOVED***);
	***REMOVED***
***REMOVED***
module.exports = LibManifestPlugin;
