/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";
class ChunkModuleIdRangePlugin ***REMOVED***
	constructor(options) ***REMOVED***
		this.options = options;
	***REMOVED***
	apply(compiler) ***REMOVED***
		const options = this.options;
		compiler.plugin("compilation", (compilation) => ***REMOVED***
			compilation.plugin("module-ids", (modules) => ***REMOVED***
				const chunk = this.chunks.find((chunk) => chunk.name === options.name);
				if(!chunk) throw new Error("ChunkModuleIdRangePlugin: Chunk with name '" + options.name + "' was not found");
				let currentId = options.start;
				let chunkModules;
				if(options.order) ***REMOVED***
					chunkModules = chunk.modules.slice();
					switch(options.order) ***REMOVED***
						case "index":
							chunkModules.sort((a, b) => ***REMOVED***
								return a.index - b.index;
							***REMOVED***);
							break;
						case "index2":
							chunkModules.sort((a, b) => ***REMOVED***
								return a.index2 - b.index2;
							***REMOVED***);
							break;
						default:
							throw new Error("ChunkModuleIdRangePlugin: unexpected value of order");
					***REMOVED***

				***REMOVED*** else ***REMOVED***
					chunkModules = modules.filter((m) => ***REMOVED***
						return m.chunks.indexOf(chunk) >= 0;
					***REMOVED***);
				***REMOVED***

				for(let i = 0; i < chunkModules.length; i++) ***REMOVED***
					const m = chunkModules[i];
					if(m.id === null) ***REMOVED***
						m.id = currentId++;
					***REMOVED***
					if(options.end && currentId > options.end)
						break;
				***REMOVED***
			***REMOVED***);
		***REMOVED***);
	***REMOVED***
***REMOVED***
module.exports = ChunkModuleIdRangePlugin;
