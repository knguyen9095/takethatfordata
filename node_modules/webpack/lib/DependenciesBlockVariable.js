/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const ReplaceSource = require("webpack-sources").ReplaceSource;
const RawSource = require("webpack-sources").RawSource;

class DependenciesBlockVariable ***REMOVED***
	constructor(name, expression, dependencies) ***REMOVED***
		this.name = name;
		this.expression = expression;
		this.dependencies = dependencies || [];
	***REMOVED***

	updateHash(hash) ***REMOVED***
		hash.update(this.name);
		hash.update(this.expression);
		this.dependencies.forEach(d => ***REMOVED***
			d.updateHash(hash);
		***REMOVED***);
	***REMOVED***

	expressionSource(dependencyTemplates, outputOptions, requestShortener) ***REMOVED***
		const source = new ReplaceSource(new RawSource(this.expression));
		this.dependencies.forEach(dep => ***REMOVED***
			const template = dependencyTemplates.get(dep.constructor);
			if(!template) throw new Error(`No template for dependency: $***REMOVED***dep.constructor.name***REMOVED***`);
			template.apply(dep, source, outputOptions, requestShortener, dependencyTemplates);
		***REMOVED***);
		return source;
	***REMOVED***

	disconnect() ***REMOVED***
		this.dependencies.forEach(d => ***REMOVED***
			d.disconnect();
		***REMOVED***);
	***REMOVED***

	hasDependencies(filter) ***REMOVED***
		if(filter) ***REMOVED***
			if(this.dependencies.some(filter)) return true;
		***REMOVED*** else ***REMOVED***
			if(this.dependencies.length > 0) return true;
		***REMOVED***
		return false;
	***REMOVED***
***REMOVED***

module.exports = DependenciesBlockVariable;
