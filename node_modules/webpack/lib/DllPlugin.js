/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
	*/
"use strict";

const DllEntryPlugin = require("./DllEntryPlugin");
const LibManifestPlugin = require("./LibManifestPlugin");
const FlagInitialModulesAsUsedPlugin = require("./FlagInitialModulesAsUsedPlugin");

class DllPlugin ***REMOVED***
	constructor(options) ***REMOVED***
		this.options = options;
	***REMOVED***

	apply(compiler) ***REMOVED***
		compiler.plugin("entry-option", (context, entry) => ***REMOVED***
			function itemToPlugin(item, name) ***REMOVED***
				if(Array.isArray(item))
					return new DllEntryPlugin(context, item, name);
				else
					throw new Error("DllPlugin: supply an Array as entry");
			***REMOVED***
			if(typeof entry === "object" && !Array.isArray(entry)) ***REMOVED***
				Object.keys(entry).forEach(name => ***REMOVED***
					compiler.apply(itemToPlugin(entry[name], name));
				***REMOVED***);
			***REMOVED*** else ***REMOVED***
				compiler.apply(itemToPlugin(entry, "main"));
			***REMOVED***
			return true;
		***REMOVED***);
		compiler.apply(new LibManifestPlugin(this.options));
		compiler.apply(new FlagInitialModulesAsUsedPlugin());
	***REMOVED***
***REMOVED***

module.exports = DllPlugin;
