/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Authors Simen Brekken @simenbrekken, Einar LÃ¶ve @einarlove
*/

"use strict";

const DefinePlugin = require("./DefinePlugin");

class EnvironmentPlugin ***REMOVED***
	constructor(keys) ***REMOVED***
		if(Array.isArray(keys)) ***REMOVED***
			this.keys = keys;
			this.defaultValues = ***REMOVED******REMOVED***;
		***REMOVED*** else if(keys && typeof keys === "object") ***REMOVED***
			this.keys = Object.keys(keys);
			this.defaultValues = keys;
		***REMOVED*** else ***REMOVED***
			this.keys = Array.prototype.slice.call(arguments);
			this.defaultValues = ***REMOVED******REMOVED***;
		***REMOVED***
	***REMOVED***

	apply(compiler) ***REMOVED***
		const definitions = this.keys.reduce((defs, key) => ***REMOVED***
			const value = process.env[key] !== undefined ? process.env[key] : this.defaultValues[key];

			if(value === undefined) ***REMOVED***
				compiler.plugin("this-compilation", compilation => ***REMOVED***
					const error = new Error(
						`EnvironmentPlugin - $***REMOVED***key***REMOVED*** environment variable is undefined.\n\n` +
						"You can pass an object with default values to suppress this warning.\n" +
						"See https://webpack.js.org/plugins/environment-plugin for example."
					);

					error.name = "EnvVariableNotDefinedError";
					compilation.warnings.push(error);
				***REMOVED***);
			***REMOVED***

			defs[`process.env.$***REMOVED***key***REMOVED***`] = typeof value === "undefined" ? "undefined" : JSON.stringify(value);

			return defs;
		***REMOVED***, ***REMOVED******REMOVED***);

		compiler.apply(new DefinePlugin(definitions));
	***REMOVED***
***REMOVED***

module.exports = EnvironmentPlugin;
