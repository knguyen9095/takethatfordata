/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const HarmonyCompatibilityDependency = require("./HarmonyCompatibilityDependency");

module.exports = class HarmonyDetectionParserPlugin ***REMOVED***
	apply(parser) ***REMOVED***
		parser.plugin("program", (ast) => ***REMOVED***
			const isHarmony = ast.body.some(statement => ***REMOVED***
				return /^(Import|Export).*Declaration$/.test(statement.type);
			***REMOVED***);
			if(isHarmony) ***REMOVED***
				const module = parser.state.module;
				const dep = new HarmonyCompatibilityDependency(module);
				dep.loc = ***REMOVED***
					start: ***REMOVED***
						line: -1,
						column: 0
					***REMOVED***,
					end: ***REMOVED***
						line: -1,
						column: 0
					***REMOVED***,
					index: -2
				***REMOVED***;
				module.addDependency(dep);
				module.meta.harmonyModule = true;
				module.strict = true;
				module.exportsArgument = "__webpack_exports__";
			***REMOVED***
		***REMOVED***);
		const nonHarmonyIdentifiers = ["define", "exports"];
		nonHarmonyIdentifiers.forEach(identifer => ***REMOVED***
			parser.plugin(`evaluate typeof $***REMOVED***identifer***REMOVED***`, nullInHarmony);
			parser.plugin(`typeof $***REMOVED***identifer***REMOVED***`, skipInHarmony);
			parser.plugin(`evaluate $***REMOVED***identifer***REMOVED***`, nullInHarmony);
			parser.plugin(`expression $***REMOVED***identifer***REMOVED***`, skipInHarmony);
			parser.plugin(`call $***REMOVED***identifer***REMOVED***`, skipInHarmony);
		***REMOVED***);

		function skipInHarmony() ***REMOVED***
			const module = this.state.module;
			if(module && module.meta && module.meta.harmonyModule)
				return true;
		***REMOVED***

		function nullInHarmony() ***REMOVED***
			const module = this.state.module;
			if(module && module.meta && module.meta.harmonyModule)
				return null;
		***REMOVED***
	***REMOVED***
***REMOVED***;
