/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const RequireContextDependency = require("./RequireContextDependency");

module.exports = class RequireContextDependencyParserPlugin ***REMOVED***
	apply(parser) ***REMOVED***
		parser.plugin("call require.context", expr => ***REMOVED***
			let regExp = /^\.\/.*$/;
			let recursive = true;
			let asyncMode;
			switch(expr.arguments.length) ***REMOVED***
				case 4:
					***REMOVED***
						const asyncModeExpr = parser.evaluateExpression(expr.arguments[3]);
						if(!asyncModeExpr.isString()) return;
						asyncMode = asyncModeExpr.string;
					***REMOVED***
					// falls through
				case 3:
					***REMOVED***
						const regExpExpr = parser.evaluateExpression(expr.arguments[2]);
						if(!regExpExpr.isRegExp()) return;
						regExp = regExpExpr.regExp;
					***REMOVED***
					// falls through
				case 2:
					***REMOVED***
						const recursiveExpr = parser.evaluateExpression(expr.arguments[1]);
						if(!recursiveExpr.isBoolean()) return;
						recursive = recursiveExpr.bool;
					***REMOVED***
					// falls through
				case 1:
					***REMOVED***
						const requestExpr = parser.evaluateExpression(expr.arguments[0]);
						if(!requestExpr.isString()) return;
						const dep = new RequireContextDependency(requestExpr.string, recursive, regExp, asyncMode, expr.range);
						dep.loc = expr.loc;
						dep.optional = parser.scope.inTry;
						parser.state.current.addDependency(dep);
						return true;
					***REMOVED***
			***REMOVED***
		***REMOVED***);
	***REMOVED***
***REMOVED***;
