/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

const path = require("path");

class NormalModuleReplacementPlugin ***REMOVED***
	constructor(resourceRegExp, newResource) ***REMOVED***
		this.resourceRegExp = resourceRegExp;
		this.newResource = newResource;
	***REMOVED***

	apply(compiler) ***REMOVED***
		const resourceRegExp = this.resourceRegExp;
		const newResource = this.newResource;
		compiler.plugin("normal-module-factory", (nmf) => ***REMOVED***
			nmf.plugin("before-resolve", (result, callback) => ***REMOVED***
				if(!result) return callback();
				if(resourceRegExp.test(result.request)) ***REMOVED***
					if(typeof newResource === "function") ***REMOVED***
						newResource(result);
					***REMOVED*** else ***REMOVED***
						result.request = newResource;
					***REMOVED***
				***REMOVED***
				return callback(null, result);
			***REMOVED***);
			nmf.plugin("after-resolve", (result, callback) => ***REMOVED***
				if(!result) return callback();
				if(resourceRegExp.test(result.resource)) ***REMOVED***
					if(typeof newResource === "function") ***REMOVED***
						newResource(result);
					***REMOVED*** else ***REMOVED***
						result.resource = path.resolve(path.dirname(result.resource), newResource);
					***REMOVED***
				***REMOVED***
				return callback(null, result);
			***REMOVED***);
		***REMOVED***);
	***REMOVED***
***REMOVED***

module.exports = NormalModuleReplacementPlugin;
