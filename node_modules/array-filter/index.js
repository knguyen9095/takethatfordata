
/**
 * Array#filter.
 *
 * @param ***REMOVED***Array***REMOVED*** arr
 * @param ***REMOVED***Function***REMOVED*** fn
 * @param ***REMOVED***Object=***REMOVED*** self
 * @return ***REMOVED***Array***REMOVED***
 * @throw TypeError
 */

module.exports = function (arr, fn, self) ***REMOVED***
  if (arr.filter) return arr.filter(fn, self);
  if (void 0 === arr || null === arr) throw new TypeError;
  if ('function' != typeof fn) throw new TypeError;
  var ret = [];
  for (var i = 0; i < arr.length; i++) ***REMOVED***
    if (!hasOwn.call(arr, i)) continue;
    var val = arr[i];
    if (fn.call(self, val, i, arr)) ret.push(val);
  ***REMOVED***
  return ret;
***REMOVED***;

var hasOwn = Object.prototype.hasOwnProperty;
