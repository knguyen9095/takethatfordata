/**
 * Allocates a new ByteBuffer backed by a buffer of the specified capacity.
 * @param ***REMOVED***number=***REMOVED*** capacity Initial capacity. Defaults to ***REMOVED***@link ByteBuffer.DEFAULT_CAPACITY***REMOVED***.
 * @param ***REMOVED***boolean=***REMOVED*** littleEndian Whether to use little or big endian byte order. Defaults to
 *  ***REMOVED***@link ByteBuffer.DEFAULT_ENDIAN***REMOVED***.
 * @param ***REMOVED***boolean=***REMOVED*** noAssert Whether to skip assertions of offsets and values. Defaults to
 *  ***REMOVED***@link ByteBuffer.DEFAULT_NOASSERT***REMOVED***.
 * @returns ***REMOVED***!ByteBuffer***REMOVED***
 * @expose
 */
ByteBuffer.allocate = function(capacity, littleEndian, noAssert) ***REMOVED***
    return new ByteBuffer(capacity, littleEndian, noAssert);
***REMOVED***;

