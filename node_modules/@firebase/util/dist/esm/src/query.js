/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import ***REMOVED*** forEach ***REMOVED*** from './obj';
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params
 * object (e.g. ***REMOVED***arg: 'val', arg2: 'val2'***REMOVED***)
 * Note: You must prepend it with ? when adding it to a URL.
 *
 * @param ***REMOVED***!Object***REMOVED*** querystringParams
 * @return ***REMOVED***string***REMOVED***
 */
export var querystring = function (querystringParams) ***REMOVED***
    var params = [];
    forEach(querystringParams, function (key, value) ***REMOVED***
        if (Array.isArray(value)) ***REMOVED***
            value.forEach(function (arrayVal) ***REMOVED***
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            ***REMOVED***);
        ***REMOVED***
        else ***REMOVED***
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        ***REMOVED***
    ***REMOVED***);
    return params.length ? '&' + params.join('&') : '';
***REMOVED***;
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. ***REMOVED***arg: 'val', arg2: 'val2'***REMOVED***)
 *
 * @param ***REMOVED***string***REMOVED*** querystring
 * @return ***REMOVED***!Object***REMOVED***
 */
export var querystringDecode = function (querystring) ***REMOVED***
    var obj = ***REMOVED******REMOVED***;
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) ***REMOVED***
        if (token) ***REMOVED***
            var key = token.split('=');
            obj[key[0]] = key[1];
        ***REMOVED***
    ***REMOVED***);
    return obj;
***REMOVED***;

//# sourceMappingURL=query.js.map
