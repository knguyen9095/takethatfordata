/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import ***REMOVED*** assert ***REMOVED*** from '@firebase/util';
import ***REMOVED*** doubleToIEEE754String ***REMOVED*** from '../util/util';
import ***REMOVED*** contains ***REMOVED*** from '@firebase/util';
var MAX_NODE;
export function setMaxNode(val) ***REMOVED***
    MAX_NODE = val;
***REMOVED***
/**
 * @param ***REMOVED***(!string|!number)***REMOVED*** priority
 * @return ***REMOVED***!string***REMOVED***
 */
export var priorityHashText = function (priority) ***REMOVED***
    if (typeof priority === 'number')
        return 'number:' + doubleToIEEE754String(priority);
    else
        return 'string:' + priority;
***REMOVED***;
/**
 * Validates that a priority snapshot Node is valid.
 *
 * @param ***REMOVED***!Node***REMOVED*** priorityNode
 */
export var validatePriorityNode = function (priorityNode) ***REMOVED***
    if (priorityNode.isLeafNode()) ***REMOVED***
        var val = priorityNode.val();
        assert(typeof val === 'string' ||
            typeof val === 'number' ||
            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');
    ***REMOVED***
    else ***REMOVED***
        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');
    ***REMOVED***
    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.
    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), "Priority nodes can't have a priority of their own.");
***REMOVED***;

//# sourceMappingURL=snap.js.map
