***REMOVED***"version":3,"sources":["../src/core/snap/indexes/PathIndex.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,EAAE,SAAS,EAAQ,MAAM,SAAS,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAG/C;;;;GAIG;AACH;IAA+B,6BAAK;IAClC,mBAAoB,UAAgB;QAApC,YACE,iBAAO,SAMR;QAPmB,gBAAU,GAAV,UAAU,CAAM;QAGlC,MAAM,CACJ,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,UAAU,CAAC,QAAQ,EAAE,KAAK,WAAW,EAC9D,yDAAyD,CAC1D,CAAC;;IACJ,CAAC;IAED;;;;OAIG;IACO,gCAAY,GAAtB,UAAuB,IAAU;QAC/B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACH,+BAAW,GAAX,UAAY,IAAU;QACpB,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,2BAAO,GAAP,UAAQ,CAAY,EAAE,CAAY;QAChC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;IACH,CAAC;IAED;;OAEG;IACH,4BAAQ,GAAR,UAAS,UAAkB,EAAE,IAAY;QACvC,IAAM,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAC9C,IAAI,CAAC,UAAU,EACf,SAAS,CACV,CAAC;QACF,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,2BAAO,GAAP;QACE,IAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC5E,MAAM,CAAC,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,4BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IACH,gBAAC;AAAD,CAlEA,AAkEC,CAlE8B,KAAK,GAkEnC","file":"PathIndex.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** assert ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** nameCompare, MAX_NAME ***REMOVED*** from '../../util/util';\nimport ***REMOVED*** Index ***REMOVED*** from './Index';\nimport ***REMOVED*** ChildrenNode, MAX_NODE ***REMOVED*** from '../ChildrenNode';\nimport ***REMOVED*** NamedNode, Node ***REMOVED*** from '../Node';\nimport ***REMOVED*** nodeFromJSON ***REMOVED*** from '../nodeFromJSON';\nimport ***REMOVED*** Path ***REMOVED*** from '../../util/Path';\n\n/**\n * @param ***REMOVED***!Path***REMOVED*** indexPath\n * @constructor\n * @extends ***REMOVED***Index***REMOVED***\n */\nexport class PathIndex extends Index ***REMOVED***\n  constructor(private indexPath_: Path) ***REMOVED***\n    super();\n\n    assert(\n      !indexPath_.isEmpty() && indexPath_.getFront() !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Node***REMOVED*** snap\n   * @return ***REMOVED***!Node***REMOVED***\n   * @protected\n   */\n  protected extractChild(snap: Node): Node ***REMOVED***\n    return snap.getChild(this.indexPath_);\n  ***REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean ***REMOVED***\n    return !node.getChild(this.indexPath_).isEmpty();\n  ***REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number ***REMOVED***\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) ***REMOVED***\n      return nameCompare(a.name, b.name);\n    ***REMOVED*** else ***REMOVED***\n      return indexCmp;\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  makePost(indexValue: object, name: string): NamedNode ***REMOVED***\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  ***REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode ***REMOVED***\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  ***REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string ***REMOVED***\n    return this.indexPath_.slice().join('/');\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***