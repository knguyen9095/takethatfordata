import ***REMOVED*** Index ***REMOVED*** from './Index';
import ***REMOVED*** NamedNode, Node ***REMOVED*** from '../Node';
import ***REMOVED*** Path ***REMOVED*** from '../../util/Path';
/**
 * @param ***REMOVED***!Path***REMOVED*** indexPath
 * @constructor
 * @extends ***REMOVED***Index***REMOVED***
 */
export declare class PathIndex extends Index ***REMOVED***
    private indexPath_;
    constructor(indexPath_: Path);
    /**
     * @param ***REMOVED***!Node***REMOVED*** snap
     * @return ***REMOVED***!Node***REMOVED***
     * @protected
     */
    protected extractChild(snap: Node): Node;
    /**
     * @inheritDoc
     */
    isDefinedOn(node: Node): boolean;
    /**
     * @inheritDoc
     */
    compare(a: NamedNode, b: NamedNode): number;
    /**
     * @inheritDoc
     */
    makePost(indexValue: object, name: string): NamedNode;
    /**
     * @inheritDoc
     */
    maxPost(): NamedNode;
    /**
     * @inheritDoc
     */
    toString(): string;
***REMOVED***
