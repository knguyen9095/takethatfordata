/**
 * A class that holds metadata about a Repo object
 *
 * @constructor
 */
export declare class RepoInfo ***REMOVED***
    secure: boolean;
    namespace: string;
    webSocketOnly: boolean;
    persistenceKey: string;
    host: string;
    domain: string;
    internalHost: string;
    /**
     * @param ***REMOVED***string***REMOVED*** host Hostname portion of the url for the repo
     * @param ***REMOVED***boolean***REMOVED*** secure Whether or not this repo is accessed over ssl
     * @param ***REMOVED***string***REMOVED*** namespace The namespace represented by the repo
     * @param ***REMOVED***boolean***REMOVED*** webSocketOnly Whether to prefer websockets over all other transports (used by Nest).
     * @param ***REMOVED***string=***REMOVED*** persistenceKey Override the default session persistence storage key
     */
    constructor(host: string, secure: boolean, namespace: string, webSocketOnly: boolean, persistenceKey?: string);
    needsQueryParam(): boolean;
    isCacheableHost(): boolean;
    isDemoHost(): boolean;
    isCustomHost(): boolean;
    updateHost(newHost: string): void;
    /**
     * Returns the websocket URL for this repo
     * @param ***REMOVED***string***REMOVED*** type of connection
     * @param ***REMOVED***Object***REMOVED*** params list
     * @return ***REMOVED***string***REMOVED*** The URL for this repo
     */
    connectionURL(type: string, params: ***REMOVED***
        [k: string]: string;
    ***REMOVED***): string;
    /** @return ***REMOVED***string***REMOVED*** */
    toString(): string;
    /** @return ***REMOVED***string***REMOVED*** */
    toURLString(): string;
***REMOVED***
