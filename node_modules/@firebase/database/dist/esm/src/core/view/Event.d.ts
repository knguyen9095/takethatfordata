import ***REMOVED*** Path ***REMOVED*** from '../util/Path';
import ***REMOVED*** EventRegistration ***REMOVED*** from './EventRegistration';
import ***REMOVED*** DataSnapshot ***REMOVED*** from '../../api/DataSnapshot';
/**
 * Encapsulates the data needed to raise an event
 * @interface
 */
export interface Event ***REMOVED***
    /**
     * @return ***REMOVED***!Path***REMOVED***
     */
    getPath(): Path;
    /**
     * @return ***REMOVED***!string***REMOVED***
     */
    getEventType(): string;
    /**
     * @return ***REMOVED***!function()***REMOVED***
     */
    getEventRunner(): () => void;
    /**
     * @return ***REMOVED***!string***REMOVED***
     */
    toString(): string;
***REMOVED***
/**
 * Encapsulates the data needed to raise an event
 * @implements ***REMOVED***Event***REMOVED***
 */
export declare class DataEvent implements Event ***REMOVED***
    eventType: 'value' | ' child_added' | ' child_changed' | ' child_moved' | ' child_removed';
    eventRegistration: EventRegistration;
    snapshot: DataSnapshot;
    prevName: string | null;
    /**
     * @param ***REMOVED***!string***REMOVED*** eventType One of: value, child_added, child_changed, child_moved, child_removed
     * @param ***REMOVED***!EventRegistration***REMOVED*** eventRegistration The function to call to with the event data. User provided
     * @param ***REMOVED***!DataSnapshot***REMOVED*** snapshot The data backing the event
     * @param ***REMOVED***?string=***REMOVED*** prevName Optional, the name of the previous child for child_* events.
     */
    constructor(eventType: 'value' | ' child_added' | ' child_changed' | ' child_moved' | ' child_removed', eventRegistration: EventRegistration, snapshot: DataSnapshot, prevName?: string | null);
    /**
     * @inheritDoc
     */
    getPath(): Path;
    /**
     * @inheritDoc
     */
    getEventType(): string;
    /**
     * @inheritDoc
     */
    getEventRunner(): () => void;
    /**
     * @inheritDoc
     */
    toString(): string;
***REMOVED***
export declare class CancelEvent implements Event ***REMOVED***
    eventRegistration: EventRegistration;
    error: Error;
    path: Path;
    /**
     * @param ***REMOVED***EventRegistration***REMOVED*** eventRegistration
     * @param ***REMOVED***Error***REMOVED*** error
     * @param ***REMOVED***!Path***REMOVED*** path
     */
    constructor(eventRegistration: EventRegistration, error: Error, path: Path);
    /**
     * @inheritDoc
     */
    getPath(): Path;
    /**
     * @inheritDoc
     */
    getEventType(): string;
    /**
     * @inheritDoc
     */
    getEventRunner(): () => void;
    /**
     * @inheritDoc
     */
    toString(): string;
***REMOVED***
