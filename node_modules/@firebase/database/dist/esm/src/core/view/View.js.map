***REMOVED***"version":3,"sources":["../src/core/view/View.ts"],"names":[],"mappings":"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","file":"View.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** IndexedFilter ***REMOVED*** from './filter/IndexedFilter';\nimport ***REMOVED*** ViewProcessor ***REMOVED*** from './ViewProcessor';\nimport ***REMOVED*** ChildrenNode ***REMOVED*** from '../snap/ChildrenNode';\nimport ***REMOVED*** CacheNode ***REMOVED*** from './CacheNode';\nimport ***REMOVED*** ViewCache ***REMOVED*** from './ViewCache';\nimport ***REMOVED*** EventGenerator ***REMOVED*** from './EventGenerator';\nimport ***REMOVED*** assert ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** Operation, OperationType ***REMOVED*** from '../operation/Operation';\nimport ***REMOVED*** Change ***REMOVED*** from './Change';\nimport ***REMOVED*** PRIORITY_INDEX ***REMOVED*** from '../snap/indexes/PriorityIndex';\nimport ***REMOVED*** Query ***REMOVED*** from '../../api/Query';\nimport ***REMOVED*** EventRegistration ***REMOVED*** from './EventRegistration';\nimport ***REMOVED*** Node ***REMOVED*** from '../snap/Node';\nimport ***REMOVED*** Path ***REMOVED*** from '../util/Path';\nimport ***REMOVED*** WriteTreeRef ***REMOVED*** from '../WriteTree';\nimport ***REMOVED*** CancelEvent, Event ***REMOVED*** from './Event';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nexport class View ***REMOVED***\n  private processor_: ViewProcessor;\n  private viewCache_: ViewCache;\n  private eventRegistrations_: EventRegistration[] = [];\n  private eventGenerator_: EventGenerator;\n\n  /**\n   *\n   * @param ***REMOVED***!Query***REMOVED*** query_\n   * @param ***REMOVED***!ViewCache***REMOVED*** initialViewCache\n   */\n  constructor(private query_: Query, initialViewCache: ViewCache) ***REMOVED***\n    const params = this.query_.getQueryParams();\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = params.getNodeFilter();\n\n    /**\n     * @type ***REMOVED***ViewProcessor***REMOVED***\n     * @private\n     */\n    this.processor_ = new ViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.getServerCache();\n    const initialEventCache = initialViewCache.getEventCache();\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    /**\n     * @type ***REMOVED***!ViewCache***REMOVED***\n     * @private\n     */\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n\n    /**\n     * @type ***REMOVED***!EventGenerator***REMOVED***\n     * @private\n     */\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***!Query***REMOVED***\n   */\n  getQuery(): Query ***REMOVED***\n    return this.query_;\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***?Node***REMOVED***\n   */\n  getServerCache(): Node | null ***REMOVED***\n    return this.viewCache_.getServerCache().getNode();\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @return ***REMOVED***?Node***REMOVED***\n   */\n  getCompleteServerCache(path: Path): Node | null ***REMOVED***\n    const cache = this.viewCache_.getCompleteServerSnap();\n    if (cache) ***REMOVED***\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (\n        this.query_.getQueryParams().loadsAllData() ||\n        (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())\n      ) ***REMOVED***\n        return cache.getChild(path);\n      ***REMOVED***\n    ***REMOVED***\n    return null;\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***boolean***REMOVED***\n   */\n  isEmpty(): boolean ***REMOVED***\n    return this.eventRegistrations_.length === 0;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!EventRegistration***REMOVED*** eventRegistration\n   */\n  addEventRegistration(eventRegistration: EventRegistration) ***REMOVED***\n    this.eventRegistrations_.push(eventRegistration);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***?EventRegistration***REMOVED*** eventRegistration If null, remove all callbacks.\n   * @param ***REMOVED***Error=***REMOVED*** cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return ***REMOVED***!Array.<!Event>***REMOVED*** Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] ***REMOVED***\n    const cancelEvents: CancelEvent[] = [];\n    if (cancelError) ***REMOVED***\n      assert(\n        eventRegistration == null,\n        'A cancel should cancel all event registrations.'\n      );\n      const path = this.query_.path;\n      this.eventRegistrations_.forEach(function(registration) ***REMOVED***\n        cancelError /** @type ***REMOVED***!Error***REMOVED*** */ = cancelError;\n        const maybeEvent = registration.createCancelEvent(cancelError, path);\n        if (maybeEvent) ***REMOVED***\n          cancelEvents.push(maybeEvent);\n        ***REMOVED***\n      ***REMOVED***);\n    ***REMOVED***\n\n    if (eventRegistration) ***REMOVED***\n      let remaining = [];\n      for (let i = 0; i < this.eventRegistrations_.length; ++i) ***REMOVED***\n        const existing = this.eventRegistrations_[i];\n        if (!existing.matches(eventRegistration)) ***REMOVED***\n          remaining.push(existing);\n        ***REMOVED*** else if (eventRegistration.hasAnyCallback()) ***REMOVED***\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        ***REMOVED***\n      ***REMOVED***\n      this.eventRegistrations_ = remaining;\n    ***REMOVED*** else ***REMOVED***\n      this.eventRegistrations_ = [];\n    ***REMOVED***\n    return cancelEvents;\n  ***REMOVED***\n\n  /**\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\n   *\n   * @param ***REMOVED***!Operation***REMOVED*** operation\n   * @param ***REMOVED***!WriteTreeRef***REMOVED*** writesCache\n   * @param ***REMOVED***?Node***REMOVED*** completeServerCache\n   * @return ***REMOVED***!Array.<!Event>***REMOVED***\n   */\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null\n  ): Event[] ***REMOVED***\n    if (\n      operation.type === OperationType.MERGE &&\n      operation.source.queryId !== null\n    ) ***REMOVED***\n      assert(\n        this.viewCache_.getCompleteServerSnap(),\n        'We should always have a full cache before handling merges'\n      );\n      assert(\n        this.viewCache_.getCompleteEventSnap(),\n        'Missing event cache, even though we have a server cache'\n      );\n    ***REMOVED***\n\n    const oldViewCache = this.viewCache_;\n    const result = this.processor_.applyOperation(\n      oldViewCache,\n      operation,\n      writesCache,\n      completeServerCache\n    );\n    this.processor_.assertIndexed(result.viewCache);\n\n    assert(\n      result.viewCache.getServerCache().isFullyInitialized() ||\n        !oldViewCache.getServerCache().isFullyInitialized(),\n      'Once a server snap is complete, it should never go back'\n    );\n\n    this.viewCache_ = result.viewCache;\n\n    return this.generateEventsForChanges_(\n      result.changes,\n      result.viewCache.getEventCache().getNode(),\n      null\n    );\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!EventRegistration***REMOVED*** registration\n   * @return ***REMOVED***!Array.<!Event>***REMOVED***\n   */\n  getInitialEvents(registration: EventRegistration): Event[] ***REMOVED***\n    const eventSnap = this.viewCache_.getEventCache();\n    const initialChanges: Change[] = [];\n    if (!eventSnap.getNode().isLeafNode()) ***REMOVED***\n      const eventNode = eventSnap.getNode() as ChildrenNode;\n      eventNode.forEachChild(PRIORITY_INDEX, function(key, childNode) ***REMOVED***\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      ***REMOVED***);\n    ***REMOVED***\n    if (eventSnap.isFullyInitialized()) ***REMOVED***\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    ***REMOVED***\n    return this.generateEventsForChanges_(\n      initialChanges,\n      eventSnap.getNode(),\n      registration\n    );\n  ***REMOVED***\n\n  /**\n   * @private\n   * @param ***REMOVED***!Array.<!Change>***REMOVED*** changes\n   * @param ***REMOVED***!Node***REMOVED*** eventCache\n   * @param ***REMOVED***EventRegistration=***REMOVED*** eventRegistration\n   * @return ***REMOVED***!Array.<!Event>***REMOVED***\n   */\n  generateEventsForChanges_(\n    changes: Change[],\n    eventCache: Node,\n    eventRegistration?: EventRegistration\n  ): Event[] ***REMOVED***\n    const registrations = eventRegistration\n      ? [eventRegistration]\n      : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(\n      changes,\n      eventCache,\n      registrations\n    );\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***