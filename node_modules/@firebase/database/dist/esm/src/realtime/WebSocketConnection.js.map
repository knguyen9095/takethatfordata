***REMOVED***"version":3,"sources":["../src/realtime/WebSocketConnection.ts"],"names":[],"mappings":"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","file":"WebSocketConnection.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** RepoInfo ***REMOVED*** from '../core/RepoInfo';\n\ndeclare const MozWebSocket: any;\n\nimport firebase from '@firebase/app';\nimport ***REMOVED*** assert ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** logWrapper, splitStringBySize ***REMOVED*** from '../core/util/util';\nimport ***REMOVED*** StatsManager ***REMOVED*** from '../core/stats/StatsManager';\nimport ***REMOVED***\n  FORGE_DOMAIN,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n***REMOVED*** from './Constants';\nimport ***REMOVED*** CONSTANTS as ENV_CONSTANTS ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** PersistentStorage ***REMOVED*** from '../core/storage/storage';\nimport ***REMOVED*** jsonEval, stringify ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** isNodeSdk ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** Transport ***REMOVED*** from './Transport';\nimport ***REMOVED*** StatsCollection ***REMOVED*** from '../core/stats/StatsCollection';\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') ***REMOVED***\n  WebSocketImpl = MozWebSocket;\n***REMOVED*** else if (typeof WebSocket !== 'undefined') ***REMOVED***\n  WebSocketImpl = WebSocket;\n***REMOVED***\n\nexport function setWebSocketImpl(impl) ***REMOVED***\n  WebSocketImpl = impl;\n***REMOVED***\n\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements ***REMOVED***Transport***REMOVED***\n */\nexport class WebSocketConnection implements Transport ***REMOVED***\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: Object) => void;\n  mySock: any | null;\n  private log_: (...a: any[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n\n  /**\n   * @param ***REMOVED***string***REMOVED*** connId identifier for this transport\n   * @param ***REMOVED***RepoInfo***REMOVED*** repoInfo The info for the websocket endpoint.\n   * @param ***REMOVED***string=***REMOVED*** transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param ***REMOVED***string=***REMOVED*** lastSessionId Optional lastSessionId if there was a previous connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) ***REMOVED***\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId\n    );\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***RepoInfo***REMOVED*** repoInfo The info for the websocket endpoint.\n   * @param ***REMOVED***string=***REMOVED*** transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param ***REMOVED***string=***REMOVED*** lastSessionId Optional lastSessionId if there was a previous connection\n   * @return ***REMOVED***string***REMOVED*** connection url\n   * @private\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ): string ***REMOVED***\n    const urlParams: ***REMOVED*** [k: string]: string ***REMOVED*** = ***REMOVED******REMOVED***;\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.href &&\n      location.href.indexOf(FORGE_DOMAIN) !== -1\n    ) ***REMOVED***\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    ***REMOVED***\n    if (transportSessionId) ***REMOVED***\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    ***REMOVED***\n    if (lastSessionId) ***REMOVED***\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    ***REMOVED***\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  ***REMOVED***\n\n  /**\n   *\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: Object) => void, onDisconnect: (a?: boolean) => void) ***REMOVED***\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try ***REMOVED***\n      if (isNodeSdk()) ***REMOVED***\n        const device = ENV_CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: ***REMOVED*** [k: string]: object ***REMOVED*** = ***REMOVED***\n          headers: ***REMOVED***\n            'User-Agent': `Firebase/$***REMOVED***PROTOCOL_VERSION***REMOVED***/$***REMOVED***\n              firebase.SDK_VERSION\n            ***REMOVED***/$***REMOVED***process.platform***REMOVED***/$***REMOVED***device***REMOVED***`\n          ***REMOVED***\n        ***REMOVED***;\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') == 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) ***REMOVED***\n          options['proxy'] = ***REMOVED*** origin: proxy ***REMOVED***;\n        ***REMOVED***\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      ***REMOVED*** else ***REMOVED***\n        this.mySock = new WebSocketImpl(this.connURL);\n      ***REMOVED***\n    ***REMOVED*** catch (e) ***REMOVED***\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) ***REMOVED***\n        this.log_(error);\n      ***REMOVED***\n      this.onClosed_();\n      return;\n    ***REMOVED***\n\n    this.mySock.onopen = () => ***REMOVED***\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    ***REMOVED***;\n\n    this.mySock.onclose = () => ***REMOVED***\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    ***REMOVED***;\n\n    this.mySock.onmessage = (m: object) => ***REMOVED***\n      this.handleIncomingFrame(m);\n    ***REMOVED***;\n\n    this.mySock.onerror = (e: any) => ***REMOVED***\n      this.log_('WebSocket error.  Closing connection.');\n      const error = e.message || e.data;\n      if (error) ***REMOVED***\n        this.log_(error);\n      ***REMOVED***\n      this.onClosed_();\n    ***REMOVED***;\n  ***REMOVED***\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() ***REMOVED******REMOVED***\n\n  static forceDisallow_: Boolean;\n\n  static forceDisallow() ***REMOVED***\n    WebSocketConnection.forceDisallow_ = true;\n  ***REMOVED***\n\n  static isAvailable(): boolean ***REMOVED***\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) ***REMOVED***\n      const oldAndroidRegex = /Android ([0-9]***REMOVED***0,***REMOVED***\\.[0-9]***REMOVED***0,***REMOVED***)/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) ***REMOVED***\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) ***REMOVED***\n          isOldAndroid = true;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  ***REMOVED***\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   * @type ***REMOVED***number***REMOVED***\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   * @type ***REMOVED***number***REMOVED***\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   * @return ***REMOVED***boolean***REMOVED***\n   */\n  static previouslyFailed(): boolean ***REMOVED***\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  ***REMOVED***\n\n  markConnectionHealthy() ***REMOVED***\n    PersistentStorage.remove('previous_websocket_failure');\n  ***REMOVED***\n\n  private appendFrame_(data: string) ***REMOVED***\n    this.frames.push(data);\n    if (this.frames.length == this.totalFrames) ***REMOVED***\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess);\n\n      //handle the message\n      this.onMessage(jsonMess);\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***number***REMOVED*** frameCount The number of frames we are expecting from the server\n   * @private\n   */\n  private handleNewFrameCount_(frameCount: number) ***REMOVED***\n    this.totalFrames = frameCount;\n    this.frames = [];\n  ***REMOVED***\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @param ***REMOVED***!String***REMOVED*** data\n   * @return ***REMOVED***?String***REMOVED*** Any remaining data to be process, or null if there is none\n   * @private\n   */\n  private extractFrameCount_(data: string): string | null ***REMOVED***\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) ***REMOVED***\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) ***REMOVED***\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      ***REMOVED***\n    ***REMOVED***\n    this.handleNewFrameCount_(1);\n    return data;\n  ***REMOVED***\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess The frame data\n   */\n  handleIncomingFrame(mess: ***REMOVED*** [k: string]: any ***REMOVED***) ***REMOVED***\n    if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) ***REMOVED***\n      // we're buffering\n      this.appendFrame_(data);\n    ***REMOVED*** else ***REMOVED***\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) ***REMOVED***\n        this.appendFrame_(remainingData);\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * Send a message to the server\n   * @param ***REMOVED***Object***REMOVED*** data The JSON object to transmit\n   */\n  send(data: Object) ***REMOVED***\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) ***REMOVED***\n      this.sendString_(String(dataSegs.length));\n    ***REMOVED***\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) ***REMOVED***\n      this.sendString_(dataSegs[i]);\n    ***REMOVED***\n  ***REMOVED***\n\n  private shutdown_() ***REMOVED***\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) ***REMOVED***\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    ***REMOVED***\n\n    if (this.mySock) ***REMOVED***\n      this.mySock.close();\n      this.mySock = null;\n    ***REMOVED***\n  ***REMOVED***\n\n  private onClosed_() ***REMOVED***\n    if (!this.isClosed_) ***REMOVED***\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) ***REMOVED***\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() ***REMOVED***\n    if (!this.isClosed_) ***REMOVED***\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() ***REMOVED***\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => ***REMOVED***\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) ***REMOVED***\n        this.sendString_('0');\n      ***REMOVED***\n      this.resetKeepAlive();\n    ***REMOVED***, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  ***REMOVED***\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param ***REMOVED***string***REMOVED*** str String to send.\n   * @private\n   */\n  private sendString_(str: string) ***REMOVED***\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try ***REMOVED***\n      this.mySock.send(str);\n    ***REMOVED*** catch (e) ***REMOVED***\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***