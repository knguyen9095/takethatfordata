/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import ***REMOVED*** RepoInfo ***REMOVED*** from '../core/RepoInfo';
import ***REMOVED*** PersistentConnection ***REMOVED*** from '../core/PersistentConnection';
import ***REMOVED*** Connection ***REMOVED*** from '../realtime/Connection';
import ***REMOVED*** Query ***REMOVED*** from './Query';
export declare const DataConnection: typeof PersistentConnection;
export declare const RealTimeConnection: typeof Connection;
/**
 * @param ***REMOVED***function(): string***REMOVED*** newHash
 * @return ***REMOVED***function()***REMOVED***
 */
export declare const hijackHash: (newHash: () => string) => () => void;
/**
 * @type ***REMOVED***function(new:RepoInfo, !string, boolean, !string, boolean): undefined***REMOVED***
 */
export declare const ConnectionTarget: typeof RepoInfo;
/**
 * @param ***REMOVED***!Query***REMOVED*** query
 * @return ***REMOVED***!string***REMOVED***
 */
export declare const queryIdentifier: (query: Query) => string;
/**
 * @param ***REMOVED***!Query***REMOVED*** firebaseRef
 * @return ***REMOVED***!Object***REMOVED***
 */
export declare const listens: (firebaseRef: Query) => any;
/**
 * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.
 *
 * @param ***REMOVED***boolean***REMOVED*** forceRestClient
 */
export declare const forceRestClient: (forceRestClient: boolean) => void;
