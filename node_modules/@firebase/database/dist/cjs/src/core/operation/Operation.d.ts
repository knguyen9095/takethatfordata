import ***REMOVED*** Path ***REMOVED*** from '../util/Path';
/**
 *
 * @enum
 */
export declare enum OperationType ***REMOVED***
    OVERWRITE = 0,
    MERGE = 1,
    ACK_USER_WRITE = 2,
    LISTEN_COMPLETE = 3,
***REMOVED***
/**
 * @interface
 */
export interface Operation ***REMOVED***
    /**
     * @type ***REMOVED***!OperationSource***REMOVED***
     */
    source: OperationSource;
    /**
     * @type ***REMOVED***!OperationType***REMOVED***
     */
    type: OperationType;
    /**
     * @type ***REMOVED***!Path***REMOVED***
     */
    path: Path;
    /**
     * @param ***REMOVED***string***REMOVED*** childName
     * @return ***REMOVED***?Operation***REMOVED***
     */
    operationForChild(childName: string): Operation | null;
***REMOVED***
/**
 * @param ***REMOVED***boolean***REMOVED*** fromUser
 * @param ***REMOVED***boolean***REMOVED*** fromServer
 * @param ***REMOVED***?string***REMOVED*** queryId
 * @param ***REMOVED***boolean***REMOVED*** tagged
 * @constructor
 */
export declare class OperationSource ***REMOVED***
    fromUser: boolean;
    fromServer: boolean;
    queryId: string | null;
    tagged: boolean;
    constructor(fromUser: boolean, fromServer: boolean, queryId: string | null, tagged: boolean);
    /**
     * @const
     * @type ***REMOVED***!OperationSource***REMOVED***
     */
    static User: OperationSource;
    /**
     * @const
     * @type ***REMOVED***!OperationSource***REMOVED***
     */
    static Server: OperationSource;
    /**
     * @param ***REMOVED***string***REMOVED*** queryId
     * @return ***REMOVED***!OperationSource***REMOVED***
     */
    static forServerTaggedQuery: (queryId: string) => OperationSource;
***REMOVED***
