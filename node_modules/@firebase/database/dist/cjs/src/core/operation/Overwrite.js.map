***REMOVED***"version":3,"sources":["../src/core/operation/Overwrite.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,yCAAwE;AACxE,qCAAoC;AAGpC;;;;;;GAMG;AACH;IAIE,mBACS,MAAuB,EACvB,IAAU,EACV,IAAU;QAFV,WAAM,GAAN,MAAM,CAAiB;QACvB,SAAI,GAAJ,IAAI,CAAM;QACV,SAAI,GAAJ,IAAI,CAAM;QANnB,kBAAkB;QAClB,SAAI,GAAG,yBAAa,CAAC,SAAS,CAAC;IAM5B,CAAC;IAEJ,qCAAiB,GAAjB,UAAkB,SAAiB;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,SAAS,CAClB,IAAI,CAAC,MAAM,EACX,WAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CACvC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IACH,gBAAC;AAAD,CArBA,AAqBC,IAAA;AArBY,8BAAS","file":"Overwrite.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** Operation, OperationSource, OperationType ***REMOVED*** from './Operation';\nimport ***REMOVED*** Path ***REMOVED*** from '../util/Path';\nimport ***REMOVED*** Node ***REMOVED*** from '../snap/Node';\n\n/**\n * @param ***REMOVED***!OperationSource***REMOVED*** source\n * @param ***REMOVED***!Path***REMOVED*** path\n * @param ***REMOVED***!Node***REMOVED*** snap\n * @constructor\n * @implements ***REMOVED***Operation***REMOVED***\n */\nexport class Overwrite implements Operation ***REMOVED***\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) ***REMOVED******REMOVED***\n\n  operationForChild(childName: string): Overwrite ***REMOVED***\n    if (this.path.isEmpty()) ***REMOVED***\n      return new Overwrite(\n        this.source,\n        Path.Empty,\n        this.snap.getImmediateChild(childName)\n      );\n    ***REMOVED*** else ***REMOVED***\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***