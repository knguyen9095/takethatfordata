***REMOVED***"version":3,"sources":["../src/core/operation/Merge.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,yCAAwE;AACxE,yCAAwC;AACxC,qCAAoC;AACpC,uCAAwC;AAIxC;;;;;;GAMG;AACH;IAIE;QACE,iBAAiB,CAAQ,MAAuB;QAChD,iBAAiB,CAAQ,IAAU;QACnC,iBAAiB,CAAQ,QAA6B;QAF7B,WAAM,GAAN,MAAM,CAAiB;QACvB,SAAI,GAAJ,IAAI,CAAM;QACV,aAAQ,GAAR,QAAQ,CAAqB;QANxD,kBAAkB;QAClB,SAAI,GAAG,yBAAa,CAAC,KAAK,CAAC;IAMxB,CAAC;IAEJ;;OAEG;IACH,iCAAiB,GAAjB,UAAkB,SAAiB;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACxB,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACxB,2BAA2B;gBAC3B,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3B,yFAAyF;gBACzF,MAAM,CAAC,IAAI,qBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,WAAI,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YACjE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,oCAAoC;gBACpC,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,WAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACvD,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,aAAM,CACJ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,SAAS,EAClC,gEAAgE,CACjE,CAAC;YACF,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED;;OAEG;IACH,wBAAQ,GAAR;QACE,MAAM,CAAC,CACL,YAAY;YACZ,IAAI,CAAC,IAAI;YACT,IAAI;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACtB,UAAU;YACV,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACxB,GAAG,CACJ,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,sBAAK","file":"Merge.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** Operation, OperationSource, OperationType ***REMOVED*** from './Operation';\nimport ***REMOVED*** Overwrite ***REMOVED*** from './Overwrite';\nimport ***REMOVED*** Path ***REMOVED*** from '../util/Path';\nimport ***REMOVED*** assert ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** ImmutableTree ***REMOVED*** from '../util/ImmutableTree';\nimport ***REMOVED*** Node ***REMOVED*** from '../snap/Node';\n\n/**\n * @param ***REMOVED***!OperationSource***REMOVED*** source\n * @param ***REMOVED***!Path***REMOVED*** path\n * @param ***REMOVED***!ImmutableTree.<!Node>***REMOVED*** children\n * @constructor\n * @implements ***REMOVED***Operation***REMOVED***\n */\nexport class Merge implements Operation ***REMOVED***\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /**@inheritDoc */ public source: OperationSource,\n    /**@inheritDoc */ public path: Path,\n    /**@inheritDoc */ public children: ImmutableTree<Node>\n  ) ***REMOVED******REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): Operation ***REMOVED***\n    if (this.path.isEmpty()) ***REMOVED***\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) ***REMOVED***\n        // This child is unaffected\n        return null;\n      ***REMOVED*** else if (childTree.value) ***REMOVED***\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      ***REMOVED*** else ***REMOVED***\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      ***REMOVED***\n    ***REMOVED*** else ***REMOVED***\n      assert(\n        this.path.getFront() === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, this.path.popFront(), this.children);\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string ***REMOVED***\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***