***REMOVED***"version":3,"sources":["../src/core/view/ChildChangeAccumulator.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,uCAAoD;AACpD,mCAAkC;AAClC,uCAAwD;AAExD;;GAEG;AACH;IAAA;QACU,eAAU,GAA4B,EAAE,CAAC;IA4EnD,CAAC;IA1EC;;OAEG;IACH,iDAAgB,GAAhB,UAAiB,MAAc;QAC7B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAM,QAAQ,CAAC,sBAAsB,GAAG,MAAM,CAAC,SAAS,CAAC;QACzD,aAAM,CACJ,IAAI,IAAI,eAAM,CAAC,WAAW;YACxB,IAAI,IAAI,eAAM,CAAC,aAAa;YAC5B,IAAI,IAAI,eAAM,CAAC,aAAa,EAC9B,2CAA2C,CAC5C,CAAC;QACF,aAAM,CACJ,QAAQ,KAAK,WAAW,EACxB,iDAAiD,CAClD,CAAC;QACF,IAAM,SAAS,GAAG,cAAO,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAW,CAAC;QAC/D,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,IAAI,eAAM,CAAC,WAAW,IAAI,OAAO,IAAI,eAAM,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,eAAM,CAAC,kBAAkB,CACnD,QAAQ,EACR,MAAM,CAAC,YAAY,EACnB,SAAS,CAAC,YAAY,CACvB,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,IAAI,eAAM,CAAC,aAAa;gBAC5B,OAAO,IAAI,eAAM,CAAC,WACpB,CAAC,CAAC,CAAC;gBACD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,IAAI,eAAM,CAAC,aAAa;gBAC5B,OAAO,IAAI,eAAM,CAAC,aACpB,CAAC,CAAC,CAAC;gBACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,eAAM,CAAC,kBAAkB,CACnD,QAAQ,EACR,SAAS,CAAC,OAAO,CAClB,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,IAAI,eAAM,CAAC,aAAa;gBAC5B,OAAO,IAAI,eAAM,CAAC,WACpB,CAAC,CAAC,CAAC;gBACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,eAAM,CAAC,gBAAgB,CACjD,QAAQ,EACR,MAAM,CAAC,YAAY,CACpB,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,IAAI,eAAM,CAAC,aAAa;gBAC5B,OAAO,IAAI,eAAM,CAAC,aACpB,CAAC,CAAC,CAAC;gBACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,eAAM,CAAC,kBAAkB,CACnD,QAAQ,EACR,MAAM,CAAC,YAAY,EACnB,SAAS,CAAC,OAAO,CAClB,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,qBAAc,CAClB,kCAAkC;oBAChC,MAAM;oBACN,kBAAkB;oBAClB,SAAS,CACZ,CAAC;YACJ,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;QACrC,CAAC;IACH,CAAC;IAED;;OAEG;IACH,2CAAU,GAAV;QACE,MAAM,CAAC,gBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IACH,6BAAC;AAAD,CA7EA,AA6EC,IAAA;AA7EY,wDAAsB","file":"ChildChangeAccumulator.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** getValues, safeGet ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** Change ***REMOVED*** from './Change';\nimport ***REMOVED*** assert, assertionError ***REMOVED*** from '@firebase/util';\n\n/**\n * @constructor\n */\nexport class ChildChangeAccumulator ***REMOVED***\n  private changeMap_: ***REMOVED*** [k: string]: Change ***REMOVED*** = ***REMOVED******REMOVED***;\n\n  /**\n   * @param ***REMOVED***!Change***REMOVED*** change\n   */\n  trackChildChange(change: Change) ***REMOVED***\n    const type = change.type;\n    const childKey /** @type ***REMOVED***!string***REMOVED*** */ = change.childName;\n    assert(\n      type == Change.CHILD_ADDED ||\n        type == Change.CHILD_CHANGED ||\n        type == Change.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = safeGet(this.changeMap_, childKey) as Change;\n    if (oldChange) ***REMOVED***\n      const oldType = oldChange.type;\n      if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) ***REMOVED***\n        this.changeMap_[childKey] = Change.childChangedChange(\n          childKey,\n          change.snapshotNode,\n          oldChange.snapshotNode\n        );\n      ***REMOVED*** else if (\n        type == Change.CHILD_REMOVED &&\n        oldType == Change.CHILD_ADDED\n      ) ***REMOVED***\n        delete this.changeMap_[childKey];\n      ***REMOVED*** else if (\n        type == Change.CHILD_REMOVED &&\n        oldType == Change.CHILD_CHANGED\n      ) ***REMOVED***\n        this.changeMap_[childKey] = Change.childRemovedChange(\n          childKey,\n          oldChange.oldSnap\n        );\n      ***REMOVED*** else if (\n        type == Change.CHILD_CHANGED &&\n        oldType == Change.CHILD_ADDED\n      ) ***REMOVED***\n        this.changeMap_[childKey] = Change.childAddedChange(\n          childKey,\n          change.snapshotNode\n        );\n      ***REMOVED*** else if (\n        type == Change.CHILD_CHANGED &&\n        oldType == Change.CHILD_CHANGED\n      ) ***REMOVED***\n        this.changeMap_[childKey] = Change.childChangedChange(\n          childKey,\n          change.snapshotNode,\n          oldChange.oldSnap\n        );\n      ***REMOVED*** else ***REMOVED***\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      ***REMOVED***\n    ***REMOVED*** else ***REMOVED***\n      this.changeMap_[childKey] = change;\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***!Array.<!Change>***REMOVED***\n   */\n  getChanges(): Change[] ***REMOVED***\n    return getValues(this.changeMap_);\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***