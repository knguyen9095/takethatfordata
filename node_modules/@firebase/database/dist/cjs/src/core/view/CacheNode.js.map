***REMOVED***"version":3,"sources":["../src/core/view/CacheNode.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAKH;;;;;GAKG;AACH;IACE;;;;OAIG;IACH,mBACU,KAAW,EACX,iBAA0B,EAC1B,SAAkB;QAFlB,UAAK,GAAL,KAAK,CAAM;QACX,sBAAiB,GAAjB,iBAAiB,CAAS;QAC1B,cAAS,GAAT,SAAS,CAAS;IACzB,CAAC;IAEJ;;;OAGG;IACH,sCAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,8BAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,qCAAiB,GAAjB,UAAkB,IAAU;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACtD,CAAC;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACH,sCAAkB,GAAlB,UAAmB,GAAW;QAC5B,MAAM,CAAC,CACL,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAC3E,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,2BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACH,gBAAC;AAAD,CAzDA,AAyDC,IAAA;AAzDY,8BAAS","file":"CacheNode.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** Node ***REMOVED*** from '../snap/Node';\nimport ***REMOVED*** Path ***REMOVED*** from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode ***REMOVED***\n  /**\n   * @param ***REMOVED***!Node***REMOVED*** node_\n   * @param ***REMOVED***boolean***REMOVED*** fullyInitialized_\n   * @param ***REMOVED***boolean***REMOVED*** filtered_\n   */\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) ***REMOVED******REMOVED***\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   * @return ***REMOVED***boolean***REMOVED***\n   */\n  isFullyInitialized(): boolean ***REMOVED***\n    return this.fullyInitialized_;\n  ***REMOVED***\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   * @return ***REMOVED***boolean***REMOVED***\n   */\n  isFiltered(): boolean ***REMOVED***\n    return this.filtered_;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @return ***REMOVED***boolean***REMOVED***\n   */\n  isCompleteForPath(path: Path): boolean ***REMOVED***\n    if (path.isEmpty()) ***REMOVED***\n      return this.isFullyInitialized() && !this.filtered_;\n    ***REMOVED***\n\n    const childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!string***REMOVED*** key\n   * @return ***REMOVED***boolean***REMOVED***\n   */\n  isCompleteForChild(key: string): boolean ***REMOVED***\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***!Node***REMOVED***\n   */\n  getNode(): Node ***REMOVED***\n    return this.node_;\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***