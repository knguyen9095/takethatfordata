***REMOVED***"version":3,"sources":["../src/core/Repo.ts"],"names":[],"mappings":"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","file":"Repo.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED***\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n***REMOVED*** from './util/ServerValues';\nimport ***REMOVED*** nodeFromJSON ***REMOVED*** from './snap/nodeFromJSON';\nimport ***REMOVED*** Path ***REMOVED*** from './util/Path';\nimport ***REMOVED*** SparseSnapshotTree ***REMOVED*** from './SparseSnapshotTree';\nimport ***REMOVED*** SyncTree ***REMOVED*** from './SyncTree';\nimport ***REMOVED*** SnapshotHolder ***REMOVED*** from './SnapshotHolder';\nimport ***REMOVED*** stringify ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** beingCrawled, each, exceptionGuard, warn, log ***REMOVED*** from './util/util';\nimport ***REMOVED*** map, forEach, isEmpty ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** AuthTokenProvider ***REMOVED*** from './AuthTokenProvider';\nimport ***REMOVED*** StatsManager ***REMOVED*** from './stats/StatsManager';\nimport ***REMOVED*** StatsReporter ***REMOVED*** from './stats/StatsReporter';\nimport ***REMOVED*** StatsListener ***REMOVED*** from './stats/StatsListener';\nimport ***REMOVED*** EventQueue ***REMOVED*** from './view/EventQueue';\nimport ***REMOVED*** PersistentConnection ***REMOVED*** from './PersistentConnection';\nimport ***REMOVED*** ReadonlyRestClient ***REMOVED*** from './ReadonlyRestClient';\nimport ***REMOVED*** FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport ***REMOVED*** RepoInfo ***REMOVED*** from './RepoInfo';\nimport ***REMOVED*** Database ***REMOVED*** from '../api/Database';\nimport ***REMOVED*** ServerActions ***REMOVED*** from './ServerActions';\nimport ***REMOVED*** Query ***REMOVED*** from '../api/Query';\nimport ***REMOVED*** EventRegistration ***REMOVED*** from './view/EventRegistration';\nimport ***REMOVED*** StatsCollection ***REMOVED*** from './stats/StatsCollection';\nimport ***REMOVED*** Event ***REMOVED*** from './view/Event';\nimport ***REMOVED*** Node ***REMOVED*** from './snap/Node';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo ***REMOVED***\n  dataUpdateCount = 0;\n  private infoSyncTree_: SyncTree;\n  private serverSyncTree_: SyncTree;\n\n  private stats_: StatsCollection;\n  private statsListener_: StatsListener | null = null;\n  private eventQueue_ = new EventQueue();\n  private nextWriteId_ = 1;\n  private server_: ServerActions;\n  private statsReporter_: StatsReporter;\n  private transactions_init_: () => void;\n  private infoData_: SnapshotHolder;\n  private abortTransactions_: (path: Path) => Path;\n  private rerunTransactions_: (changedPath: Path) => Path;\n  private interceptServerDataCallback_:\n    | ((a: string, b: any) => void)\n    | null = null;\n  private __database: Database;\n\n  // A list of data pieces and paths to be set when this client disconnects.\n  private onDisconnect_ = new SparseSnapshotTree();\n\n  /**\n   * TODO: This should be @private but it's used by test_access.js and internal.js\n   * @type ***REMOVED***?PersistentConnection***REMOVED***\n   */\n  persistentConnection_: PersistentConnection | null = null;\n\n  /**\n   * @param ***REMOVED***!RepoInfo***REMOVED*** repoInfo_\n   * @param ***REMOVED***boolean***REMOVED*** forceRestClient\n   * @param ***REMOVED***!FirebaseApp***REMOVED*** app\n   */\n  constructor(\n    public repoInfo_: RepoInfo,\n    forceRestClient: boolean,\n    public app: FirebaseApp\n  ) ***REMOVED***\n    /** @type ***REMOVED***!AuthTokenProvider***REMOVED*** */\n    const authTokenProvider = new AuthTokenProvider(app);\n\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) ***REMOVED***\n      this.server_ = new ReadonlyRestClient(\n        this.repoInfo_,\n        this.onDataUpdate_.bind(this),\n        authTokenProvider\n      );\n\n      // Minor hack: Fire onConnect immediately, since there's no actual connection.\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    ***REMOVED*** else ***REMOVED***\n      const authOverride = app.options['databaseAuthVariableOverride'];\n      // Validate authOverride\n      if (typeof authOverride !== 'undefined' && authOverride !== null) ***REMOVED***\n        if (typeof authOverride !== 'object') ***REMOVED***\n          throw new Error(\n            'Only objects are supported for option databaseAuthVariableOverride'\n          );\n        ***REMOVED***\n        try ***REMOVED***\n          stringify(authOverride);\n        ***REMOVED*** catch (e) ***REMOVED***\n          throw new Error('Invalid authOverride provided: ' + e);\n        ***REMOVED***\n      ***REMOVED***\n\n      this.persistentConnection_ = new PersistentConnection(\n        this.repoInfo_,\n        this.onDataUpdate_.bind(this),\n        this.onConnectStatus_.bind(this),\n        this.onServerInfoUpdate_.bind(this),\n        authTokenProvider,\n        authOverride\n      );\n\n      this.server_ = this.persistentConnection_;\n    ***REMOVED***\n\n    authTokenProvider.addTokenChangeListener(token => ***REMOVED***\n      this.server_.refreshAuthToken(token);\n    ***REMOVED***);\n\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n    this.statsReporter_ = StatsManager.getOrCreateReporter(\n      repoInfo_,\n      () => new StatsReporter(this.stats_, this.server_)\n    );\n\n    this.transactions_init_();\n\n    // Used for .info.\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree(***REMOVED***\n      startListening: (query, tag, currentHashFn, onComplete) => ***REMOVED***\n        let infoEvents: Event[] = [];\n        const node = this.infoData_.getNode(query.path);\n        // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n        if (!node.isEmpty()) ***REMOVED***\n          infoEvents = this.infoSyncTree_.applyServerOverwrite(\n            query.path,\n            node\n          );\n          setTimeout(() => ***REMOVED***\n            onComplete('ok');\n          ***REMOVED***, 0);\n        ***REMOVED***\n        return infoEvents;\n      ***REMOVED***,\n      stopListening: () => ***REMOVED******REMOVED***\n    ***REMOVED***);\n    this.updateInfo_('connected', false);\n\n    this.serverSyncTree_ = new SyncTree(***REMOVED***\n      startListening: (query, tag, currentHashFn, onComplete) => ***REMOVED***\n        this.server_.listen(query, currentHashFn, tag, (status, data) => ***REMOVED***\n          const events = onComplete(status, data);\n          this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        ***REMOVED***);\n        // No synchronous events for network-backed sync trees\n        return [];\n      ***REMOVED***,\n      stopListening: (query, tag) => ***REMOVED***\n        this.server_.unlisten(query, tag);\n      ***REMOVED***\n    ***REMOVED***);\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***string***REMOVED***  The URL corresponding to the root of this Firebase.\n   */\n  toString(): string ***REMOVED***\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***!string***REMOVED*** The namespace represented by the repo.\n   */\n  name(): string ***REMOVED***\n    return this.repoInfo_.namespace;\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***!number***REMOVED*** The time in milliseconds, taking the server offset into account if we have one.\n   */\n  serverTime(): number ***REMOVED***\n    const offsetNode = this.infoData_.getNode(\n      new Path('.info/serverTimeOffset')\n    );\n    const offset = (offsetNode.val() as number) || 0;\n    return new Date().getTime() + offset;\n  ***REMOVED***\n\n  /**\n   * Generate ServerValues using some variables from the repo object.\n   * @return ***REMOVED***!Object***REMOVED***\n   */\n  generateServerValues(): Object ***REMOVED***\n    return generateWithValues(***REMOVED***\n      timestamp: this.serverTime()\n    ***REMOVED***);\n  ***REMOVED***\n\n  /**\n   * Called by realtime when we get new messages from the server.\n   *\n   * @private\n   * @param ***REMOVED***string***REMOVED*** pathString\n   * @param ***REMOVED*******REMOVED*** data\n   * @param ***REMOVED***boolean***REMOVED*** isMerge\n   * @param ***REMOVED***?number***REMOVED*** tag\n   */\n  private onDataUpdate_(\n    pathString: string,\n    data: any,\n    isMerge: boolean,\n    tag: number | null\n  ) ***REMOVED***\n    // For testing.\n    this.dataUpdateCount++;\n    const path = new Path(pathString);\n    data = this.interceptServerDataCallback_\n      ? this.interceptServerDataCallback_(pathString, data)\n      : data;\n    let events = [];\n    if (tag) ***REMOVED***\n      if (isMerge) ***REMOVED***\n        const taggedChildren = map(data as ***REMOVED*** [k: string]: any ***REMOVED***, (raw: any) =>\n          nodeFromJSON(raw)\n        );\n        events = this.serverSyncTree_.applyTaggedQueryMerge(\n          path,\n          taggedChildren,\n          tag\n        );\n      ***REMOVED*** else ***REMOVED***\n        const taggedSnap = nodeFromJSON(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(\n          path,\n          taggedSnap,\n          tag\n        );\n      ***REMOVED***\n    ***REMOVED*** else if (isMerge) ***REMOVED***\n      const changedChildren = map(data as ***REMOVED*** [k: string]: any ***REMOVED***, (raw: any) =>\n        nodeFromJSON(raw)\n      );\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    ***REMOVED*** else ***REMOVED***\n      const snap = nodeFromJSON(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    ***REMOVED***\n    let affectedPath = path;\n    if (events.length > 0) ***REMOVED***\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    ***REMOVED***\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  ***REMOVED***\n\n  /**\n   * TODO: This should be @private but it's used by test_access.js and internal.js\n   * @param ***REMOVED***?function(!string, *):****REMOVED*** callback\n   * @private\n   */\n  interceptServerData_(callback: ((a: string, b: any) => any) | null) ***REMOVED***\n    this.interceptServerDataCallback_ = callback;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!boolean***REMOVED*** connectStatus\n   * @private\n   */\n  private onConnectStatus_(connectStatus: boolean) ***REMOVED***\n    this.updateInfo_('connected', connectStatus);\n    if (connectStatus === false) ***REMOVED***\n      this.runOnDisconnectEvents_();\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Object***REMOVED*** updates\n   * @private\n   */\n  private onServerInfoUpdate_(updates: Object) ***REMOVED***\n    each(updates, (value: any, key: string) => ***REMOVED***\n      this.updateInfo_(key, value);\n    ***REMOVED***);\n  ***REMOVED***\n\n  /**\n   *\n   * @param ***REMOVED***!string***REMOVED*** pathString\n   * @param ***REMOVED*******REMOVED*** value\n   * @private\n   */\n  private updateInfo_(pathString: string, value: any) ***REMOVED***\n    const path = new Path('/.info/' + pathString);\n    const newNode = nodeFromJSON(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    const events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  ***REMOVED***\n\n  /**\n   * @return ***REMOVED***!number***REMOVED***\n   * @private\n   */\n  private getNextWriteId_(): number ***REMOVED***\n    return this.nextWriteId_++;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @param ***REMOVED*******REMOVED*** newVal\n   * @param ***REMOVED***number|string|null***REMOVED*** newPriority\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** onComplete\n   */\n  setWithPriority(\n    path: Path,\n    newVal: any,\n    newPriority: number | string | null,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) ***REMOVED***\n    this.log_('set', ***REMOVED***\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    ***REMOVED***);\n\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n    const serverValues = this.generateServerValues();\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      serverValues\n    );\n\n    const writeId = this.getNextWriteId_();\n    const events = this.serverSyncTree_.applyUserOverwrite(\n      path,\n      newNode,\n      writeId,\n      true\n    );\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(\n      path.toString(),\n      newNodeUnresolved.val(/*export=*/ true),\n      (status, errorReason) => ***REMOVED***\n        const success = status === 'ok';\n        if (!success) ***REMOVED***\n          warn('set at ' + path + ' failed: ' + status);\n        ***REMOVED***\n\n        const clearEvents = this.serverSyncTree_.ackUserWrite(\n          writeId,\n          !success\n        );\n        this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      ***REMOVED***\n    );\n    const affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath);\n    // We queued the events above, so just flush the queue here\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @param ***REMOVED***!Object***REMOVED*** childrenToMerge\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** onComplete\n   */\n  update(\n    path: Path,\n    childrenToMerge: ***REMOVED*** [k: string]: any ***REMOVED***,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) ***REMOVED***\n    this.log_('update', ***REMOVED*** path: path.toString(), value: childrenToMerge ***REMOVED***);\n\n    // Start with our existing data and merge each child into it.\n    let empty = true;\n    const serverValues = this.generateServerValues();\n    const changedChildren: ***REMOVED*** [k: string]: Node ***REMOVED*** = ***REMOVED******REMOVED***;\n    forEach(childrenToMerge, (changedKey: string, changedValue: any) => ***REMOVED***\n      empty = false;\n      const newNodeUnresolved = nodeFromJSON(changedValue);\n      changedChildren[changedKey] = resolveDeferredValueSnapshot(\n        newNodeUnresolved,\n        serverValues\n      );\n    ***REMOVED***);\n\n    if (!empty) ***REMOVED***\n      const writeId = this.getNextWriteId_();\n      const events = this.serverSyncTree_.applyUserMerge(\n        path,\n        changedChildren,\n        writeId\n      );\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(\n        path.toString(),\n        childrenToMerge,\n        (status, errorReason) => ***REMOVED***\n          const success = status === 'ok';\n          if (!success) ***REMOVED***\n            warn('update at ' + path + ' failed: ' + status);\n          ***REMOVED***\n\n          const clearEvents = this.serverSyncTree_.ackUserWrite(\n            writeId,\n            !success\n          );\n          const affectedPath =\n            clearEvents.length > 0 ? this.rerunTransactions_(path) : path;\n          this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n          this.callOnCompleteCallback(onComplete, status, errorReason);\n        ***REMOVED***\n      );\n\n      forEach(childrenToMerge, (changedPath: string) => ***REMOVED***\n        const affectedPath = this.abortTransactions_(path.child(changedPath));\n        this.rerunTransactions_(affectedPath);\n      ***REMOVED***);\n\n      // We queued the events above, so just flush the queue here\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    ***REMOVED*** else ***REMOVED***\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    ***REMOVED***\n  ***REMOVED***\n\n  /**\n   * Applies all of the changes stored up in the onDisconnect_ tree.\n   * @private\n   */\n  private runOnDisconnectEvents_() ***REMOVED***\n    this.log_('onDisconnectEvents');\n\n    const serverValues = this.generateServerValues();\n    const resolvedOnDisconnectTree = resolveDeferredValueTree(\n      this.onDisconnect_,\n      serverValues\n    );\n    let events: Event[] = [];\n\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, (path, snap) => ***REMOVED***\n      events = events.concat(\n        this.serverSyncTree_.applyServerOverwrite(path, snap)\n      );\n      const affectedPath = this.abortTransactions_(path);\n      this.rerunTransactions_(affectedPath);\n    ***REMOVED***);\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** onComplete\n   */\n  onDisconnectCancel(\n    path: Path,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) ***REMOVED***\n    this.server_.onDisconnectCancel(path.toString(), (status, errorReason) => ***REMOVED***\n      if (status === 'ok') ***REMOVED***\n        this.onDisconnect_.forget(path);\n      ***REMOVED***\n      this.callOnCompleteCallback(onComplete, status, errorReason);\n    ***REMOVED***);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @param ***REMOVED*******REMOVED*** value\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** onComplete\n   */\n  onDisconnectSet(\n    path: Path,\n    value: any,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) ***REMOVED***\n    const newNode = nodeFromJSON(value);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => ***REMOVED***\n        if (status === 'ok') ***REMOVED***\n          this.onDisconnect_.remember(path, newNode);\n        ***REMOVED***\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      ***REMOVED***\n    );\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @param ***REMOVED*******REMOVED*** value\n   * @param ***REMOVED*******REMOVED*** priority\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** onComplete\n   */\n  onDisconnectSetWithPriority(\n    path: Path,\n    value: any,\n    priority: any,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) ***REMOVED***\n    const newNode = nodeFromJSON(value, priority);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => ***REMOVED***\n        if (status === 'ok') ***REMOVED***\n          this.onDisconnect_.remember(path, newNode);\n        ***REMOVED***\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      ***REMOVED***\n    );\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Path***REMOVED*** path\n   * @param ***REMOVED*******REMOVED*** childrenToMerge\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** onComplete\n   */\n  onDisconnectUpdate(\n    path: Path,\n    childrenToMerge: ***REMOVED*** [k: string]: any ***REMOVED***,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) ***REMOVED***\n    if (isEmpty(childrenToMerge)) ***REMOVED***\n      log(\n        \"onDisconnect().update() called with empty data.  Don't do anything.\"\n      );\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    ***REMOVED***\n\n    this.server_.onDisconnectMerge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => ***REMOVED***\n        if (status === 'ok') ***REMOVED***\n          forEach(childrenToMerge, (childName: string, childNode: any) => ***REMOVED***\n            const newChildNode = nodeFromJSON(childNode);\n            this.onDisconnect_.remember(path.child(childName), newChildNode);\n          ***REMOVED***);\n        ***REMOVED***\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      ***REMOVED***\n    );\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Query***REMOVED*** query\n   * @param ***REMOVED***!EventRegistration***REMOVED*** eventRegistration\n   */\n  addEventCallbackForQuery(query: Query, eventRegistration: EventRegistration) ***REMOVED***\n    let events;\n    if (query.path.getFront() === '.info') ***REMOVED***\n      events = this.infoSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    ***REMOVED*** else ***REMOVED***\n      events = this.serverSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    ***REMOVED***\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Query***REMOVED*** query\n   * @param ***REMOVED***?EventRegistration***REMOVED*** eventRegistration\n   */\n  removeEventCallbackForQuery(\n    query: Query,\n    eventRegistration: EventRegistration\n  ) ***REMOVED***\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    let events;\n    if (query.path.getFront() === '.info') ***REMOVED***\n      events = this.infoSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    ***REMOVED*** else ***REMOVED***\n      events = this.serverSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    ***REMOVED***\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  ***REMOVED***\n\n  interrupt() ***REMOVED***\n    if (this.persistentConnection_) ***REMOVED***\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    ***REMOVED***\n  ***REMOVED***\n\n  resume() ***REMOVED***\n    if (this.persistentConnection_) ***REMOVED***\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    ***REMOVED***\n  ***REMOVED***\n\n  stats(showDelta: boolean = false) ***REMOVED***\n    if (typeof console === 'undefined') return;\n\n    let stats: ***REMOVED*** [k: string]: any ***REMOVED***;\n    if (showDelta) ***REMOVED***\n      if (!this.statsListener_)\n        this.statsListener_ = new StatsListener(this.stats_);\n      stats = this.statsListener_.get();\n    ***REMOVED*** else ***REMOVED***\n      stats = this.stats_.get();\n    ***REMOVED***\n\n    const longestName = Object.keys(stats).reduce(\n      (previousValue, currentValue) =>\n        Math.max(currentValue.length, previousValue),\n      0\n    );\n\n    forEach(stats, (stat: string, value: any) => ***REMOVED***\n      // pad stat names to be the same length (plus 2 extra spaces).\n      for (let i = stat.length; i < longestName + 2; i++) stat += ' ';\n      console.log(stat + value);\n    ***REMOVED***);\n  ***REMOVED***\n\n  statsIncrementCounter(metric: string) ***REMOVED***\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***...****REMOVED*** var_args\n   * @private\n   */\n  private log_(...var_args: any[]) ***REMOVED***\n    let prefix = '';\n    if (this.persistentConnection_) ***REMOVED***\n      prefix = this.persistentConnection_.id + ':';\n    ***REMOVED***\n    log(prefix, ...var_args);\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***?function(?Error, *=)***REMOVED*** callback\n   * @param ***REMOVED***!string***REMOVED*** status\n   * @param ***REMOVED***?string=***REMOVED*** errorReason\n   */\n  callOnCompleteCallback(\n    callback: ((status: Error | null, errorReason?: string) => void) | null,\n    status: string,\n    errorReason?: string | null\n  ) ***REMOVED***\n    if (callback) ***REMOVED***\n      exceptionGuard(function() ***REMOVED***\n        if (status == 'ok') ***REMOVED***\n          callback(null);\n        ***REMOVED*** else ***REMOVED***\n          const code = (status || 'error').toUpperCase();\n          let message = code;\n          if (errorReason) message += ': ' + errorReason;\n\n          const error = new Error(message);\n          (error as any).code = code;\n          callback(error);\n        ***REMOVED***\n      ***REMOVED***);\n    ***REMOVED***\n  ***REMOVED***\n\n  get database(): Database ***REMOVED***\n    return this.__database || (this.__database = new Database(this));\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***