***REMOVED***"version":3,"sources":["../src/core/util/ServerValues.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,uCAAwC;AACxC,+BAA8B;AAC9B,4DAA2D;AAC3D,6CAA4C;AAC5C,qDAAoD;AACpD,+DAA+D;AAI/D;;;;GAIG;AACU,QAAA,kBAAkB,GAAG,UAChC,MAEQ;IAER,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IACtB,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IAClE,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;;;;;GAMG;AACU,QAAA,oBAAoB,GAAG,UAClC,KAAuD,EACvD,YAAkC;IAElC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAkC,CAAC;IAC5C,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,aAAM,CAAC,KAAK,IAAI,KAAK,EAAE,2CAA2C,CAAC,CAAC;QACpE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;AACH,CAAC,CAAC;AAEF;;;;;;GAMG;AACU,QAAA,wBAAwB,GAAG,UACtC,IAAwB,EACxB,YAAoB;IAEpB,IAAM,YAAY,GAAG,IAAI,uCAAkB,EAAE,CAAC;IAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,WAAI,CAAC,EAAE,CAAC,EAAE,UAAS,IAAI,EAAE,IAAI;QAChD,YAAY,CAAC,QAAQ,CACnB,IAAI,EACJ,oCAA4B,CAAC,IAAI,EAAE,YAAY,CAAC,CACjD,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,YAAY,CAAC;AACtB,CAAC,CAAC;AAEF;;;;;;;GAOG;AACU,QAAA,4BAA4B,GAAG,UAC1C,IAAU,EACV,YAAoB;IAEpB,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,EAK3B,CAAC;IACX,IAAM,QAAQ,GAAG,4BAAoB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC5D,IAAI,OAAa,CAAC;IAElB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACtB,IAAM,QAAQ,GAAG,IAAgB,CAAC;QAClC,IAAM,KAAK,GAAG,4BAAoB,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC;QACtE,EAAE,CAAC,CACD,KAAK,KAAK,QAAQ,CAAC,QAAQ,EAAE;YAC7B,QAAQ,KAAK,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,EACzC,CAAC,CAAC,CAAC;YACD,MAAM,CAAC,IAAI,mBAAQ,CAAC,KAAK,EAAE,2BAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,IAAM,YAAY,GAAG,IAAoB,CAAC;QAC1C,OAAO,GAAG,YAAY,CAAC;QACvB,EAAE,CAAC,CAAC,QAAQ,KAAK,YAAY,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAClD,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,mBAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3D,CAAC;QACD,YAAY,CAAC,YAAY,CAAC,8BAAc,EAAE,UAAS,SAAS,EAAE,SAAS;YACrE,IAAM,YAAY,GAAG,oCAA4B,CAC/C,SAAS,EACT,YAAY,CACb,CAAC;YACF,EAAE,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC/B,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAClE,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;AACH,CAAC,CAAC","file":"ServerValues.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** assert ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** Path ***REMOVED*** from './Path';\nimport ***REMOVED*** SparseSnapshotTree ***REMOVED*** from '../SparseSnapshotTree';\nimport ***REMOVED*** LeafNode ***REMOVED*** from '../snap/LeafNode';\nimport ***REMOVED*** nodeFromJSON ***REMOVED*** from '../snap/nodeFromJSON';\nimport ***REMOVED*** PRIORITY_INDEX ***REMOVED*** from '../snap/indexes/PriorityIndex';\nimport ***REMOVED*** Node ***REMOVED*** from '../snap/Node';\nimport ***REMOVED*** ChildrenNode ***REMOVED*** from '../snap/ChildrenNode';\n\n/**\n * Generate placeholders for deferred values.\n * @param ***REMOVED***?Object***REMOVED*** values\n * @return ***REMOVED***!Object***REMOVED***\n */\nexport const generateWithValues = function(\n  values: ***REMOVED***\n    [k: string]: any;\n  ***REMOVED*** | null\n): ***REMOVED*** [k: string]: any ***REMOVED*** ***REMOVED***\n  values = values || ***REMOVED******REMOVED***;\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n***REMOVED***;\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param ***REMOVED***(Object|string|number|boolean)***REMOVED*** value\n * @param ***REMOVED***!Object***REMOVED*** serverValues\n * @return ***REMOVED***!(string|number|boolean)***REMOVED***\n */\nexport const resolveDeferredValue = function(\n  value: ***REMOVED*** [k: string]: any ***REMOVED*** | string | number | boolean,\n  serverValues: ***REMOVED*** [k: string]: any ***REMOVED***\n): string | number | boolean ***REMOVED***\n  if (!value || typeof value !== 'object') ***REMOVED***\n    return value as string | number | boolean;\n  ***REMOVED*** else ***REMOVED***\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\n    return serverValues[value['.sv']];\n  ***REMOVED***\n***REMOVED***;\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param ***REMOVED***!SparseSnapshotTree***REMOVED*** tree\n * @param ***REMOVED***!Object***REMOVED*** serverValues\n * @return ***REMOVED***!SparseSnapshotTree***REMOVED***\n */\nexport const resolveDeferredValueTree = function(\n  tree: SparseSnapshotTree,\n  serverValues: Object\n): SparseSnapshotTree ***REMOVED***\n  const resolvedTree = new SparseSnapshotTree();\n  tree.forEachTree(new Path(''), function(path, node) ***REMOVED***\n    resolvedTree.remember(\n      path,\n      resolveDeferredValueSnapshot(node, serverValues)\n    );\n  ***REMOVED***);\n  return resolvedTree;\n***REMOVED***;\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param ***REMOVED***!Node***REMOVED*** node\n * @param ***REMOVED***!Object***REMOVED*** serverValues\n * @return ***REMOVED***!Node***REMOVED***\n */\nexport const resolveDeferredValueSnapshot = function(\n  node: Node,\n  serverValues: Object\n): Node ***REMOVED***\n  const rawPri = node.getPriority().val() as\n    | object\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredValue(rawPri, serverValues);\n  let newNode: Node;\n\n  if (node.isLeafNode()) ***REMOVED***\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredValue(leafNode.getValue(), serverValues);\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) ***REMOVED***\n      return new LeafNode(value, nodeFromJSON(priority));\n    ***REMOVED*** else ***REMOVED***\n      return node;\n    ***REMOVED***\n  ***REMOVED*** else ***REMOVED***\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) ***REMOVED***\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    ***REMOVED***\n    childrenNode.forEachChild(PRIORITY_INDEX, function(childName, childNode) ***REMOVED***\n      const newChildNode = resolveDeferredValueSnapshot(\n        childNode,\n        serverValues\n      );\n      if (newChildNode !== childNode) ***REMOVED***\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      ***REMOVED***\n    ***REMOVED***);\n    return newNode;\n  ***REMOVED***\n***REMOVED***;\n"]***REMOVED***