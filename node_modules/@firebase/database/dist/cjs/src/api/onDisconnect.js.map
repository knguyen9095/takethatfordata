***REMOVED***"version":3,"sources":["../src/api/onDisconnect.ts"],"names":[],"mappings":"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","file":"onDisconnect.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** validateArgCount, validateCallback ***REMOVED*** from '@firebase/util';\nimport ***REMOVED***\n  validateWritablePath,\n  validateFirebaseDataArg,\n  validatePriority,\n  validateFirebaseMergeDataArg\n***REMOVED*** from '../core/util/validation';\nimport ***REMOVED*** warn ***REMOVED*** from '../core/util/util';\nimport ***REMOVED*** Deferred ***REMOVED*** from '@firebase/util';\nimport ***REMOVED*** Repo ***REMOVED*** from '../core/Repo';\nimport ***REMOVED*** Path ***REMOVED*** from '../core/util/Path';\n\n/**\n * @constructor\n */\nexport class OnDisconnect ***REMOVED***\n  /**\n   * @param ***REMOVED***!Repo***REMOVED*** repo_\n   * @param ***REMOVED***!Path***REMOVED*** path_\n   */\n  constructor(private repo_: Repo, private path_: Path) ***REMOVED******REMOVED***\n\n  /**\n   * @param ***REMOVED***function(?Error)=***REMOVED*** onComplete\n   * @return ***REMOVED***!firebase.Promise***REMOVED***\n   */\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> ***REMOVED***\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectCancel(\n      this.path_,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***function(?Error)=***REMOVED*** onComplete\n   * @return ***REMOVED***!firebase.Promise***REMOVED***\n   */\n  remove(onComplete?: (a: Error | null) => void): Promise<void> ***REMOVED***\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED*******REMOVED*** value\n   * @param ***REMOVED***function(?Error)=***REMOVED*** onComplete\n   * @return ***REMOVED***!firebase.Promise***REMOVED***\n   */\n  set(value: any, onComplete?: (a: Error | null) => void): Promise<void> ***REMOVED***\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      value,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED*******REMOVED*** value\n   * @param ***REMOVED***number|string|null***REMOVED*** priority\n   * @param ***REMOVED***function(?Error)=***REMOVED*** onComplete\n   * @return ***REMOVED***!firebase.Promise***REMOVED***\n   */\n  setWithPriority(\n    value: any,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> ***REMOVED***\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      1,\n      value,\n      this.path_,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSetWithPriority(\n      this.path_,\n      value,\n      priority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  ***REMOVED***\n\n  /**\n   * @param ***REMOVED***!Object***REMOVED*** objectToMerge\n   * @param ***REMOVED***function(?Error)=***REMOVED*** onComplete\n   * @return ***REMOVED***!firebase.Promise***REMOVED***\n   */\n  update(\n    objectToMerge: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> ***REMOVED***\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n    if (Array.isArray(objectToMerge)) ***REMOVED***\n      const newObjectToMerge: ***REMOVED*** [k: string]: any ***REMOVED*** = ***REMOVED******REMOVED***;\n      for (let i = 0; i < objectToMerge.length; ++i) ***REMOVED***\n        newObjectToMerge['' + i] = objectToMerge[i];\n      ***REMOVED***\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    ***REMOVED***\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      1,\n      objectToMerge,\n      this.path_,\n      false\n    );\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectUpdate(\n      this.path_,\n      objectToMerge,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***