***REMOVED***"version":3,"sources":["../src/implementation/args.ts"],"names":[],"mappings":"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","file":"args.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport ***REMOVED*** errors ***REMOVED*** from './error';\nimport * as MetadataUtils from './metadata';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws ***REMOVED***fbs.Error***REMOVED*** If the arguments are invalid.\n */\nexport function validate(name: string, specs: ArgSpec[], passed: IArguments) ***REMOVED***\n  let minArgs = specs.length;\n  let maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) ***REMOVED***\n    if (specs[i].optional) ***REMOVED***\n      minArgs = i;\n      break;\n    ***REMOVED***\n  ***REMOVED***\n  let validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) ***REMOVED***\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  ***REMOVED***\n  for (let i = 0; i < passed.length; i++) ***REMOVED***\n    try ***REMOVED***\n      specs[i].validator(passed[i]);\n    ***REMOVED*** catch (e) ***REMOVED***\n      if (e instanceof Error) ***REMOVED***\n        throw errorsExports.invalidArgument(i, name, e.message);\n      ***REMOVED*** else ***REMOVED***\n        throw errorsExports.invalidArgument(i, name, e);\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\n/**\n * @struct\n */\nexport class ArgSpec ***REMOVED***\n  validator: (p1: any) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: any) => void, opt_optional?: boolean) ***REMOVED***\n    let self = this;\n    this.validator = function(p: any) ***REMOVED***\n      if (self.optional && !type.isJustDef(p)) ***REMOVED***\n        return;\n      ***REMOVED***\n      validator(p);\n    ***REMOVED***;\n    this.optional = !!opt_optional;\n  ***REMOVED***\n***REMOVED***\n\nexport function and_(v1: (p1: any) => void, v2: Function): (p1: any) => void ***REMOVED***\n  return function(p) ***REMOVED***\n    v1(p);\n    v2(p);\n  ***REMOVED***;\n***REMOVED***\n\nexport function stringSpec(\n  opt_validator?: (p1: any) => void | null,\n  opt_optional?: boolean\n): ArgSpec ***REMOVED***\n  function stringValidator(p: any) ***REMOVED***\n    if (!type.isString(p)) ***REMOVED***\n      throw 'Expected string.';\n    ***REMOVED***\n  ***REMOVED***\n  let validator;\n  if (opt_validator) ***REMOVED***\n    validator = and_(stringValidator, opt_validator);\n  ***REMOVED*** else ***REMOVED***\n    validator = stringValidator;\n  ***REMOVED***\n  return new ArgSpec(validator, opt_optional);\n***REMOVED***\n\nexport function uploadDataSpec(): ArgSpec ***REMOVED***\n  function validator(p: any) ***REMOVED***\n    let valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) ***REMOVED***\n      throw 'Expected Blob or File.';\n    ***REMOVED***\n  ***REMOVED***\n  return new ArgSpec(validator);\n***REMOVED***\n\nexport function metadataSpec(opt_optional?: boolean): ArgSpec ***REMOVED***\n  return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);\n***REMOVED***\n\nexport function nonNegativeNumberSpec(): ArgSpec ***REMOVED***\n  function validator(p: any) ***REMOVED***\n    let valid = type.isNumber(p) && p >= 0;\n    if (!valid) ***REMOVED***\n      throw 'Expected a number 0 or greater.';\n    ***REMOVED***\n  ***REMOVED***\n  return new ArgSpec(validator);\n***REMOVED***\n\nexport function looseObjectSpec(\n  opt_validator?: ((p1: any) => void) | null,\n  opt_optional?: boolean\n): ArgSpec ***REMOVED***\n  function validator(p: any) ***REMOVED***\n    let isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) ***REMOVED***\n      throw 'Expected an Object.';\n    ***REMOVED***\n    if (opt_validator !== undefined && opt_validator !== null) ***REMOVED***\n      opt_validator(p);\n    ***REMOVED***\n  ***REMOVED***\n  return new ArgSpec(validator, opt_optional);\n***REMOVED***\n\nexport function nullFunctionSpec(opt_optional?: boolean): ArgSpec ***REMOVED***\n  function validator(p: any) ***REMOVED***\n    let valid = p === null || type.isFunction(p);\n    if (!valid) ***REMOVED***\n      throw 'Expected a Function.';\n    ***REMOVED***\n  ***REMOVED***\n  return new ArgSpec(validator, opt_optional);\n***REMOVED***\n"]***REMOVED***