/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as object from './object';
import * as constants from './constants';
/**
 * @struct
 */
var RequestMap = /** @class */ (function () ***REMOVED***
    function RequestMap() ***REMOVED***
        this.map_ = ***REMOVED******REMOVED***;
        this.id_ = constants.minSafeInteger;
    ***REMOVED***
    /**
     * Registers the given request with this map.
     * The request is unregistered when it completes.
     * @param r The request to register.
     */
    RequestMap.prototype.addRequest = function (r) ***REMOVED***
        var id = this.id_;
        this.id_++;
        this.map_[id] = r;
        var self = this;
        function unmap() ***REMOVED***
            delete self.map_[id];
        ***REMOVED***
        r.getPromise().then(unmap, unmap);
    ***REMOVED***;
    /**
     * Cancels all registered requests.
     */
    RequestMap.prototype.clear = function () ***REMOVED***
        object.forEach(this.map_, function (key, val) ***REMOVED***
            if (val) ***REMOVED***
                val.cancel(true);
            ***REMOVED***
        ***REMOVED***);
        this.map_ = ***REMOVED******REMOVED***;
    ***REMOVED***;
    return RequestMap;
***REMOVED***());
export ***REMOVED*** RequestMap ***REMOVED***;

//# sourceMappingURL=requestmap.js.map
