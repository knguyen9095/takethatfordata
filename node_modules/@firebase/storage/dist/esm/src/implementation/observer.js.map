***REMOVED***"version":3,"sources":["../src/implementation/observer.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AACH,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAe/B;;GAEG;AACH;IAKE,kBACE,cAAoE,EACpE,SAA0B,EAC1B,YAAgC;QAEhC,IAAI,WAAW,GACb,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC3B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,cAAkC,CAAC;YAC/C,IAAI,CAAC,KAAK,GAAG,SAAS,IAAI,IAAI,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,YAAY,IAAI,IAAI,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,QAAQ,GAAG,cAIhB,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC;QAC5C,CAAC;IACH,CAAC;IACH,eAAC;AAAD,CA7BA,AA6BC,IAAA","file":"observer.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\ntype NextFn<T> = (value: T) => void;\ntype ErrorFn = (error: Error) => void;\ntype CompleteFn = () => void;\ntype Unsubscribe = () => void;\n\ntype Subscribe<T> = (\n  next: NextFn<T> | ***REMOVED*** [name: string]: string | null ***REMOVED***,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport ***REMOVED*** NextFn, ErrorFn, CompleteFn, Unsubscribe, Subscribe ***REMOVED***;\n\n/**\n * @struct\n */\nexport class Observer<T> ***REMOVED***\n  next: NextFn<T> | null;\n  error: ErrorFn | null;\n  complete: CompleteFn | null;\n\n  constructor(\n    nextOrObserver: NextFn<T> | ***REMOVED*** [name: string]: string | null ***REMOVED*** | null,\n    opt_error?: ErrorFn | null,\n    opt_complete?: CompleteFn | null\n  ) ***REMOVED***\n    let asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(opt_error) ||\n      type.isDef(opt_complete);\n    if (asFunctions) ***REMOVED***\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = opt_error || null;\n      this.complete = opt_complete || null;\n    ***REMOVED*** else ***REMOVED***\n      const observer = nextOrObserver as ***REMOVED***\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      ***REMOVED***;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n"]***REMOVED***