***REMOVED***"version":3,"sources":["../src/implementation/object.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH;;GAEG;AACH,kBAAyB,GAAW,EAAE,IAAY;IAChD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACzD,CAAC;AAFD,4BAEC;AAED,iBACE,GAAyB,EACzB,CAA8B;IAE9B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnB,CAAC;IACH,CAAC;AACH,CAAC;AATD,0BASC;AAED,eAAyB,GAAmC;IAC1D,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,EAAO,CAAC;IACjB,CAAC;IAED,IAAI,CAAC,GAA4B,EAAE,CAAC;IACpC,OAAO,CAAC,GAAG,EAAE,UAAS,GAAG,EAAE,GAAG;QAC5B,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACf,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,CAAM,CAAC;AAChB,CAAC;AAVD,sBAUC","file":"object.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains methods for working with objects.\n */\nexport function contains(obj: Object, prop: string): boolean ***REMOVED***\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n***REMOVED***\n\nexport function forEach<T>(\n  obj: ***REMOVED*** [key: string]: T ***REMOVED***,\n  f: (p1: string, p2: T) => void\n) ***REMOVED***\n  for (let key in obj) ***REMOVED***\n    if (contains(obj, key)) ***REMOVED***\n      f(key, obj[key]);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\nexport function clone<T>(obj?: ***REMOVED*** [key: string]: any ***REMOVED*** | null): T ***REMOVED***\n  if (obj == null) ***REMOVED***\n    return ***REMOVED******REMOVED*** as T;\n  ***REMOVED***\n\n  let c: ***REMOVED*** [name: string]: any ***REMOVED*** = ***REMOVED******REMOVED***;\n  forEach(obj, function(key, val) ***REMOVED***\n    c[key] = val;\n  ***REMOVED***);\n  return c as T;\n***REMOVED***\n"]***REMOVED***