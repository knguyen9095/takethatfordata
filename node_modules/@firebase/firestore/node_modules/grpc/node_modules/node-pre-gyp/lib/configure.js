"use strict";

module.exports = exports = configure;

exports.usage = 'Attempts to configure node-gyp or nw-gyp build';

var compile = require('./util/compile.js');
var handle_gyp_opts = require('./util/handle_gyp_opts.js');

function configure(gyp, argv, callback) ***REMOVED***
    handle_gyp_opts(gyp,argv,function(err,result) ***REMOVED***
        var final_args = result.gyp.concat(result.pre);
        // pull select node-gyp configure options out of the npm environ
        var known_gyp_args = ['dist-url','python','nodedir','msvs_version'];
        known_gyp_args.forEach(function(key) ***REMOVED***
            var val = gyp.opts[key] || gyp.opts[key.replace('-','_')];
            if (val) ***REMOVED***
               final_args.push('--'+key+'='+val);
            ***REMOVED***
        ***REMOVED***);
        // --ensure=false tell node-gyp to re-install node development headers
        // but it is only respected by node-gyp install, so we have to call install
        // as a separate step if the user passes it
        if (gyp.opts.ensure === false) ***REMOVED***
            var install_args = final_args.concat(['install','--ensure=false']);
            compile.run_gyp(install_args,result.opts,function(err) ***REMOVED***
                if (err) return callback(err);
                if (result.unparsed.length > 0) ***REMOVED***
                    final_args = final_args.
                                  concat(['--']).
                                  concat(result.unparsed);
                ***REMOVED***
                compile.run_gyp(['configure'].concat(final_args),result.opts,function(err) ***REMOVED***
                    return callback(err);
                ***REMOVED***);
            ***REMOVED***);
        ***REMOVED*** else ***REMOVED***
            if (result.unparsed.length > 0) ***REMOVED***
                final_args = final_args.
                              concat(['--']).
                              concat(result.unparsed);
            ***REMOVED***
            compile.run_gyp(['configure'].concat(final_args),result.opts,function(err) ***REMOVED***
                return callback(err);
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***);
***REMOVED***
