***REMOVED***
  "_from": "aws4@^1.6.0",
  "_id": "aws4@1.6.0",
  "_inBundle": false,
  "_integrity": "sha1-g+9cqGCysy5KDe7e6MdxudtXRx4=",
  "_location": "/@firebase/firestore/grpc/aws4",
  "_phantomChildren": ***REMOVED******REMOVED***,
  "_requested": ***REMOVED***
    "type": "range",
    "registry": true,
    "raw": "aws4@^1.6.0",
    "name": "aws4",
    "escapedName": "aws4",
    "rawSpec": "^1.6.0",
    "saveSpec": null,
    "fetchSpec": "^1.6.0"
  ***REMOVED***,
  "_requiredBy": [
    "/@firebase/firestore/grpc/request"
  ],
  "_resolved": "https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz",
  "_shasum": "83ef5ca860b2b32e4a0deedee8c771b9db57471e",
  "_shrinkwrap": null,
  "_spec": "aws4@^1.6.0",
  "_where": "/home/mlumish/grpc-node/packages/grpc-native-core/node_modules/request",
  "author": ***REMOVED***
    "name": "Michael Hart",
    "email": "michael.hart.au@gmail.com",
    "url": "http://github.com/mhart"
  ***REMOVED***,
  "bugs": ***REMOVED***
    "url": "https://github.com/mhart/aws4/issues"
  ***REMOVED***,
  "bundleDependencies": false,
  "dependencies": ***REMOVED******REMOVED***,
  "deprecated": false,
  "description": "Signs and prepares requests using AWS Signature Version 4",
  "devDependencies": ***REMOVED***
    "mocha": "^2.4.5",
    "should": "^8.2.2"
  ***REMOVED***,
  "homepage": "https://github.com/mhart/aws4#readme",
  "keywords": [
    "amazon",
    "aws",
    "signature",
    "s3",
    "ec2",
    "autoscaling",
    "cloudformation",
    "elasticloadbalancing",
    "elb",
    "elasticbeanstalk",
    "cloudsearch",
    "dynamodb",
    "kinesis",
    "lambda",
    "glacier",
    "sqs",
    "sns",
    "iam",
    "sts",
    "ses",
    "swf",
    "storagegateway",
    "datapipeline",
    "directconnect",
    "redshift",
    "opsworks",
    "rds",
    "monitoring",
    "cloudtrail",
    "cloudfront",
    "codedeploy",
    "elasticache",
    "elasticmapreduce",
    "elastictranscoder",
    "emr",
    "cloudwatch",
    "mobileanalytics",
    "cognitoidentity",
    "cognitosync",
    "cognito",
    "containerservice",
    "ecs",
    "appstream",
    "keymanagementservice",
    "kms",
    "config",
    "cloudhsm",
    "route53",
    "route53domains",
    "logs"
  ],
  "license": "MIT",
  "main": "aws4.js",
  "name": "aws4",
  "optionalDependencies": ***REMOVED******REMOVED***,
  "readme": "aws4\n----\n\n[![Build Status](https://secure.travis-ci.org/mhart/aws4.png?branch=master)](http://travis-ci.org/mhart/aws4)\n\nA small utility to sign vanilla node.js http(s) request options using Amazon's\n[AWS Signature Version 4](http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html).\n\nCan also be used [in the browser](./browser).\n\nThis signature is supported by nearly all Amazon services, including\n[S3](http://docs.aws.amazon.com/AmazonS3/latest/API/),\n[EC2](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/),\n[DynamoDB](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html),\n[Kinesis](http://docs.aws.amazon.com/kinesis/latest/APIReference/),\n[Lambda](http://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html),\n[SQS](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/),\n[SNS](http://docs.aws.amazon.com/sns/latest/api/),\n[IAM](http://docs.aws.amazon.com/IAM/latest/APIReference/),\n[STS](http://docs.aws.amazon.com/STS/latest/APIReference/),\n[RDS](http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/),\n[CloudWatch](http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/),\n[CloudWatch Logs](http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/),\n[CodeDeploy](http://docs.aws.amazon.com/codedeploy/latest/APIReference/),\n[CloudFront](http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/),\n[CloudTrail](http://docs.aws.amazon.com/awscloudtrail/latest/APIReference/),\n[ElastiCache](http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/),\n[EMR](http://docs.aws.amazon.com/ElasticMapReduce/latest/API/),\n[Glacier](http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-api.html),\n[CloudSearch](http://docs.aws.amazon.com/cloudsearch/latest/developerguide/APIReq.html),\n[Elastic Load Balancing](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/),\n[Elastic Transcoder](http://docs.aws.amazon.com/elastictranscoder/latest/developerguide/api-reference.html),\n[CloudFormation](http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/),\n[Elastic Beanstalk](http://docs.aws.amazon.com/elasticbeanstalk/latest/api/),\n[Storage Gateway](http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html),\n[Data Pipeline](http://docs.aws.amazon.com/datapipeline/latest/APIReference/),\n[Direct Connect](http://docs.aws.amazon.com/directconnect/latest/APIReference/),\n[Redshift](http://docs.aws.amazon.com/redshift/latest/APIReference/),\n[OpsWorks](http://docs.aws.amazon.com/opsworks/latest/APIReference/),\n[SES](http://docs.aws.amazon.com/ses/latest/APIReference/),\n[SWF](http://docs.aws.amazon.com/amazonswf/latest/apireference/),\n[AutoScaling](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/),\n[Mobile Analytics](http://docs.aws.amazon.com/mobileanalytics/latest/ug/server-reference.html),\n[Cognito Identity](http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/),\n[Cognito Sync](http://docs.aws.amazon.com/cognitosync/latest/APIReference/),\n[Container Service](http://docs.aws.amazon.com/AmazonECS/latest/APIReference/),\n[AppStream](http://docs.aws.amazon.com/appstream/latest/developerguide/appstream-api-rest.html),\n[Key Management Service](http://docs.aws.amazon.com/kms/latest/APIReference/),\n[Config](http://docs.aws.amazon.com/config/latest/APIReference/),\n[CloudHSM](http://docs.aws.amazon.com/cloudhsm/latest/dg/api-ref.html),\n[Route53](http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rest.html) and\n[Route53 Domains](http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rpc.html).\n\nIndeed, the only AWS services that *don't* support v4 as of 2014-12-30 are\n[Import/Export](http://docs.aws.amazon.com/AWSImportExport/latest/DG/api-reference.html) and\n[SimpleDB](http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API.html)\n(they only support [AWS Signature Version 2](https://github.com/mhart/aws2)).\n\nIt also provides defaults for a number of core AWS headers and\nrequest parameters, making it very easy to query AWS services, or\nbuild out a fully-featured AWS library.\n\nExample\n-------\n\n```javascript\nvar http  = require('http'),\n    https = require('https'),\n    aws4  = require('aws4')\n\n// given an options object you could pass to http.request\nvar opts = ***REMOVED***host: 'sqs.us-east-1.amazonaws.com', path: '/?Action=ListQueues'***REMOVED***\n\n// alternatively (as aws4 can infer the host):\nopts = ***REMOVED***service: 'sqs', region: 'us-east-1', path: '/?Action=ListQueues'***REMOVED***\n\n// alternatively (as us-east-1 is default):\nopts = ***REMOVED***service: 'sqs', path: '/?Action=ListQueues'***REMOVED***\n\naws4.sign(opts) // assumes AWS credentials are available in process.env\n\nconsole.log(opts)\n/*\n***REMOVED***\n  host: 'sqs.us-east-1.amazonaws.com',\n  path: '/?Action=ListQueues',\n  headers: ***REMOVED***\n    Host: 'sqs.us-east-1.amazonaws.com',\n    'X-Amz-Date': '20121226T061030Z',\n    Authorization: 'AWS4-HMAC-SHA256 Credential=ABCDEF/20121226/us-east-1/sqs/aws4_request, ...'\n  ***REMOVED***\n***REMOVED***\n*/\n\n// we can now use this to query AWS using the standard node.js http API\nhttp.request(opts, function(res) ***REMOVED*** res.pipe(process.stdout) ***REMOVED***).end()\n/*\n<?xml version=\"1.0\"?>\n<ListQueuesResponse xmlns=\"http://queue.amazonaws.com/doc/2012-11-05/\">\n...\n*/\n```\n\nMore options\n------------\n\n```javascript\n// you can also pass AWS credentials in explicitly (otherwise taken from process.env)\naws4.sign(opts, ***REMOVED***accessKeyId: '', secretAccessKey: ''***REMOVED***)\n\n// can also add the signature to query strings\naws4.sign(***REMOVED***service: 's3', path: '/my-bucket?X-Amz-Expires=12345', signQuery: true***REMOVED***)\n\n// create a utility function to pipe to stdout (with https this time)\nfunction request(o) ***REMOVED*** https.request(o, function(res) ***REMOVED*** res.pipe(process.stdout) ***REMOVED***).end(o.body || '') ***REMOVED***\n\n// aws4 can infer the HTTP method if a body is passed in\n// method will be POST and Content-Type: 'application/x-www-form-urlencoded; charset=utf-8'\nrequest(aws4.sign(***REMOVED***service: 'iam', body: 'Action=ListGroups&Version=2010-05-08'***REMOVED***))\n/*\n<ListGroupsResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n...\n*/\n\n// can specify any custom option or header as per usual\nrequest(aws4.sign(***REMOVED***\n  service: 'dynamodb',\n  region: 'ap-southeast-2',\n  method: 'POST',\n  path: '/',\n  headers: ***REMOVED***\n    'Content-Type': 'application/x-amz-json-1.0',\n    'X-Amz-Target': 'DynamoDB_20120810.ListTables'\n  ***REMOVED***,\n  body: '***REMOVED******REMOVED***'\n***REMOVED***))\n/*\n***REMOVED***\"TableNames\":[]***REMOVED***\n...\n*/\n\n// works with all other services that support Signature Version 4\n\nrequest(aws4.sign(***REMOVED***service: 's3', path: '/', signQuery: true***REMOVED***))\n/*\n<ListAllMyBucketsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'ec2', path: '/?Action=DescribeRegions&Version=2014-06-15'***REMOVED***))\n/*\n<DescribeRegionsResponse xmlns=\"http://ec2.amazonaws.com/doc/2014-06-15/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'sns', path: '/?Action=ListTopics&Version=2010-03-31'***REMOVED***))\n/*\n<ListTopicsResponse xmlns=\"http://sns.amazonaws.com/doc/2010-03-31/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'sts', path: '/?Action=GetSessionToken&Version=2011-06-15'***REMOVED***))\n/*\n<GetSessionTokenResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'cloudsearch', path: '/?Action=ListDomainNames&Version=2013-01-01'***REMOVED***))\n/*\n<ListDomainNamesResponse xmlns=\"http://cloudsearch.amazonaws.com/doc/2013-01-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'ses', path: '/?Action=ListIdentities&Version=2010-12-01'***REMOVED***))\n/*\n<ListIdentitiesResponse xmlns=\"http://ses.amazonaws.com/doc/2010-12-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'autoscaling', path: '/?Action=DescribeAutoScalingInstances&Version=2011-01-01'***REMOVED***))\n/*\n<DescribeAutoScalingInstancesResponse xmlns=\"http://autoscaling.amazonaws.com/doc/2011-01-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'elasticloadbalancing', path: '/?Action=DescribeLoadBalancers&Version=2012-06-01'***REMOVED***))\n/*\n<DescribeLoadBalancersResponse xmlns=\"http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'cloudformation', path: '/?Action=ListStacks&Version=2010-05-15'***REMOVED***))\n/*\n<ListStacksResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'elasticbeanstalk', path: '/?Action=ListAvailableSolutionStacks&Version=2010-12-01'***REMOVED***))\n/*\n<ListAvailableSolutionStacksResponse xmlns=\"http://elasticbeanstalk.amazonaws.com/docs/2010-12-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'rds', path: '/?Action=DescribeDBInstances&Version=2012-09-17'***REMOVED***))\n/*\n<DescribeDBInstancesResponse xmlns=\"http://rds.amazonaws.com/doc/2012-09-17/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'monitoring', path: '/?Action=ListMetrics&Version=2010-08-01'***REMOVED***))\n/*\n<ListMetricsResponse xmlns=\"http://monitoring.amazonaws.com/doc/2010-08-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'redshift', path: '/?Action=DescribeClusters&Version=2012-12-01'***REMOVED***))\n/*\n<DescribeClustersResponse xmlns=\"http://redshift.amazonaws.com/doc/2012-12-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'cloudfront', path: '/2014-05-31/distribution'***REMOVED***))\n/*\n<DistributionList xmlns=\"http://cloudfront.amazonaws.com/doc/2014-05-31/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'elasticache', path: '/?Action=DescribeCacheClusters&Version=2014-07-15'***REMOVED***))\n/*\n<DescribeCacheClustersResponse xmlns=\"http://elasticache.amazonaws.com/doc/2014-07-15/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'elasticmapreduce', path: '/?Action=DescribeJobFlows&Version=2009-03-31'***REMOVED***))\n/*\n<DescribeJobFlowsResponse xmlns=\"http://elasticmapreduce.amazonaws.com/doc/2009-03-31\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'route53', path: '/2013-04-01/hostedzone'***REMOVED***))\n/*\n<ListHostedZonesResponse xmlns=\"https://route53.amazonaws.com/doc/2013-04-01/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'appstream', path: '/applications'***REMOVED***))\n/*\n***REMOVED***\"_links\":***REMOVED***\"curie\":[***REMOVED***\"href\":\"http://docs.aws.amazon.com/appstream/latest/...\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'cognito-sync', path: '/identitypools'***REMOVED***))\n/*\n***REMOVED***\"Count\":0,\"IdentityPoolUsages\":[],\"MaxResults\":16,\"NextToken\":null***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'elastictranscoder', path: '/2012-09-25/pipelines'***REMOVED***))\n/*\n***REMOVED***\"NextPageToken\":null,\"Pipelines\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'lambda', path: '/2014-11-13/functions/'***REMOVED***))\n/*\n***REMOVED***\"Functions\":[],\"NextMarker\":null***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'ecs', path: '/?Action=ListClusters&Version=2014-11-13'***REMOVED***))\n/*\n<ListClustersResponse xmlns=\"http://ecs.amazonaws.com/doc/2014-11-13/\">\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'glacier', path: '/-/vaults', headers: ***REMOVED***'X-Amz-Glacier-Version': '2012-06-01'***REMOVED******REMOVED***))\n/*\n***REMOVED***\"Marker\":null,\"VaultList\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'storagegateway', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'StorageGateway_20120630.ListGateways'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"Gateways\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'datapipeline', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'DataPipeline.ListPipelines'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"hasMoreResults\":false,\"pipelineIdList\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'opsworks', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'OpsWorks_20130218.DescribeStacks'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"Stacks\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'route53domains', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'Route53Domains_v20140515.ListDomains'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"Domains\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'kinesis', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'Kinesis_20131202.ListStreams'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"HasMoreStreams\":false,\"StreamNames\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'cloudtrail', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'CloudTrail_20131101.DescribeTrails'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"trailList\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'logs', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'Logs_20140328.DescribeLogGroups'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"logGroups\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'codedeploy', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'CodeDeploy_20141006.ListApplications'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"applications\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'directconnect', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'OvertureService.DescribeConnections'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"connections\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'kms', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'TrentService.ListKeys'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"Keys\":[],\"Truncated\":false***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'config', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'StarlingDoveService.DescribeDeliveryChannels'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"DeliveryChannels\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***service: 'cloudhsm', body: '***REMOVED******REMOVED***', headers: ***REMOVED***\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'CloudHsmFrontendService.ListAvailableZones'\n***REMOVED******REMOVED***))\n/*\n***REMOVED***\"AZList\":[\"us-east-1a\",\"us-east-1b\",\"us-east-1c\"]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***\n  service: 'swf',\n  body: '***REMOVED***\"registrationStatus\":\"REGISTERED\"***REMOVED***',\n  headers: ***REMOVED***\n    'Content-Type': 'application/x-amz-json-1.0',\n    'X-Amz-Target': 'SimpleWorkflowService.ListDomains'\n  ***REMOVED***\n***REMOVED***))\n/*\n***REMOVED***\"domainInfos\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***\n  service: 'cognito-identity',\n  body: '***REMOVED***\"MaxResults\": 1***REMOVED***',\n  headers: ***REMOVED***\n    'Content-Type': 'application/x-amz-json-1.1',\n    'X-Amz-Target': 'AWSCognitoIdentityService.ListIdentityPools'\n  ***REMOVED***\n***REMOVED***))\n/*\n***REMOVED***\"IdentityPools\":[]***REMOVED***\n...\n*/\n\nrequest(aws4.sign(***REMOVED***\n  service: 'mobileanalytics',\n  path: '/2014-06-05/events',\n  body: JSON.stringify(***REMOVED***events:[***REMOVED***\n    eventType: 'a',\n    timestamp: new Date().toISOString(),\n    session: ***REMOVED******REMOVED***,\n  ***REMOVED***]***REMOVED***),\n  headers: ***REMOVED***\n    'Content-Type': 'application/json',\n    'X-Amz-Client-Context': JSON.stringify(***REMOVED***\n      client: ***REMOVED***client_id: 'a', app_title: 'a'***REMOVED***,\n      custom: ***REMOVED******REMOVED***,\n      env: ***REMOVED***platform: 'a'***REMOVED***,\n      services: ***REMOVED******REMOVED***,\n    ***REMOVED***),\n  ***REMOVED***\n***REMOVED***))\n/*\n(HTTP 202, empty response)\n*/\n\n// Generate CodeCommit Git access password\nvar signer = new aws4.RequestSigner(***REMOVED***\n  service: 'codecommit',\n  host: 'git-codecommit.us-east-1.amazonaws.com',\n  method: 'GIT',\n  path: '/v1/repos/MyAwesomeRepo',\n***REMOVED***)\nvar password = signer.getDateTime() + 'Z' + signer.signature()\n```\n\nAPI\n---\n\n### aws4.sign(requestOptions, [credentials])\n\nThis calculates and populates the `Authorization` header of\n`requestOptions`, and any other necessary AWS headers and/or request\noptions. Returns `requestOptions` as a convenience for chaining.\n\n`requestOptions` is an object holding the same options that the node.js\n[http.request](http://nodejs.org/docs/latest/api/http.html#http_http_request_options_callback)\nfunction takes.\n\nThe following properties of `requestOptions` are used in the signing or\npopulated if they don't already exist:\n\n- `hostname` or `host` (will be determined from `service` and `region` if not given)\n- `method` (will use `'GET'` if not given or `'POST'` if there is a `body`)\n- `path` (will use `'/'` if not given)\n- `body` (will use `''` if not given)\n- `service` (will be calculated from `hostname` or `host` if not given)\n- `region` (will be calculated from `hostname` or `host` or use `'us-east-1'` if not given)\n- `headers['Host']` (will use `hostname` or `host` or be calculated if not given)\n- `headers['Content-Type']` (will use `'application/x-www-form-urlencoded; charset=utf-8'`\n  if not given and there is a `body`)\n- `headers['Date']` (used to calculate the signature date if given, otherwise `new Date` is used)\n\nYour AWS credentials (which can be found in your\n[AWS console](https://portal.aws.amazon.com/gp/aws/securityCredentials))\ncan be specified in one of two ways:\n\n- As the second argument, like this:\n\n```javascript\naws4.sign(requestOptions, ***REMOVED***\n  secretAccessKey: \"<your-secret-access-key>\",\n  accessKeyId: \"<your-access-key-id>\",\n  sessionToken: \"<your-session-token>\"\n***REMOVED***)\n```\n\n- From `process.env`, such as this:\n\n```\nexport AWS_SECRET_ACCESS_KEY=\"<your-secret-access-key>\"\nexport AWS_ACCESS_KEY_ID=\"<your-access-key-id>\"\nexport AWS_SESSION_TOKEN=\"<your-session-token>\"\n```\n\n(will also use `AWS_ACCESS_KEY` and `AWS_SECRET_KEY` if available)\n\nThe `sessionToken` property and `AWS_SESSION_TOKEN` environment variable are optional for signing\nwith [IAM STS temporary credentials](http://docs.aws.amazon.com/STS/latest/UsingSTS/using-temp-creds.html).\n\nInstallation\n------------\n\nWith [npm](http://npmjs.org/) do:\n\n```\nnpm install aws4\n```\n\nCan also be used [in the browser](./browser).\n\nThanks\n------\n\nThanks to [@jed](https://github.com/jed) for his\n[dynamo-client](https://github.com/jed/dynamo-client) lib where I first\ncommitted and subsequently extracted this code.\n\nAlso thanks to the\n[official node.js AWS SDK](https://github.com/aws/aws-sdk-js) for giving\nme a start on implementing the v4 signature.\n\n",
  "readmeFilename": "README.md",
  "repository": ***REMOVED***
    "type": "git",
    "url": "git+https://github.com/mhart/aws4.git"
  ***REMOVED***,
  "scripts": ***REMOVED***
    "test": "mocha ./test/fast.js ./test/slow.js -b -t 100s -R list"
  ***REMOVED***,
  "version": "1.6.0"
***REMOVED***
