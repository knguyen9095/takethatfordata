/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:no-console */
import ***REMOVED*** SDK_VERSION ***REMOVED*** from '../core/version';
import ***REMOVED*** PlatformSupport ***REMOVED*** from '../platform/platform';
export var LogLevel;
(function (LogLevel) ***REMOVED***
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["ERROR"] = 1] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 2] = "SILENT";
***REMOVED***)(LogLevel || (LogLevel = ***REMOVED******REMOVED***));
var logLevel = LogLevel.ERROR;
// Helper methods are needed because variables can't be exported as read/write
export function getLogLevel() ***REMOVED***
    return logLevel;
***REMOVED***
export function setLogLevel(newLevel) ***REMOVED***
    logLevel = newLevel;
***REMOVED***
export function debug(tag, msg) ***REMOVED***
    var obj = [];
    for (var _i = 2; _i < arguments.length; _i++) ***REMOVED***
        obj[_i - 2] = arguments[_i];
    ***REMOVED***
    if (logLevel <= LogLevel.DEBUG) ***REMOVED***
        var time = new Date().toISOString();
        var args = obj.map(argToString);
        console.log.apply(console, ["Firestore (" + SDK_VERSION + ") " + time + " [" + tag + "]: " + msg].concat(args));
    ***REMOVED***
***REMOVED***
export function error(msg) ***REMOVED***
    var obj = [];
    for (var _i = 1; _i < arguments.length; _i++) ***REMOVED***
        obj[_i - 1] = arguments[_i];
    ***REMOVED***
    if (logLevel <= LogLevel.ERROR) ***REMOVED***
        var time = new Date().toISOString();
        var args = obj.map(argToString);
        console.error.apply(console, ["Firestore (" + SDK_VERSION + ") " + time + ": " + msg].concat(args));
    ***REMOVED***
***REMOVED***
/**
 * Converts an additional log parameter to a string representation.
 */
function argToString(obj) ***REMOVED***
    if (typeof obj === 'string') ***REMOVED***
        return obj;
    ***REMOVED***
    else ***REMOVED***
        var platform = PlatformSupport.getPlatform();
        try ***REMOVED***
            return platform.formatJSON(obj);
        ***REMOVED***
        catch (e) ***REMOVED***
            // Converting to JSON failed, just log the object directly
            return obj;
        ***REMOVED***
    ***REMOVED***
***REMOVED***

//# sourceMappingURL=log.js.map
