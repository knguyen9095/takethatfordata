/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import ***REMOVED*** DocumentKeySet ***REMOVED*** from '../model/collections';
import ***REMOVED*** DocumentKey ***REMOVED*** from '../model/document_key';
import ***REMOVED*** GarbageCollector ***REMOVED*** from './garbage_collector';
import ***REMOVED*** GarbageSource ***REMOVED*** from './garbage_source';
import ***REMOVED*** PersistenceTransaction ***REMOVED*** from './persistence';
import ***REMOVED*** PersistencePromise ***REMOVED*** from './persistence_promise';
/**
 * A garbage collector implementation that does absolutely nothing. It ignores
 * all addGarbageSource and addPotentialGarbageKey messages and and never
 * produces any garbage.
 */
export declare class NoOpGarbageCollector implements GarbageCollector ***REMOVED***
    readonly isEager: boolean;
    addGarbageSource(garbageSource: GarbageSource): void;
    removeGarbageSource(garbageSource: GarbageSource): void;
    addPotentialGarbageKey(key: DocumentKey): void;
    collectGarbage(txn: PersistenceTransaction | null): PersistencePromise<DocumentKeySet>;
***REMOVED***
