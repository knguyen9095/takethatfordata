***REMOVED***"version":3,"sources":["../src/local/indexeddb_remote_document_cache.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAGH,oDAAgE;AAChE,8CAA4D;AAE5D,yCAAsC;AAEtC,uDAA2E;AAK3E,yCAAiE;AAEjE;IACE,sCAAoB,UAA2B;QAA3B,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAEnD,+CAAQ,GAAR,UACE,WAAmC,EACnC,aAA4B;QAE5B,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,GAAG,CAC1C,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,EACxB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAClD,CAAC;IACJ,CAAC;IAED,kDAAW,GAAX,UACE,WAAmC,EACnC,WAAwB;QAExB,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,+CAAQ,GAAR,UACE,WAAmC,EACnC,WAAwB;QAF1B,iBAWC;QAPC,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC;aACrC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACvB,IAAI,CAAC,UAAA,WAAW;YACf,MAAM,CAAC,WAAW;gBAChB,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,WAAW,CAAC;gBACnD,CAAC,CAAC,IAAI,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gEAAyB,GAAzB,UACE,WAAmC,EACnC,KAAY;QAFd,iBAoBC;QAhBC,IAAI,OAAO,GAAG,yBAAW,EAAE,CAAC;QAE5B,2EAA2E;QAC3E,oDAAoD;QACpD,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACtC,IAAM,KAAK,GAAG,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC/C,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC;aACrC,OAAO,CAAC,EAAE,KAAK,OAAA,EAAE,EAAE,UAAC,GAAG,EAAE,WAAW,EAAE,OAAO;YAC5C,IAAM,QAAQ,GAAG,KAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;YACnE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9C,OAAO,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,YAAY,mBAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YACnD,CAAC;QACH,CAAC,CAAC;aACD,IAAI,CAAC,cAAM,OAAA,OAAO,EAAP,CAAO,CAAC,CAAC;IACzB,CAAC;IACH,mCAAC;AAAD,CAtDA,AAsDC,IAAA;AAtDY,oEAA4B;AAwDzC;;GAEG;AACH,8BACE,GAA2B;IAE3B,EAAE,CAAC,CAAC,GAAG,YAAY,+BAAmB,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,GAAG,CAAC,KAAK,CACd,mCAAgB,CAAC,KAAK,CACvB,CAAC;IACJ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,aAAI,CAAC,sCAAsC,CAAC,CAAC;IACtD,CAAC;AACH,CAAC;AAED,eAAe,MAAmB;IAChC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AAC/B,CAAC","file":"indexeddb_remote_document_cache.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ***REMOVED*** Query ***REMOVED*** from '../core/query';\nimport ***REMOVED*** DocumentMap, documentMap ***REMOVED*** from '../model/collections';\nimport ***REMOVED*** Document, MaybeDocument ***REMOVED*** from '../model/document';\nimport ***REMOVED*** DocumentKey ***REMOVED*** from '../model/document_key';\nimport ***REMOVED*** fail ***REMOVED*** from '../util/assert';\n\nimport ***REMOVED*** DbRemoteDocument, DbRemoteDocumentKey ***REMOVED*** from './indexeddb_schema';\nimport ***REMOVED*** LocalSerializer ***REMOVED*** from './local_serializer';\nimport ***REMOVED*** PersistenceTransaction ***REMOVED*** from './persistence';\nimport ***REMOVED*** PersistencePromise ***REMOVED*** from './persistence_promise';\nimport ***REMOVED*** RemoteDocumentCache ***REMOVED*** from './remote_document_cache';\nimport ***REMOVED*** SimpleDbStore, SimpleDbTransaction ***REMOVED*** from './simple_db';\n\nexport class IndexedDbRemoteDocumentCache implements RemoteDocumentCache ***REMOVED***\n  constructor(private serializer: LocalSerializer) ***REMOVED******REMOVED***\n\n  addEntry(\n    transaction: PersistenceTransaction,\n    maybeDocument: MaybeDocument\n  ): PersistencePromise<void> ***REMOVED***\n    return remoteDocumentsStore(transaction).put(\n      dbKey(maybeDocument.key),\n      this.serializer.toDbRemoteDocument(maybeDocument)\n    );\n  ***REMOVED***\n\n  removeEntry(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<void> ***REMOVED***\n    return remoteDocumentsStore(transaction).delete(dbKey(documentKey));\n  ***REMOVED***\n\n  getEntry(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MaybeDocument | null> ***REMOVED***\n    return remoteDocumentsStore(transaction)\n      .get(dbKey(documentKey))\n      .next(dbRemoteDoc => ***REMOVED***\n        return dbRemoteDoc\n          ? this.serializer.fromDbRemoteDocument(dbRemoteDoc)\n          : null;\n      ***REMOVED***);\n  ***REMOVED***\n\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query\n  ): PersistencePromise<DocumentMap> ***REMOVED***\n    let results = documentMap();\n\n    // Documents are ordered by key, so we can use a prefix scan to narrow down\n    // the documents we need to match the query against.\n    const startKey = query.path.toArray();\n    const range = IDBKeyRange.lowerBound(startKey);\n    return remoteDocumentsStore(transaction)\n      .iterate(***REMOVED*** range ***REMOVED***, (key, dbRemoteDoc, control) => ***REMOVED***\n        const maybeDoc = this.serializer.fromDbRemoteDocument(dbRemoteDoc);\n        if (!query.path.isPrefixOf(maybeDoc.key.path)) ***REMOVED***\n          control.done();\n        ***REMOVED*** else if (maybeDoc instanceof Document && query.matches(maybeDoc)) ***REMOVED***\n          results = results.insert(maybeDoc.key, maybeDoc);\n        ***REMOVED***\n      ***REMOVED***)\n      .next(() => results);\n  ***REMOVED***\n***REMOVED***\n\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */\nfunction remoteDocumentsStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbRemoteDocumentKey, DbRemoteDocument> ***REMOVED***\n  if (txn instanceof SimpleDbTransaction) ***REMOVED***\n    return txn.store<DbRemoteDocumentKey, DbRemoteDocument>(\n      DbRemoteDocument.store\n    );\n  ***REMOVED*** else ***REMOVED***\n    return fail('Invalid transaction object provided!');\n  ***REMOVED***\n***REMOVED***\n\nfunction dbKey(docKey: DocumentKey): DbRemoteDocumentKey ***REMOVED***\n  return docKey.path.toArray();\n***REMOVED***\n"]***REMOVED***