"use strict";
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
/**
 * Simple wrapper around a nullable UID. Mostly exists to make code more
 * readable.
 */
var User = /** @class */ (function () ***REMOVED***
    function User(uid) ***REMOVED***
        this.uid = uid;
    ***REMOVED***
    User.prototype.isUnauthenticated = function () ***REMOVED***
        return this.uid == null;
    ***REMOVED***;
    /**
     * Returns a key representing this user, suitable for inclusion in a
     * dictionary.
     */
    User.prototype.toKey = function () ***REMOVED***
        if (this.isUnauthenticated()) ***REMOVED***
            return 'anonymous-user';
        ***REMOVED***
        else ***REMOVED***
            return 'uid:' + this.uid;
        ***REMOVED***
    ***REMOVED***;
    User.prototype.isEqual = function (otherUser) ***REMOVED***
        return otherUser.uid === this.uid;
    ***REMOVED***;
    /** A user with a null UID. */
    User.UNAUTHENTICATED = new User(null);
    // TODO(mikelehen): Look into getting a proper uid-equivalent for
    // non-FirebaseAuth providers.
    User.GOOGLE_CREDENTIALS = new User('google-credentials-uid');
    User.FIRST_PARTY = new User('first-party-uid');
    return User;
***REMOVED***());
exports.User = User;

//# sourceMappingURL=user.js.map
