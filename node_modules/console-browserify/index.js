/*global window, global*/
var util = require("util")
var assert = require("assert")
var now = require("date-now")

var slice = Array.prototype.slice
var console
var times = ***REMOVED******REMOVED***

if (typeof global !== "undefined" && global.console) ***REMOVED***
    console = global.console
***REMOVED*** else if (typeof window !== "undefined" && window.console) ***REMOVED***
    console = window.console
***REMOVED*** else ***REMOVED***
    console = ***REMOVED******REMOVED***
***REMOVED***

var functions = [
    [log, "log"],
    [info, "info"],
    [warn, "warn"],
    [error, "error"],
    [time, "time"],
    [timeEnd, "timeEnd"],
    [trace, "trace"],
    [dir, "dir"],
    [consoleAssert, "assert"]
]

for (var i = 0; i < functions.length; i++) ***REMOVED***
    var tuple = functions[i]
    var f = tuple[0]
    var name = tuple[1]

    if (!console[name]) ***REMOVED***
        console[name] = f
    ***REMOVED***
***REMOVED***

module.exports = console

function log() ***REMOVED******REMOVED***

function info() ***REMOVED***
    console.log.apply(console, arguments)
***REMOVED***

function warn() ***REMOVED***
    console.log.apply(console, arguments)
***REMOVED***

function error() ***REMOVED***
    console.warn.apply(console, arguments)
***REMOVED***

function time(label) ***REMOVED***
    times[label] = now()
***REMOVED***

function timeEnd(label) ***REMOVED***
    var time = times[label]
    if (!time) ***REMOVED***
        throw new Error("No such label: " + label)
    ***REMOVED***

    var duration = now() - time
    console.log(label + ": " + duration + "ms")
***REMOVED***

function trace() ***REMOVED***
    var err = new Error()
    err.name = "Trace"
    err.message = util.format.apply(null, arguments)
    console.error(err.stack)
***REMOVED***

function dir(object) ***REMOVED***
    console.log(util.inspect(object) + "\n")
***REMOVED***

function consoleAssert(expression) ***REMOVED***
    if (!expression) ***REMOVED***
        var arr = slice.call(arguments, 1)
        assert.ok(false, util.format.apply(null, arr))
    ***REMOVED***
***REMOVED***
