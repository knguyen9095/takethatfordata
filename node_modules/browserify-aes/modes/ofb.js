var xor = require('buffer-xor')

function getBlock (self) ***REMOVED***
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
***REMOVED***

exports.encrypt = function (self, chunk) ***REMOVED***
  while (self._cache.length < chunk.length) ***REMOVED***
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  ***REMOVED***

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
***REMOVED***
