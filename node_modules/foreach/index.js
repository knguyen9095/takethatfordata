
var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) ***REMOVED***
    if (toString.call(fn) !== '[object Function]') ***REMOVED***
        throw new TypeError('iterator must be a function');
    ***REMOVED***
    var l = obj.length;
    if (l === +l) ***REMOVED***
        for (var i = 0; i < l; i++) ***REMOVED***
            fn.call(ctx, obj[i], i, obj);
        ***REMOVED***
    ***REMOVED*** else ***REMOVED***
        for (var k in obj) ***REMOVED***
            if (hasOwn.call(obj, k)) ***REMOVED***
                fn.call(ctx, obj[k], k, obj);
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***
***REMOVED***;

