'use strict';
// 26.1.5 Reflect.enumerate(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var Enumerate = function (iterated) ***REMOVED***
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
***REMOVED***;
require('./_iter-create')(Enumerate, 'Object', function () ***REMOVED***
  var that = this;
  var keys = that._k;
  var key;
  do ***REMOVED***
    if (that._i >= keys.length) return ***REMOVED*** value: undefined, done: true ***REMOVED***;
  ***REMOVED*** while (!((key = keys[that._i++]) in that._t));
  return ***REMOVED*** value: key, done: false ***REMOVED***;
***REMOVED***);

$export($export.S, 'Reflect', ***REMOVED***
  enumerate: function enumerate(target) ***REMOVED***
    return new Enumerate(target);
  ***REMOVED***
***REMOVED***);
