var tape = require('tape')
var through = require('through2')
var pumpify = require('./')
var stream = require('stream')

tape('basic', function(t) ***REMOVED***
  t.plan(3)

  var pipeline = pumpify(
    through(function(data, enc, cb) ***REMOVED***
      t.same(data.toString(), 'hello')
      cb(null, data.toString().toUpperCase())
    ***REMOVED***),
    through(function(data, enc, cb) ***REMOVED***
      t.same(data.toString(), 'HELLO')
      cb(null, data.toString().toLowerCase())
    ***REMOVED***)
  )

  pipeline.write('hello')
  pipeline.on('data', function(data) ***REMOVED***
    t.same(data.toString(), 'hello')
    t.end()
  ***REMOVED***)
***REMOVED***)

tape('3 times', function(t) ***REMOVED***
  t.plan(4)

  var pipeline = pumpify(
    through(function(data, enc, cb) ***REMOVED***
      t.same(data.toString(), 'hello')
      cb(null, data.toString().toUpperCase())
    ***REMOVED***),
    through(function(data, enc, cb) ***REMOVED***
      t.same(data.toString(), 'HELLO')
      cb(null, data.toString().toLowerCase())
    ***REMOVED***),
    through(function(data, enc, cb) ***REMOVED***
      t.same(data.toString(), 'hello')
      cb(null, data.toString().toUpperCase())
    ***REMOVED***)
  )

  pipeline.write('hello')
  pipeline.on('data', function(data) ***REMOVED***
    t.same(data.toString(), 'HELLO')
    t.end()
  ***REMOVED***)
***REMOVED***)

tape('destroy', function(t) ***REMOVED***
  var test = through()
  test.destroy = function() ***REMOVED***
    t.ok(true)
    t.end()
  ***REMOVED***

  var pipeline = pumpify(through(), test)

  pipeline.destroy()
***REMOVED***)

tape('close', function(t) ***REMOVED***
  var test = through()
  var pipeline = pumpify(through(), test)

  pipeline.on('error', function(err) ***REMOVED***
    t.same(err.message, 'lol')
    t.end()
  ***REMOVED***)

  test.emit('error', new Error('lol'))
***REMOVED***)

tape('end waits for last one', function(t) ***REMOVED***
  var ran = false

  var a = through()
  var b = through()
  var c = through(function(data, enc, cb) ***REMOVED***
    setTimeout(function() ***REMOVED***
      ran = true
      cb()
    ***REMOVED***, 100)
  ***REMOVED***)

  var pipeline = pumpify(a, b, c)

  pipeline.write('foo')
  pipeline.end(function() ***REMOVED***
    t.ok(ran)
    t.end()
  ***REMOVED***)

  t.ok(!ran)
***REMOVED***)

tape('always wait for finish', function(t) ***REMOVED***
  var a = new stream.Readable()
  a._read = function() ***REMOVED******REMOVED***
  a.push('hello')

  var pipeline = pumpify(a, through(), through())
  var ran = false

  pipeline.on('finish', function() ***REMOVED***
    t.ok(ran)
    t.end()
  ***REMOVED***)

  setTimeout(function() ***REMOVED***
    ran = true
    a.push(null)
  ***REMOVED***, 100)
***REMOVED***)

tape('async', function(t) ***REMOVED***
  var pipeline = pumpify()

  t.plan(4)

  pipeline.write('hello')
  pipeline.on('data', function(data) ***REMOVED***
    t.same(data.toString(), 'HELLO')
    t.end()
  ***REMOVED***)

  setTimeout(function() ***REMOVED***
    pipeline.setPipeline(
      through(function(data, enc, cb) ***REMOVED***
        t.same(data.toString(), 'hello')
        cb(null, data.toString().toUpperCase())
      ***REMOVED***),
      through(function(data, enc, cb) ***REMOVED***
        t.same(data.toString(), 'HELLO')
        cb(null, data.toString().toLowerCase())
      ***REMOVED***),
      through(function(data, enc, cb) ***REMOVED***
        t.same(data.toString(), 'hello')
        cb(null, data.toString().toUpperCase())
      ***REMOVED***)
    )
  ***REMOVED***, 100)
***REMOVED***)

tape('early destroy', function(t) ***REMOVED***
  var a = through()
  var b = through()
  var c = through()

  b.destroy = function() ***REMOVED***
    t.ok(true)
    t.end()
  ***REMOVED***

  var pipeline = pumpify()

  pipeline.destroy()
  setTimeout(function() ***REMOVED***
    pipeline.setPipeline(a, b, c)
  ***REMOVED***, 100)
***REMOVED***)

tape('preserves error', function (t) ***REMOVED***
  var a = through()
  var b = through(function (data, enc, cb) ***REMOVED***
    cb(new Error('stop'))
  ***REMOVED***)
  var c = through()
  var s = pumpify()

  s.on('error', function (err) ***REMOVED***
    t.same(err.message, 'stop')
    t.end()
  ***REMOVED***)

  s.setPipeline(a, b, c)
  s.resume()
  s.write('hi')
***REMOVED***)
