'use strict';

var util = require('util');
var visit = require('object-visit');

/**
 * Map `visit` over an array of objects.
 *
 * @param  ***REMOVED***Object***REMOVED*** `collection` The context in which to invoke `method`
 * @param  ***REMOVED***String***REMOVED*** `method` Name of the method to call on `collection`
 * @param  ***REMOVED***Object***REMOVED*** `arr` Array of objects.
 */

module.exports = function mapVisit(collection, method, val) ***REMOVED***
  if (isObject(val)) ***REMOVED***
    return visit.apply(null, arguments);
  ***REMOVED***

  if (!Array.isArray(val)) ***REMOVED***
    throw new TypeError('expected an array: ' + util.inspect(val));
  ***REMOVED***

  var args = [].slice.call(arguments, 3);

  for (var i = 0; i < val.length; i++) ***REMOVED***
    var ele = val[i];
    if (isObject(ele)) ***REMOVED***
      visit.apply(null, [collection, method, ele].concat(args));
    ***REMOVED*** else ***REMOVED***
      collection[method].apply(collection, [ele].concat(args));
    ***REMOVED***
  ***REMOVED***
***REMOVED***;

function isObject(val) ***REMOVED***
  return val && (typeof val === 'function' || (!Array.isArray(val) && typeof val === 'object'));
***REMOVED***
