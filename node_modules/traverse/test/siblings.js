var test = require('tape');
var traverse = require('../');

test('siblings', function (t) ***REMOVED***
    var obj = ***REMOVED*** a : 1, b : 2, c : [ 4, 5, 6 ] ***REMOVED***;
    
    var res = traverse(obj).reduce(function (acc, x) ***REMOVED***
        var p = '/' + this.path.join('/');
        if (this.parent) ***REMOVED***
            acc[p] = ***REMOVED***
                siblings : this.parent.keys,
                key : this.key,
                index : this.parent.keys.indexOf(this.key)
            ***REMOVED***;
        ***REMOVED***
        else ***REMOVED***
            acc[p] = ***REMOVED***
                siblings : [],
                key : this.key,
                index : -1
            ***REMOVED***
        ***REMOVED***
        return acc;
    ***REMOVED***, ***REMOVED******REMOVED***);
    
    t.same(res, ***REMOVED***
        '/' : ***REMOVED*** siblings : [], key : undefined, index : -1 ***REMOVED***,
        '/a' : ***REMOVED*** siblings : [ 'a', 'b', 'c' ], key : 'a', index : 0 ***REMOVED***,
        '/b' : ***REMOVED*** siblings : [ 'a', 'b', 'c' ], key : 'b', index : 1 ***REMOVED***,
        '/c' : ***REMOVED*** siblings : [ 'a', 'b', 'c' ], key : 'c', index : 2 ***REMOVED***,
        '/c/0' : ***REMOVED*** siblings : [ '0', '1', '2' ], key : '0', index : 0 ***REMOVED***,
        '/c/1' : ***REMOVED*** siblings : [ '0', '1', '2' ], key : '1', index : 1 ***REMOVED***,
        '/c/2' : ***REMOVED*** siblings : [ '0', '1', '2' ], key : '2', index : 2 ***REMOVED***
    ***REMOVED***);
    
    t.end();
***REMOVED***);
