var test = require('tape')
var b64 = require('../')
var checks = [
  'a',
  'aa',
  'aaa',
  'hi',
  'hi!',
  'hi!!',
  'sup',
  'sup?',
  'sup?!'
]

test('convert to base64 and back', function (t) ***REMOVED***
  t.plan(checks.length * 2)

  for (var i = 0; i < checks.length; i++) ***REMOVED***
    var check = checks[i]
    var b64Str, arr, str

    b64Str = b64.fromByteArray(map(check, function (char) ***REMOVED*** return char.charCodeAt(0) ***REMOVED***))

    arr = b64.toByteArray(b64Str)
    str = map(arr, function (byte) ***REMOVED*** return String.fromCharCode(byte) ***REMOVED***).join('')

    t.equal(check, str, 'Checked ' + check)
    t.equal(b64.byteLength(b64Str), arr.length, 'Checked length for ' + check)
  ***REMOVED***
***REMOVED***)

function map (arr, callback) ***REMOVED***
  var res = []
  var kValue, mappedValue

  for (var k = 0, len = arr.length; k < len; k++) ***REMOVED***
    if ((typeof arr === 'string' && !!arr.charAt(k))) ***REMOVED***
      kValue = arr.charAt(k)
      mappedValue = callback(kValue, k, arr)
      res[k] = mappedValue
    ***REMOVED*** else if (typeof arr !== 'string' && k in arr) ***REMOVED***
      kValue = arr[k]
      mappedValue = callback(kValue, k, arr)
      res[k] = mappedValue
    ***REMOVED***
  ***REMOVED***
  return res
***REMOVED***
