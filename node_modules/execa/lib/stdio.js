'use strict';
const alias = ['stdin', 'stdout', 'stderr'];

const hasAlias = opts => alias.some(x => Boolean(opts[x]));

module.exports = opts => ***REMOVED***
	if (!opts) ***REMOVED***
		return null;
	***REMOVED***

	if (opts.stdio && hasAlias(opts)) ***REMOVED***
		throw new Error(`It's not possible to provide \`stdio\` in combination with one of $***REMOVED***alias.map(x => `\`$***REMOVED***x***REMOVED***\``).join(', ')***REMOVED***`);
	***REMOVED***

	if (typeof opts.stdio === 'string') ***REMOVED***
		return opts.stdio;
	***REMOVED***

	const stdio = opts.stdio || [];

	if (!Array.isArray(stdio)) ***REMOVED***
		throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`$***REMOVED***typeof stdio***REMOVED***\``);
	***REMOVED***

	const result = [];
	const len = Math.max(stdio.length, alias.length);

	for (let i = 0; i < len; i++) ***REMOVED***
		let value = null;

		if (stdio[i] !== undefined) ***REMOVED***
			value = stdio[i];
		***REMOVED*** else if (opts[alias[i]] !== undefined) ***REMOVED***
			value = opts[alias[i]];
		***REMOVED***

		result[i] = value;
	***REMOVED***

	return result;
***REMOVED***;
