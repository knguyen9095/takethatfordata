/*!
 * object.omit <https://github.com/jonschlinkert/object.omit>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */

'use strict';

var isObject = require('is-extendable');
var forOwn = require('for-own');

module.exports = function omit(obj, keys) ***REMOVED***
  if (!isObject(obj)) return ***REMOVED******REMOVED***;

  keys = [].concat.apply([], [].slice.call(arguments, 1));
  var last = keys[keys.length - 1];
  var res = ***REMOVED******REMOVED***, fn;

  if (typeof last === 'function') ***REMOVED***
    fn = keys.pop();
  ***REMOVED***

  var isFunction = typeof fn === 'function';
  if (!keys.length && !isFunction) ***REMOVED***
    return obj;
  ***REMOVED***

  forOwn(obj, function(value, key) ***REMOVED***
    if (keys.indexOf(key) === -1) ***REMOVED***

      if (!isFunction) ***REMOVED***
        res[key] = value;
      ***REMOVED*** else if (fn(value, key, obj)) ***REMOVED***
        res[key] = value;
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***);
  return res;
***REMOVED***;
