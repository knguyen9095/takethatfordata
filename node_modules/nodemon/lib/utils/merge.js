var clone = require('./clone');

module.exports = merge;

function typesMatch(a, b) ***REMOVED***
  return (typeof a === typeof b) && (Array.isArray(a) === Array.isArray(b));
***REMOVED***

/**
 * A deep merge of the source based on the target.
 * @param  ***REMOVED***Object***REMOVED*** source   [description]
 * @param  ***REMOVED***Object***REMOVED*** target   [description]
 * @return ***REMOVED***Object***REMOVED***          [description]
 */
function merge(source, target, result) ***REMOVED***
  if (result === undefined) ***REMOVED***
    result = clone(source);
  ***REMOVED***

  // merge missing values from the target to the source
  Object.getOwnPropertyNames(target).forEach(function (key) ***REMOVED***
    if (source[key] === undefined) ***REMOVED***
      result[key] = target[key];
    ***REMOVED***
  ***REMOVED***);

  Object.getOwnPropertyNames(source).forEach(function (key) ***REMOVED***
    var value = source[key];

    if (target[key] && typesMatch(value, target[key])) ***REMOVED***
      // merge empty values
      if (value === '') ***REMOVED***
        result[key] = target[key];
      ***REMOVED***

      if (Array.isArray(value)) ***REMOVED***
        if (value.length === 0 && target[key].length) ***REMOVED***
          result[key] = target[key].slice(0);
        ***REMOVED***
      ***REMOVED*** else if (typeof value === 'object') ***REMOVED***
        result[key] = merge(value, target[key]);
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***);

  return result;
***REMOVED***