'use strict';
var utils = require('../utils');
var add = require('./add');
var parse = require('./parse');

// exported
var rules = ***REMOVED*** ignore: [], watch: [] ***REMOVED***;

/**
 * Loads a nodemon config file and populates the ignore
 * and watch rules with it's contents, and calls callback
 * with the new rules
 *
 * @param  ***REMOVED***String***REMOVED*** filename
 * @param  ***REMOVED***Function***REMOVED*** callback
 */
function load(filename, callback) ***REMOVED***
  parse(filename, function (err, result) ***REMOVED***
    if (err) ***REMOVED***
      // we should have bombed already, but
      utils.log.error(err);
      callback(err);
    ***REMOVED***

    if (result.raw) ***REMOVED***
      result.raw.forEach(add.bind(null, rules, 'ignore'));
    ***REMOVED*** else ***REMOVED***
      result.ignore.forEach(add.bind(null, rules, 'ignore'));
      result.watch.forEach(add.bind(null, rules, 'watch'));
    ***REMOVED***

    callback(null, rules);
  ***REMOVED***);
***REMOVED***

module.exports = ***REMOVED***
  reset: function () ***REMOVED*** // just used for testing
    rules.ignore.length = rules.watch.length = 0;
    delete rules.ignore.re;
    delete rules.watch.re;
  ***REMOVED***,
  load: load,
  ignore: ***REMOVED***
    test: add.bind(null, rules, 'ignore'),
    add: add.bind(null, rules, 'ignore'),
  ***REMOVED***,
  watch: ***REMOVED***
    test: add.bind(null, rules, 'watch'),
    add: add.bind(null, rules, 'watch'),
  ***REMOVED***,
  add: add.bind(null, rules),
  rules: rules,
***REMOVED***;