const utils = require('./utils');
const merge = utils.merge;
const bus = utils.bus;
const spawn = require('child_process').spawn;

module.exports = function spawnCommand(command, config, eventArgs) ***REMOVED***
  var stdio = ['pipe', 'pipe', 'pipe'];

  if (config.options.stdout) ***REMOVED***
    stdio = ['pipe', process.stdout, process.stderr];
  ***REMOVED***

  var sh = 'sh';
  var shFlag = '-c';

  if (utils.isWindows) ***REMOVED***
    sh = 'cmd';
    shFlag = '/c';
  ***REMOVED***


  if (!Array.isArray(command)) ***REMOVED***
    command = [command];
  ***REMOVED***

  const args = command.join(' ');

  const env = merge(process.env, ***REMOVED*** FILENAME: eventArgs[0] ***REMOVED***);
  const child = spawn(sh, [shFlag, args], ***REMOVED***
    env: merge(config.options.execOptions.env, env),
    stdio: stdio,
  ***REMOVED***);

  if (config.required) ***REMOVED***
    var emit = ***REMOVED***
      stdout: function (data) ***REMOVED***
        bus.emit('stdout', data);
      ***REMOVED***,
      stderr: function (data) ***REMOVED***
        bus.emit('stderr', data);
      ***REMOVED***,
    ***REMOVED***;

    // now work out what to bind to...
    if (config.options.stdout) ***REMOVED***
      child.on('stdout', emit.stdout).on('stderr', emit.stderr);
    ***REMOVED*** else ***REMOVED***
      child.stdout.on('data', emit.stdout);
      child.stderr.on('data', emit.stderr);

      bus.stdout = child.stdout;
      bus.stderr = child.stderr;
    ***REMOVED***
  ***REMOVED***
***REMOVED***;
