'use strict';
var test = require('tap').test;
var undefsafe = require('../lib/undefsafe');

test('setting deep object values', function (t) ***REMOVED***
  var fixture = ***REMOVED***
    a: ***REMOVED***
      b: ***REMOVED***
        c: ***REMOVED***
          d: 10
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***;

  undefsafe(fixture, 'a.b.c.d', 20);
  t.equal(fixture.a.b.c.d, 20, 'deep primative changed');
  t.end();
***REMOVED***);

test('setting shallow object values', function (t) ***REMOVED***
  var fixture = ***REMOVED***
    a: ***REMOVED***
      b: ***REMOVED***
        c: ***REMOVED***
          d: 10
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***;

  undefsafe(fixture, 'a.b', 20);
  t.equal(fixture.a.b, 20, 'shallow object changed');
  t.end();
***REMOVED***);

test('undef value', function (t) ***REMOVED***
  var fixture = ***REMOVED***
    a: ***REMOVED***
      b: ***REMOVED***
        c: ***REMOVED***
          d: undefined
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***;

  undefsafe(fixture, 'a.b', 20);
  t.deepEqual(fixture.a.b, 20, 'swapped undefined');
  t.end();
***REMOVED***);

test('missing value', function (t) ***REMOVED***
  var fixture = ***REMOVED***
    a: ***REMOVED***
      b: ***REMOVED***
        c: ***REMOVED***
          d: 10
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***;

  var res = undefsafe(fixture, 'a.c', 20);
  t.equal(res, undefined, 'target was not found');
  t.deepEqual(fixture.a.b, ***REMOVED*** c: ***REMOVED*** d: 10 ***REMOVED*** ***REMOVED***, 'shallow object changed');
  t.end();
***REMOVED***);
