/*!
 * is-glob <https://github.com/jonschlinkert/is-glob>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isExtglob = require('is-extglob');
var chars = ***REMOVED*** '***REMOVED***': '***REMOVED***', '(': ')', '[': ']'***REMOVED***;

module.exports = function isGlob(str, options) ***REMOVED***
  if (typeof str !== 'string' || str === '') ***REMOVED***
    return false;
  ***REMOVED***

  if (isExtglob(str)) ***REMOVED***
    return true;
  ***REMOVED***

  var regex = /\\(.)|(^!|\*|[\].+)]\?|\[[^\\\]]+\]|\***REMOVED***[^\\***REMOVED***]+\***REMOVED***|\(\?[:!=][^\\)]+\)|\([^|]+\|[^\\)]+\))/;
  var match;

  // optionally relax regex
  if (options && options.strict === false) ***REMOVED***
    regex = /\\(.)|(^!|[*?***REMOVED******REMOVED***()[\]]|\(\?)/;
  ***REMOVED***

  while ((match = regex.exec(str))) ***REMOVED***
    if (match[2]) return true;
    var idx = match.index + match[0].length;

    // if an open bracket/brace/paren is escaped,
    // set the index to the next closing character
    var open = match[1];
    var close = open ? chars[open] : null;
    if (open && close) ***REMOVED***
      var n = str.indexOf(close, idx);
      if (n !== -1) ***REMOVED***
        idx = n + 1;
      ***REMOVED***
    ***REMOVED***

    str = str.slice(idx);
  ***REMOVED***
  return false;
***REMOVED***;
