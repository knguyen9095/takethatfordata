'use strict';

module.exports = function defFunc(ajv) ***REMOVED***
  defFunc.definition = ***REMOVED***
    type: 'string',
    inline: function (it, keyword, schema) ***REMOVED***
      return getRegExp() + '.test(data' + (it.dataLevel || '') + ')';

      function getRegExp() ***REMOVED***
        try ***REMOVED***
          if (typeof schema == 'object')
            return new RegExp(schema.pattern, schema.flags);

          var rx = schema.match(/^\/(.*)\/([gimy]*)$/);
          if (rx) return new RegExp(rx[1], rx[2]);
          throw new Error('cannot parse string into RegExp');
        ***REMOVED*** catch(e) ***REMOVED***
          console.error('regular expression', schema, 'is invalid');
          throw e;
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***,
    metaSchema: ***REMOVED***
      type: ['string', 'object'],
      properties: ***REMOVED***
        pattern: ***REMOVED*** type: 'string' ***REMOVED***,
        flags: ***REMOVED*** type: 'string' ***REMOVED***
      ***REMOVED***,
      required: ['pattern'],
      additionalProperties: false
    ***REMOVED***
  ***REMOVED***;

  ajv.addKeyword('regexp', defFunc.definition);
  return ajv;
***REMOVED***;
