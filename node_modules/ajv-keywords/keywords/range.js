'use strict';

module.exports = function defFunc(ajv) ***REMOVED***
  defFunc.definition = ***REMOVED***
    type: 'number',
    macro: function (schema, parentSchema) ***REMOVED***
      var min = schema[0]
        , max = schema[1]
        , exclusive = parentSchema.exclusiveRange;

      validateRangeSchema(min, max, exclusive);

      return exclusive === true
              ? ***REMOVED***exclusiveMinimum: min, exclusiveMaximum: max***REMOVED***
              : ***REMOVED***minimum: min, maximum: max***REMOVED***;
    ***REMOVED***,
    metaSchema: ***REMOVED***
      type: 'array',
      minItems: 2,
      maxItems: 2,
      items: ***REMOVED*** type: 'number' ***REMOVED***
    ***REMOVED***
  ***REMOVED***;

  ajv.addKeyword('range', defFunc.definition);
  ajv.addKeyword('exclusiveRange');
  return ajv;

  function validateRangeSchema(min, max, exclusive) ***REMOVED***
    if (exclusive !== undefined && typeof exclusive != 'boolean')
      throw new Error('Invalid schema for exclusiveRange keyword, should be boolean');

    if (min > max || (exclusive && min == max))
      throw new Error('There are no numbers in range');
  ***REMOVED***
***REMOVED***;
