'use strict';

var sequences = ***REMOVED******REMOVED***;

var DEFAULTS = ***REMOVED***
  timestamp: function() ***REMOVED*** return Date.now(); ***REMOVED***,
  datetime: function() ***REMOVED*** return (new Date).toISOString(); ***REMOVED***,
  date: function() ***REMOVED*** return (new Date).toISOString().slice(0, 10); ***REMOVED***,
  time: function() ***REMOVED*** return (new Date).toISOString().slice(11); ***REMOVED***,
  random: function() ***REMOVED*** return Math.random(); ***REMOVED***,
  randomint: function (args) ***REMOVED***
    var limit = args && args.max || 2;
    return function() ***REMOVED*** return Math.floor(Math.random() * limit); ***REMOVED***;
  ***REMOVED***,
  seq: function (args) ***REMOVED***
    var name = args && args.name || '';
    sequences[name] = sequences[name] || 0;
    return function() ***REMOVED*** return sequences[name]++; ***REMOVED***;
  ***REMOVED***
***REMOVED***;

module.exports = function defFunc(ajv) ***REMOVED***
  defFunc.definition = ***REMOVED***
    compile: function (schema, parentSchema, it) ***REMOVED***
      var funcs = ***REMOVED******REMOVED***;

      for (var key in schema) ***REMOVED***
        var d = schema[key];
        var func = getDefault(typeof d == 'string' ? d : d.func);
        funcs[key] = func.length ? func(d.args) : func;
      ***REMOVED***

      return it.opts.useDefaults && !it.compositeRule
              ? assignDefaults
              : noop;

      function assignDefaults(data) ***REMOVED***
        for (var prop in schema)
          if (data[prop] === undefined) data[prop] = funcs[prop]();
        return true;
      ***REMOVED***

      function noop() ***REMOVED*** return true; ***REMOVED***
    ***REMOVED***,
    DEFAULTS: DEFAULTS,
    metaSchema: ***REMOVED***
      type: 'object',
      additionalProperties: ***REMOVED***
        type: ['string', 'object'],
        additionalProperties: false,
        required: ['func', 'args'],
        properties: ***REMOVED***
          func: ***REMOVED*** type: 'string' ***REMOVED***,
          args: ***REMOVED*** type: 'object' ***REMOVED***
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***;

  ajv.addKeyword('dynamicDefaults', defFunc.definition);
  return ajv;

  function getDefault(d) ***REMOVED***
    var def = DEFAULTS[d];
    if (def) return def;
    throw new Error('invalid "dynamicDefaults" keyword property value: ' + d);
  ***REMOVED***
***REMOVED***;
