'use strict'

function oldBrowser () ***REMOVED***
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
***REMOVED***

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) ***REMOVED***
  module.exports = randomBytes
***REMOVED*** else ***REMOVED***
  module.exports = oldBrowser
***REMOVED***

function randomBytes (size, cb) ***REMOVED***
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) ***REMOVED***  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  ***REMOVED***

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') ***REMOVED***
    return process.nextTick(function () ***REMOVED***
      cb(null, bytes)
    ***REMOVED***)
  ***REMOVED***

  return bytes
***REMOVED***
