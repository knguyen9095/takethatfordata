/*!
 * has-values <https://github.com/jonschlinkert/has-values>
 *
 * Copyright (c) 2014-2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */

'use strict';

var typeOf = require('kind-of');
var isNumber = require('is-number');

module.exports = function hasValue(val) ***REMOVED***
  // is-number checks for NaN and other edge cases
  if (isNumber(val)) ***REMOVED***
    return true;
  ***REMOVED***

  switch (typeOf(val)) ***REMOVED***
    case 'null':
    case 'boolean':
    case 'function':
      return true;
    case 'string':
    case 'arguments':
      return val.length !== 0;
    case 'error':
      return val.message !== '';
    case 'array':
      var len = val.length;
      if (len === 0) ***REMOVED***
        return false;
      ***REMOVED***
      for (var i = 0; i < len; i++) ***REMOVED***
        if (hasValue(val[i])) ***REMOVED***
          return true;
        ***REMOVED***
      ***REMOVED***
      return false;
    case 'file':
    case 'map':
    case 'set':
      return val.size !== 0;
    case 'object':
      var keys = Object.keys(val);
      if (keys.length === 0) ***REMOVED***
        return false;
      ***REMOVED***
      for (var i = 0; i < keys.length; i++) ***REMOVED***
        var key = keys[i];
        if (hasValue(val[key])) ***REMOVED***
          return true;
        ***REMOVED***
      ***REMOVED***
      return false;
    default: ***REMOVED***
      return false;
    ***REMOVED***
  ***REMOVED***
***REMOVED***;
