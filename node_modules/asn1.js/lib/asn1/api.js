var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) ***REMOVED***
  return new Entity(name, body);
***REMOVED***;

function Entity(name, body) ***REMOVED***
  this.name = name;
  this.body = body;

  this.decoders = ***REMOVED******REMOVED***;
  this.encoders = ***REMOVED******REMOVED***;
***REMOVED***;

Entity.prototype._createNamed = function createNamed(base) ***REMOVED***
  var named;
  try ***REMOVED***
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) ***REMOVED***\n' +
      '  this._initNamed(entity);\n' +
      '***REMOVED***)'
    );
  ***REMOVED*** catch (e) ***REMOVED***
    named = function (entity) ***REMOVED***
      this._initNamed(entity);
    ***REMOVED***;
  ***REMOVED***
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) ***REMOVED***
    base.call(this, entity);
  ***REMOVED***;

  return new named(this);
***REMOVED***;

Entity.prototype._getDecoder = function _getDecoder(enc) ***REMOVED***
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
***REMOVED***;

Entity.prototype.decode = function decode(data, enc, options) ***REMOVED***
  return this._getDecoder(enc).decode(data, options);
***REMOVED***;

Entity.prototype._getEncoder = function _getEncoder(enc) ***REMOVED***
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
***REMOVED***;

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) ***REMOVED***
  return this._getEncoder(enc).encode(data, reporter);
***REMOVED***;
