// Thanks for hints: https://github.com/paulmillr/es6-shim

"use strict";

var some = Array.prototype.some
  , abs = Math.abs
  , sqrt = Math.sqrt
  , compare = function (val1, val2) ***REMOVED***
	return val2 - val1;
***REMOVED***
  , divide = function (value) ***REMOVED***
	return value / this;
***REMOVED***
  , add = function (sum, number) ***REMOVED***
	return sum + number * number;
***REMOVED***;

// eslint-disable-next-line no-unused-vars
module.exports = function (val1, val2 /*, â€¦valn*/) ***REMOVED***
	var result, numbers;
	if (!arguments.length) return 0;
	some.call(arguments, function (val) ***REMOVED***
		if (isNaN(val)) ***REMOVED***
			result = NaN;
			return false;
		***REMOVED***
		if (!isFinite(val)) ***REMOVED***
			result = Infinity;
			return true;
		***REMOVED***
		if (result !== undefined) return false;
		val = Number(val);
		if (val === 0) return false;
		if (numbers) numbers.push(abs(val));
		else numbers = [abs(val)];
		return false;
	***REMOVED***);
	if (result !== undefined) return result;
	if (!numbers) return 0;

	numbers.sort(compare);
	return numbers[0] * sqrt(numbers.map(divide, numbers[0]).reduce(add, 0));
***REMOVED***;
