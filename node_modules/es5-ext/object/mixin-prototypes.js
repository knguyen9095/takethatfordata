"use strict";

var value                    = require("./valid-value")
  , mixin                    = require("./mixin")
  , defineProperty           = Object.defineProperty
  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor
  , getOwnPropertyNames      = Object.getOwnPropertyNames
  , getPrototypeOf           = Object.getPrototypeOf
  , objHasOwnProperty        = Object.prototype.hasOwnProperty;

module.exports = function (target, source) ***REMOVED***
	var error, end, define;
	target = Object(value(target));
	source = Object(value(source));
	end = getPrototypeOf(target);
	if (source === end) return target;
	try ***REMOVED***
		mixin(target, source);
	***REMOVED*** catch (e) ***REMOVED***
		error = e;
	***REMOVED***
	source = getPrototypeOf(source);
	define = function (name) ***REMOVED***
		if (objHasOwnProperty.call(target, name)) return;
		try ***REMOVED***
			defineProperty(target, name, getOwnPropertyDescriptor(source, name));
		***REMOVED*** catch (e) ***REMOVED***
			error = e;
		***REMOVED***
	***REMOVED***;
	while (source && source !== end) ***REMOVED***
		getOwnPropertyNames(source).forEach(define);
		source = getPrototypeOf(source);
	***REMOVED***
	if (error) throw error;
	return target;
***REMOVED***;
