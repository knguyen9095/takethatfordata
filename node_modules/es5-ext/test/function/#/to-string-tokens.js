/* eslint no-eval: "off" */

"use strict";

module.exports = function (t, a) ***REMOVED***
	a.deep(
		t.call(function (a, b) ***REMOVED***
			return this[a] + this[b];
		***REMOVED***),
		***REMOVED*** args: "a, b", body: "\n\t\t\treturn this[a] + this[b];\n\t\t" ***REMOVED***
	);
	a.deep(t.call(function () ***REMOVED******REMOVED***), ***REMOVED*** args: "", body: "" ***REMOVED***);
	// eslint-disable-next-line no-unused-vars
	a.deep(t.call(function (raz) ***REMOVED******REMOVED***), ***REMOVED*** args: "raz", body: "" ***REMOVED***);
	a.deep(
		t.call(function () ***REMOVED***
			Object();
		***REMOVED***),
		***REMOVED*** args: "", body: "\n\t\t\tObject();\n\t\t" ***REMOVED***
	);

	try ***REMOVED***
		eval("(() => ***REMOVED******REMOVED***)");
	***REMOVED*** catch (e) ***REMOVED***
		// Non ES2015 env
		return;
	***REMOVED***

	a.deep(t.call(eval("(() => ***REMOVED******REMOVED***)")), ***REMOVED*** args: "", body: "" ***REMOVED***);
	a.deep(t.call(eval("((elo) => foo)")), ***REMOVED*** args: "elo", body: "foo" ***REMOVED***);
	a.deep(t.call(eval("(elo => foo)")), ***REMOVED*** args: "elo", body: "foo" ***REMOVED***);
	a.deep(t.call(eval("((elo, bar) => foo())")), ***REMOVED*** args: "elo, bar", body: "foo()" ***REMOVED***);
***REMOVED***;
