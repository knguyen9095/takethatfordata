// Some tests taken from: https://github.com/mathiasbynens/Array.from/blob/master/tests/tests.js

"use strict";

module.exports = function (t, a) ***REMOVED***
	var o = [1, 2, 3], MyType;
	a.not(t(o), o, "Array");
	a.deep(t(o), o, "Array: same content");
	a.deep(t("12r3v"), ["1", "2", "r", "3", "v"], "String");
	a.deep(
		t(
			(function () ***REMOVED***
				return arguments;
			***REMOVED***)(3, o, "raz")
		),
		[3, o, "raz"],
		"Arguments"
	);
	a.deep(
		t(
			(function () ***REMOVED***
				return arguments;
			***REMOVED***)(3)
		),
		[3],
		"Arguments with one numeric value"
	);

	a.deep(t(***REMOVED*** 0: "raz", 1: "dwa", length: 2 ***REMOVED***), ["raz", "dwa"], "Other");

	a.deep(
		t(
			o,
			function (val) ***REMOVED***
				return (val + 2) * 10;
			***REMOVED***,
			10
		),
		[30, 40, 50],
		"Mapping"
	);

	a.throws(
		function () ***REMOVED***
			t();
		***REMOVED***,
		TypeError,
		"Undefined"
	);
	a.deep(t(3), [], "Primitive");

	a(t.length, 1, "Length");
	a.deep(t(***REMOVED*** length: 0 ***REMOVED***), [], "No values Array-like");
	a.deep(t(***REMOVED*** length: -1 ***REMOVED***), [], "Invalid length Array-like");
	a.deep(t(***REMOVED*** length: -Infinity ***REMOVED***), [], "Invalid length Array-like #2");
	a.throws(
		function () ***REMOVED***
			t(undefined);
		***REMOVED***,
		TypeError,
		"Undefined"
	);
	a.throws(
		function () ***REMOVED***
			t(null);
		***REMOVED***,
		TypeError,
		"Null"
	);
	a.deep(t(false), [], "Boolean");
	a.deep(t(-Infinity), [], "Inifity");
	a.deep(t(-0), [], "-0");
	a.deep(t(+0), [], "+0");
	a.deep(t(1), [], "1");
	a.deep(t(Number(Infinity)), [], "+Infinity");
	a.deep(t(***REMOVED******REMOVED***), [], "Plain object");
	a.deep(t(***REMOVED*** length: 1 ***REMOVED***), [undefined], "Sparse array-like");
	a.deep(
		t(***REMOVED*** 0: "a", 1: "b", length: 2 ***REMOVED***, function (x) ***REMOVED***
			return x + x;
		***REMOVED***),
		["aa", "bb"],
		"Map"
	);
	a.deep(
		t(
			***REMOVED*** 0: "a", 1: "b", length: 2 ***REMOVED***,
			function () ***REMOVED***
				return String(this);
			***REMOVED***,
			undefined
		),
		["undefined", "undefined"],
		"Map context"
	);
	a.deep(
		t(
			***REMOVED*** 0: "a", 1: "b", length: 2 ***REMOVED***,
			function () ***REMOVED***
				return String(this);
			***REMOVED***,
			"x"
		),
		["x", "x"],
		"Map primitive context"
	);
	a.throws(
		function () ***REMOVED***
			t(***REMOVED******REMOVED***, "foo", "x");
		***REMOVED***,
		TypeError,
		"Non callable for map"
	);

	a.deep(t(***REMOVED*** length: 1, 0: "a" ***REMOVED***), ["a"], "Null context");

	a(t(***REMOVED*** __proto__: ***REMOVED*** 0: "abc", length: 1 ***REMOVED*** ***REMOVED***)[0], "abc", "Values on prototype");

	a.throws(
		function () ***REMOVED***
			t.call(function () ***REMOVED***
				return Object.freeze(***REMOVED******REMOVED***);
			***REMOVED***, ***REMOVED******REMOVED***);
		***REMOVED***,
		TypeError,
		"Contructor producing freezed objects"
	);

	// Ensure no setters are called for the indexes
	// Ensure no setters are called for the indexes
	MyType = function () ***REMOVED******REMOVED***;
	Object.defineProperty(MyType.prototype, "0", ***REMOVED***
		set: function (x) ***REMOVED***
			throw new Error("Setter called: " + x);
		***REMOVED***
	***REMOVED***);
	a.deep(t.call(MyType, ***REMOVED*** 0: "abc", length: 1 ***REMOVED***), ***REMOVED*** 0: "abc", length: 1 ***REMOVED***, "Defined not set");
***REMOVED***;
