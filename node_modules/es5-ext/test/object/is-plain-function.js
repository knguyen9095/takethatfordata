"use strict";

var setPrototypeOf = require("../../object/set-prototype-of");

module.exports = function (t, a) ***REMOVED***
	a(t(function () ***REMOVED******REMOVED***), true, "Function");
	a(t(***REMOVED******REMOVED***), false, "Object");
	a(t(), false, "Undefined");
	a(t(null), false, "Null");
	if (setPrototypeOf) ***REMOVED***
		a(
			t(Object.setPrototypeOf(function () ***REMOVED******REMOVED***, Object.prototype)),
			false,
			"Function with non-function prototype"
		);
	***REMOVED***
	var arrowfn;
	try ***REMOVED***
		arrowfn = eval("(() => ***REMOVED******REMOVED***)");
	***REMOVED*** catch (e) ***REMOVED******REMOVED***
	if (arrowfn) ***REMOVED***
		a(t(arrowfn), true, "Arrow function");
	***REMOVED***

	var classFn;
	try ***REMOVED***
		classFn = eval("(class ***REMOVED******REMOVED***)");
	***REMOVED*** catch (e) ***REMOVED******REMOVED***
	if (classFn) ***REMOVED***
		a(t(classFn), false, "Class");
	***REMOVED***

	var commentedClassFn;
	try ***REMOVED***
		// Follows issue reported to ljhard/is-callable project:
		// https://github.com/ljharb/is-callable/issues/4
		commentedClassFn = eval("(class/*kkk*/\n//blah\n Bar\n//blah\n ***REMOVED******REMOVED***)");
	***REMOVED*** catch (e) ***REMOVED******REMOVED***
	if (commentedClassFn) ***REMOVED***
		a(t(commentedClassFn, false, "Class"), false, "Class with comments");
	***REMOVED***
***REMOVED***;
