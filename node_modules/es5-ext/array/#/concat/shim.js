"use strict";

var isPlainArray       = require("../../is-plain-array")
  , toPosInt           = require("../../../number/to-pos-integer")
  , isObject           = require("../../../object/is-object")
  , isConcatSpreadable = require("es6-symbol").isConcatSpreadable
  , isArray            = Array.isArray
  , concat             = Array.prototype.concat
  , forEach            = Array.prototype.forEach
  , isSpreadable;

isSpreadable = function (value) ***REMOVED***
	if (!value) return false;
	if (!isObject(value)) return false;
	if (value[isConcatSpreadable] !== undefined) ***REMOVED***
		return Boolean(value[isConcatSpreadable]);
	***REMOVED***
	return isArray(value);
***REMOVED***;

// eslint-disable-next-line no-unused-vars
module.exports = function (item /*, â€¦items*/) ***REMOVED***
	var result;
	if (!this || !isArray(this) || isPlainArray(this)) ***REMOVED***
		return concat.apply(this, arguments);
	***REMOVED***
	result = new this.constructor();
	if (isSpreadable(this)) ***REMOVED***
		forEach.call(this, function (val, i) ***REMOVED***
			result[i] = val;
		***REMOVED***);
	***REMOVED*** else ***REMOVED***
		result[0] = this;
	***REMOVED***
	forEach.call(arguments, function (arg) ***REMOVED***
		var base;
		if (isSpreadable(arg)) ***REMOVED***
			base = result.length;
			result.length += toPosInt(arg.length);
			forEach.call(arg, function (val, i) ***REMOVED***
				result[base + i] = val;
			***REMOVED***);
			return;
		***REMOVED***
		result.push(arg);
	***REMOVED***);
	return result;
***REMOVED***;
