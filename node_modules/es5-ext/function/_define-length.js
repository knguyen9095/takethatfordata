"use strict";

var toPosInt = require("../number/to-pos-integer");

var test = function (arg1, arg2) ***REMOVED***
	return arg2;
***REMOVED***;

var desc, defineProperty, generate, mixin;

try ***REMOVED***
	Object.defineProperty(test, "length", ***REMOVED***
		configurable: true,
		writable: false,
		enumerable: false,
		value: 1
	***REMOVED***);
***REMOVED*** catch (ignore) ***REMOVED******REMOVED***

if (test.length === 1) ***REMOVED***
	// ES6
	desc = ***REMOVED*** configurable: true, writable: false, enumerable: false ***REMOVED***;
	defineProperty = Object.defineProperty;
	module.exports = function (fn, length) ***REMOVED***
		length = toPosInt(length);
		if (fn.length === length) return fn;
		desc.value = length;
		return defineProperty(fn, "length", desc);
	***REMOVED***;
***REMOVED*** else ***REMOVED***
	mixin = require("../object/mixin");
	generate = (function () ***REMOVED***
		var cache = [];
		return function (length) ***REMOVED***
			var args, i = 0;
			if (cache[length]) return cache[length];
			args = [];
			while (length--) args.push("a" + (++i).toString(36));
			// eslint-disable-next-line no-new-func
			return new Function(
				"fn",
				"return function (" + args.join(", ") + ") ***REMOVED*** return fn.apply(this, arguments); ***REMOVED***;"
			);
		***REMOVED***;
	***REMOVED***());
	module.exports = function (src, length) ***REMOVED***
		var target;
		length = toPosInt(length);
		if (src.length === length) return src;
		target = generate(length)(src);
		try ***REMOVED***
			mixin(target, src);
		***REMOVED*** catch (ignore) ***REMOVED******REMOVED***
		return target;
	***REMOVED***;
***REMOVED***
