"use strict";

var isArguments = require("es5-ext/function/is-arguments")
  , callable    = require("es5-ext/object/valid-callable")
  , isString    = require("es5-ext/string/is-string")
  , get         = require("./get");

var isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;

module.exports = function (iterable, cb /*, thisArg*/) ***REMOVED***
	var mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;
	if (isArray(iterable) || isArguments(iterable)) mode = "array";
	else if (isString(iterable)) mode = "string";
	else iterable = get(iterable);

	callable(cb);
	doBreak = function () ***REMOVED***
		broken = true;
	***REMOVED***;
	if (mode === "array") ***REMOVED***
		some.call(iterable, function (value) ***REMOVED***
			call.call(cb, thisArg, value, doBreak);
			return broken;
		***REMOVED***);
		return;
	***REMOVED***
	if (mode === "string") ***REMOVED***
		length = iterable.length;
		for (i = 0; i < length; ++i) ***REMOVED***
			char = iterable[i];
			if (i + 1 < length) ***REMOVED***
				code = char.charCodeAt(0);
				if (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];
			***REMOVED***
			call.call(cb, thisArg, char, doBreak);
			if (broken) break;
		***REMOVED***
		return;
	***REMOVED***
	result = iterable.next();

	while (!result.done) ***REMOVED***
		call.call(cb, thisArg, result.value, doBreak);
		if (broken) return;
		result = iterable.next();
	***REMOVED***
***REMOVED***;
