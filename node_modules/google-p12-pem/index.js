var forge = require('node-forge');
var fs = require('fs');

/**
 * Convert a .p12 file to .pem string.
 * This is the constructor so it can also be used to
 * create an object that can be reused to get different keys.
 *
 * @param  ***REMOVED***string***REMOVED***    filename The .p12 key filename.
 * @param  ***REMOVED***Function=***REMOVED*** callback The callback function.
 */
function GoogleP12toPem(filename, callback) ***REMOVED***
  if (!(this instanceof GoogleP12toPem)) ***REMOVED***
    var gp12 = new GoogleP12toPem();
    return gp12.getPem(filename, callback);
  ***REMOVED***

  this.pem = null;
***REMOVED***

/**
 * Convert a .p12 file to .pem string
 * @param  ***REMOVED***string***REMOVED***    filename The .p12 key filename.
 * @param  ***REMOVED***Function=***REMOVED*** callback The callback function.
 * @return ***REMOVED***string=***REMOVED***            The .pem private key if no callback provided.
 */
GoogleP12toPem.prototype.getPem = function(filename, callback) ***REMOVED***
  var self = this;

  if (typeof callback === 'function') ***REMOVED***
    fs.readFile(filename, ***REMOVED*** encoding: 'base64' ***REMOVED***, function(err, keyp12) ***REMOVED***
      if (err) ***REMOVED***
        callback(err, null);
        return;
      ***REMOVED***
      try ***REMOVED***
        this.pem = _convertToPem(keyp12);
      ***REMOVED*** catch (e) ***REMOVED***
        callback(e, null);
        return;
      ***REMOVED***
      callback(null, this.pem);
    ***REMOVED***);
  ***REMOVED*** else ***REMOVED***
    var keyp12 = fs.readFileSync(filename, ***REMOVED*** encoding: 'base64' ***REMOVED***);
    this.pem = _convertToPem(keyp12);
    return this.pem;
  ***REMOVED***

  function _convertToPem(p12base64) ***REMOVED***
    var p12Der = forge.util.decode64(p12base64);
    var p12Asn1 = forge.asn1.fromDer(p12Der);
    var p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'notasecret');
    var privateKey = p12.getBagsByFriendlyName('privatekey')[0].key;
    var pem = forge.pki.privateKeyToPem(privateKey);
    return pem.replace(/\r\n/g, '\n');
  ***REMOVED***
***REMOVED***;

module.exports = GoogleP12toPem;
