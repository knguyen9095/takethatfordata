module.exports = normalize

var fixer = require("./fixer")
normalize.fixer = fixer

var makeWarning = require("./make_warning")

var fieldsToFix = ['name','version','description','repository','modules','scripts'
                  ,'files','bin','man','bugs','keywords','readme','homepage','license']
var otherThingsToFix = ['dependencies','people', 'typos']

var thingsToFix = fieldsToFix.map(function(fieldName) ***REMOVED***
  return ucFirst(fieldName) + "Field"
***REMOVED***)
// two ways to do this in CoffeeScript on only one line, sub-70 chars:
// thingsToFix = fieldsToFix.map (name) -> ucFirst(name) + "Field"
// thingsToFix = (ucFirst(name) + "Field" for name in fieldsToFix)
thingsToFix = thingsToFix.concat(otherThingsToFix)

function normalize (data, warn, strict) ***REMOVED***
  if(warn === true) warn = null, strict = true
  if(!strict) strict = false
  if(!warn || data.private) warn = function(msg) ***REMOVED*** /* noop */ ***REMOVED***

  if (data.scripts &&
      data.scripts.install === "node-gyp rebuild" &&
      !data.scripts.preinstall) ***REMOVED***
    data.gypfile = true
  ***REMOVED***
  fixer.warn = function() ***REMOVED*** warn(makeWarning.apply(null, arguments)) ***REMOVED***
  thingsToFix.forEach(function(thingName) ***REMOVED***
    fixer["fix" + ucFirst(thingName)](data, strict)
  ***REMOVED***)
  data._id = data.name + "@" + data.version
***REMOVED***

function ucFirst (string) ***REMOVED***
  return string.charAt(0).toUpperCase() + string.slice(1);
***REMOVED***
