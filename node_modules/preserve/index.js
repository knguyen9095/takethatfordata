/*!
 * preserve <https://github.com/jonschlinkert/preserve>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT license.
 */

'use strict';

/**
 * Replace tokens in `str` with a temporary, heuristic placeholder.
 *
 * ```js
 * tokens.before('***REMOVED***a\\,b***REMOVED***');
 * //=> '***REMOVED***__ID1__***REMOVED***'
 * ```
 *
 * @param  ***REMOVED***String***REMOVED*** `str`
 * @return ***REMOVED***String***REMOVED*** String with placeholders.
 * @api public
 */

exports.before = function before(str, re) ***REMOVED***
  return str.replace(re, function (match) ***REMOVED***
    var id = randomize();
    cache[id] = match;
    return '__ID' + id + '__';
  ***REMOVED***);
***REMOVED***;

/**
 * Replace placeholders in `str` with original tokens.
 *
 * ```js
 * tokens.after('***REMOVED***__ID1__***REMOVED***');
 * //=> '***REMOVED***a\\,b***REMOVED***'
 * ```
 *
 * @param  ***REMOVED***String***REMOVED*** `str` String with placeholders
 * @return ***REMOVED***String***REMOVED*** `str` String with original tokens.
 * @api public
 */

exports.after = function after(str) ***REMOVED***
  return str.replace(/__ID(.***REMOVED***5***REMOVED***)__/g, function (_, id) ***REMOVED***
    return cache[id];
  ***REMOVED***);
***REMOVED***;

function randomize() ***REMOVED***
  return Math.random().toString().slice(2, 7);
***REMOVED***

var cache = ***REMOVED******REMOVED***;