'use strict';
var captureStackTrace = require('capture-stack-trace');

function inherits(ctor, superCtor) ***REMOVED***
	ctor.super_ = superCtor;
	ctor.prototype = Object.create(superCtor.prototype, ***REMOVED***
		constructor: ***REMOVED***
			value: ctor,
			enumerable: false,
			writable: true,
			configurable: true
		***REMOVED***
	***REMOVED***);
***REMOVED***

module.exports = function createErrorClass(className, setup) ***REMOVED***
	if (typeof className !== 'string') ***REMOVED***
		throw new TypeError('Expected className to be a string');
	***REMOVED***

	if (/[^0-9a-zA-Z_$]/.test(className)) ***REMOVED***
		throw new Error('className contains invalid characters');
	***REMOVED***

	setup = setup || function (message) ***REMOVED***
		this.message = message;
	***REMOVED***;

	var ErrorClass = function () ***REMOVED***
		Object.defineProperty(this, 'name', ***REMOVED***
			configurable: true,
			value: className,
			writable: true
		***REMOVED***);

		captureStackTrace(this, this.constructor);

		setup.apply(this, arguments);
	***REMOVED***;

	inherits(ErrorClass, Error);

	return ErrorClass;
***REMOVED***;
