/*!
 * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */

'use strict';

var typeOf = require('kind-of');

// data descriptor properties
var data = ***REMOVED***
  configurable: 'boolean',
  enumerable: 'boolean',
  writable: 'boolean'
***REMOVED***;

function isDataDescriptor(obj, prop) ***REMOVED***
  if (typeOf(obj) !== 'object') ***REMOVED***
    return false;
  ***REMOVED***

  if (typeof prop === 'string') ***REMOVED***
    var val = Object.getOwnPropertyDescriptor(obj, prop);
    return typeof val !== 'undefined';
  ***REMOVED***

  if (!('value' in obj) && !('writable' in obj)) ***REMOVED***
    return false;
  ***REMOVED***

  for (var key in obj) ***REMOVED***
    if (key === 'value') continue;

    if (!data.hasOwnProperty(key)) ***REMOVED***
      continue;
    ***REMOVED***

    if (typeOf(obj[key]) === data[key]) ***REMOVED***
      continue;
    ***REMOVED***

    if (typeof obj[key] !== 'undefined') ***REMOVED***
      return false;
    ***REMOVED***
  ***REMOVED***
  return true;
***REMOVED***

/**
 * Expose `isDataDescriptor`
 */

module.exports = isDataDescriptor;
