'use strict';

const assertDeepStrictEqual = require('assert').deepStrictEqual;
const tests = require('../spec/tests');
const Benchmark = require('benchmark');
const suite = new Benchmark.Suite;


const equalPackages = ***REMOVED***
  'fast-deep-equal': require('../index'),
  'nano-equal': true,
  'shallow-equal-fuzzy': true,
  'underscore.isEqual': require('underscore').isEqual,
  'lodash.isEqual': require('lodash').isEqual,
  'deep-equal': true,
  'deep-eql': true,
  'assert.deepStrictEqual': (a, b) => ***REMOVED***
    try ***REMOVED*** assertDeepStrictEqual(a, b); return true; ***REMOVED***
    catch(e) ***REMOVED*** return false; ***REMOVED***
  ***REMOVED***
***REMOVED***;


for (const equalName in equalPackages) ***REMOVED***
  let equalFunc = equalPackages[equalName];
  if (equalFunc === true) equalFunc = require(equalName);

  for (const testSuite of tests) ***REMOVED***
    for (const test of testSuite.tests) ***REMOVED***
      try ***REMOVED***
        if (equalFunc(test.value1, test.value2) !== test.equal)
          console.error('different result', equalName, testSuite.description, test.description);
      ***REMOVED*** catch(e) ***REMOVED***
        console.error(equalName, testSuite.description, test.description, e);
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***

  suite.add(equalName, function() ***REMOVED***
    for (const testSuite of tests) ***REMOVED***
      for (const test of testSuite.tests) ***REMOVED***
        if (test.description != 'pseudo array and equivalent array are not equal')
          equalFunc(test.value1, test.value2);
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***);
***REMOVED***

console.log();

suite
  .on('cycle', (event) => console.log(String(event.target)))
  .on('complete', function () ***REMOVED***
    console.log('The fastest is ' + this.filter('fastest').map('name'));
  ***REMOVED***)
  .run(***REMOVED***async: true***REMOVED***);
