/**
 * Calculates the byte length of a base64 encoded string.
 * @param ***REMOVED***string***REMOVED*** string Base64 encoded string
 * @returns ***REMOVED***number***REMOVED*** Byte length
 */
export function length(string: string): number;

/**
 * Encodes a buffer to a base64 encoded string.
 * @param ***REMOVED***Uint8Array***REMOVED*** buffer Source buffer
 * @param ***REMOVED***number***REMOVED*** start Source start
 * @param ***REMOVED***number***REMOVED*** end Source end
 * @returns ***REMOVED***string***REMOVED*** Base64 encoded string
 */
export function encode(buffer: Uint8Array, start: number, end: number): string;

/**
 * Decodes a base64 encoded string to a buffer.
 * @param ***REMOVED***string***REMOVED*** string Source string
 * @param ***REMOVED***Uint8Array***REMOVED*** buffer Destination buffer
 * @param ***REMOVED***number***REMOVED*** offset Destination offset
 * @returns ***REMOVED***number***REMOVED*** Number of bytes written
 * @throws ***REMOVED***Error***REMOVED*** If encoding is invalid
 */
export function decode(string: string, buffer: Uint8Array, offset: number): number;

/**
 * Tests if the specified string appears to be base64 encoded.
 * @param ***REMOVED***string***REMOVED*** string String to test
 * @returns ***REMOVED***boolean***REMOVED*** `true` if it appears to be base64 encoded, otherwise false
 */
export function test(string: string): boolean;
