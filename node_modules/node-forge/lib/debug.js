/**
 * Debugging support for web applications.
 *
 * @author David I. Lehn <dlehn@digitalbazaar.com>
 *
 * Copyright 2008-2013 Digital Bazaar, Inc.
 */
var forge = require('./forge');

/* DEBUG API */
module.exports = forge.debug = forge.debug || ***REMOVED******REMOVED***;

// Private storage for debugging.
// Useful to expose data that is otherwise unviewable behind closures.
// NOTE: remember that this can hold references to data and cause leaks!
// format is "forge._debug.<modulename>.<dataname> = data"
// Example:
// (function() ***REMOVED***
//   var cat = 'forge.test.Test'; // debugging category
//   var sState = ***REMOVED***...***REMOVED***; // local state
//   forge.debug.set(cat, 'sState', sState);
// ***REMOVED***)();
forge.debug.storage = ***REMOVED******REMOVED***;

/**
 * Gets debug data. Omit name for all cat data  Omit name and cat for
 * all data.
 *
 * @param cat name of debugging category.
 * @param name name of data to get (optional).
 * @return object with requested debug data or undefined.
 */
forge.debug.get = function(cat, name) ***REMOVED***
  var rval;
  if(typeof(cat) === 'undefined') ***REMOVED***
    rval = forge.debug.storage;
  ***REMOVED*** else if(cat in forge.debug.storage) ***REMOVED***
    if(typeof(name) === 'undefined') ***REMOVED***
      rval = forge.debug.storage[cat];
    ***REMOVED*** else ***REMOVED***
      rval = forge.debug.storage[cat][name];
    ***REMOVED***
  ***REMOVED***
  return rval;
***REMOVED***;

/**
 * Sets debug data.
 *
 * @param cat name of debugging category.
 * @param name name of data to set.
 * @param data data to set.
 */
forge.debug.set = function(cat, name, data) ***REMOVED***
  if(!(cat in forge.debug.storage)) ***REMOVED***
    forge.debug.storage[cat] = ***REMOVED******REMOVED***;
  ***REMOVED***
  forge.debug.storage[cat][name] = data;
***REMOVED***;

/**
 * Clears debug data. Omit name for all cat data. Omit name and cat for
 * all data.
 *
 * @param cat name of debugging category.
 * @param name name of data to clear or omit to clear entire category.
 */
forge.debug.clear = function(cat, name) ***REMOVED***
  if(typeof(cat) === 'undefined') ***REMOVED***
    forge.debug.storage = ***REMOVED******REMOVED***;
  ***REMOVED*** else if(cat in forge.debug.storage) ***REMOVED***
    if(typeof(name) === 'undefined') ***REMOVED***
      delete forge.debug.storage[cat];
    ***REMOVED*** else ***REMOVED***
      delete forge.debug.storage[cat][name];
    ***REMOVED***
  ***REMOVED***
***REMOVED***;
