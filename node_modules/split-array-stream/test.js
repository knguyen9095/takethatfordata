'use strict';

var assert = require('assert');
var through = require('through2');

var split = require('./index.js');

describe('split-array-stream', function () ***REMOVED***
  var array = [
    ***REMOVED*** id: 1, user: 'Dave' ***REMOVED***,
    ***REMOVED*** id: 2, user: 'Dave' ***REMOVED***,
    ***REMOVED*** id: 3, user: 'Dave' ***REMOVED***,
    ***REMOVED*** id: 4, user: 'Stephen' ***REMOVED***
  ];

  it('should work', function (done) ***REMOVED***
    var numDataEvents = 0;

    var stream = through.obj();

    stream.on('data', function () ***REMOVED*** numDataEvents++; ***REMOVED***);

    split(array, stream, function (streamEnded) ***REMOVED***
      assert.strictEqual(streamEnded, false);
      assert.strictEqual(numDataEvents, array.length);

      done();
    ***REMOVED***);
  ***REMOVED***);

  it('should not push more results after end', function (done) ***REMOVED***
    var stream = through.obj();

    var numDataEvents = 0;
    var expectedNumDataEvents = 2;

    stream.on('data', function () ***REMOVED***
      numDataEvents++;

      if (numDataEvents === expectedNumDataEvents) ***REMOVED***
        this.end();
      ***REMOVED***

      if (numDataEvents > expectedNumDataEvents) ***REMOVED***
        throw new Error('Should not have received this event.');
      ***REMOVED***
    ***REMOVED***);

    split(array, stream, function (streamEnded) ***REMOVED***
      assert.strictEqual(streamEnded, true);
      assert.strictEqual(numDataEvents, expectedNumDataEvents);

      done();
    ***REMOVED***);
  ***REMOVED***);

  it('should not modify original array', function (done) ***REMOVED***
    var expectedArray = [].slice.call(array);

    split(array, through.obj(), function () ***REMOVED***
      assert.deepEqual(array, expectedArray);
      done();
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);