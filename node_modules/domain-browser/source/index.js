// This file should be ES5 compatible
/* eslint prefer-spread:0, no-var:0, prefer-reflect:0, no-magic-numbers:0 */
'use strict'

module.exports = (function () ***REMOVED***
	// Import Events
	var events = require('events')

	// Export Domain
	var domain = ***REMOVED******REMOVED***
	domain.createDomain = domain.create = function () ***REMOVED***
		var d = new events.EventEmitter()

		function emitError (e) ***REMOVED***
			d.emit('error', e)
		***REMOVED***

		d.add = function (emitter) ***REMOVED***
			emitter.on('error', emitError)
		***REMOVED***
		d.remove = function (emitter) ***REMOVED***
			emitter.removeListener('error', emitError)
		***REMOVED***
		d.bind = function (fn) ***REMOVED***
			return function () ***REMOVED***
				var args = Array.prototype.slice.call(arguments)
				try ***REMOVED***
					fn.apply(null, args)
				***REMOVED***
				catch (err) ***REMOVED***
					emitError(err)
				***REMOVED***
			***REMOVED***
		***REMOVED***
		d.intercept = function (fn) ***REMOVED***
			return function (err) ***REMOVED***
				if ( err ) ***REMOVED***
					emitError(err)
				***REMOVED***
				else ***REMOVED***
					var args = Array.prototype.slice.call(arguments, 1)
					try ***REMOVED***
						fn.apply(null, args)
					***REMOVED***
					catch (err) ***REMOVED***
						emitError(err)
					***REMOVED***
				***REMOVED***
			***REMOVED***
		***REMOVED***
		d.run = function (fn) ***REMOVED***
			try ***REMOVED***
				fn()
			***REMOVED***
			catch (err) ***REMOVED***
				emitError(err)
			***REMOVED***
			return this
		***REMOVED***
		d.dispose = function () ***REMOVED***
			this.removeAllListeners()
			return this
		***REMOVED***
		d.enter = d.exit = function () ***REMOVED***
			return this
		***REMOVED***
		return d
	***REMOVED***
	return domain
***REMOVED***).call(this)
