"use strict";

module.exports = exports = build;

exports.usage = 'Attempts to compile the module by dispatching to node-gyp or nw-gyp';

var compile = require('./util/compile.js');
var handle_gyp_opts = require('./util/handle_gyp_opts.js');
var configure = require('./configure.js');

function do_build(gyp,argv,callback) ***REMOVED***
    handle_gyp_opts(gyp,argv,function(err,result) ***REMOVED***
        var final_args = ['build'].concat(result.gyp).concat(result.pre);
        if (result.unparsed.length > 0) ***REMOVED***
            final_args = final_args.
                          concat(['--']).
                          concat(result.unparsed);
        ***REMOVED***
        compile.run_gyp(final_args,result.opts,function(err) ***REMOVED***
            return callback(err);
        ***REMOVED***);
    ***REMOVED***);
***REMOVED***

function build(gyp, argv, callback) ***REMOVED***

    // Form up commands to pass to node-gyp:
    // We map `node-pre-gyp build` to `node-gyp configure build` so that we do not
    // trigger a clean and therefore do not pay the penalty of a full recompile
    if (argv.length && (argv.indexOf('rebuild') > -1)) ***REMOVED***
        // here we map `node-pre-gyp rebuild` to `node-gyp rebuild` which internally means
        // "clean + configure + build" and triggers a full recompile
        compile.run_gyp(['clean'],***REMOVED******REMOVED***,function(err) ***REMOVED***
            if (err) return callback(err);
            configure(gyp,argv,function(err) ***REMOVED***
                if (err) return callback(err);
                return do_build(gyp,argv,callback);
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED*** else ***REMOVED***
        return do_build(gyp,argv,callback);        
    ***REMOVED***
***REMOVED***
