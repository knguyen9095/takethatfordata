'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) ***REMOVED***
  module.exports = nextTick;
***REMOVED*** else ***REMOVED***
  module.exports = process.nextTick;
***REMOVED***

function nextTick(fn, arg1, arg2, arg3) ***REMOVED***
  if (typeof fn !== 'function') ***REMOVED***
    throw new TypeError('"callback" argument must be a function');
  ***REMOVED***
  var len = arguments.length;
  var args, i;
  switch (len) ***REMOVED***
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() ***REMOVED***
      fn.call(null, arg1);
    ***REMOVED***);
  case 3:
    return process.nextTick(function afterTickTwo() ***REMOVED***
      fn.call(null, arg1, arg2);
    ***REMOVED***);
  case 4:
    return process.nextTick(function afterTickThree() ***REMOVED***
      fn.call(null, arg1, arg2, arg3);
    ***REMOVED***);
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) ***REMOVED***
      args[i++] = arguments[i];
    ***REMOVED***
    return process.nextTick(function afterTick() ***REMOVED***
      fn.apply(null, args);
    ***REMOVED***);
  ***REMOVED***
***REMOVED***
