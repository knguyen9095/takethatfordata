***REMOVED***
  "_args": [
    [
      "caseless@0.12.0",
      "/usr/local/google/home/mlumish/grpc-node/packages/grpc-native-core"
    ]
  ],
  "_from": "caseless@0.12.0",
  "_id": "caseless@0.12.0",
  "_inBundle": false,
  "_integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=",
  "_location": "/@google-cloud/firestore/grpc/caseless",
  "_phantomChildren": ***REMOVED******REMOVED***,
  "_requested": ***REMOVED***
    "type": "version",
    "registry": true,
    "raw": "caseless@0.12.0",
    "name": "caseless",
    "escapedName": "caseless",
    "rawSpec": "0.12.0",
    "saveSpec": null,
    "fetchSpec": "0.12.0"
  ***REMOVED***,
  "_requiredBy": [
    "/@google-cloud/firestore/grpc/request"
  ],
  "_resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
  "_shrinkwrap": null,
  "_spec": "0.12.0",
  "_where": "/usr/local/google/home/mlumish/grpc-node/packages/grpc-native-core",
  "author": ***REMOVED***
    "name": "Mikeal Rogers",
    "email": "mikeal.rogers@gmail.com"
  ***REMOVED***,
  "bugs": ***REMOVED***
    "url": "https://github.com/mikeal/caseless/issues"
  ***REMOVED***,
  "dependencies": ***REMOVED******REMOVED***,
  "description": "Caseless object set/get/has, very useful when working with HTTP headers.",
  "devDependencies": ***REMOVED***
    "tape": "^2.10.2"
  ***REMOVED***,
  "homepage": "https://github.com/mikeal/caseless#readme",
  "keywords": [
    "headers",
    "http",
    "caseless"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "caseless",
  "optionalDependencies": ***REMOVED******REMOVED***,
  "readme": "## Caseless -- wrap an object to set and get property with caseless semantics but also preserve caseing.\n\nThis library is incredibly useful when working with HTTP headers. It allows you to get/set/check for headers in a caseless manner while also preserving the caseing of headers the first time they are set.\n\n## Usage\n\n```javascript\nvar headers = ***REMOVED******REMOVED***\n  , c = caseless(headers)\n  ;\nc.set('a-Header', 'asdf')\nc.get('a-header') === 'asdf'\n```\n\n## has(key)\n\nHas takes a name and if it finds a matching header will return that header name with the preserved caseing it was set with.\n\n```javascript\nc.has('a-header') === 'a-Header'\n```\n\n## set(key, value[, clobber=true])\n\nSet is fairly straight forward except that if the header exists and clobber is disabled it will add `','+value` to the existing header.\n\n```javascript\nc.set('a-Header', 'fdas')\nc.set('a-HEADER', 'more', false)\nc.get('a-header') === 'fdsa,more'\n```\n\n## swap(key)\n\nSwaps the casing of a header with the new one that is passed in.\n\n```javascript\nvar headers = ***REMOVED******REMOVED***\n  , c = caseless(headers)\n  ;\nc.set('a-Header', 'fdas')\nc.swap('a-HEADER')\nc.has('a-header') === 'a-HEADER'\nheaders === ***REMOVED***'a-HEADER': 'fdas'***REMOVED***\n```\n",
  "readmeFilename": "README.md",
  "repository": ***REMOVED***
    "type": "git",
    "url": "git+https://github.com/mikeal/caseless.git"
  ***REMOVED***,
  "scripts": ***REMOVED***
    "test": "node test.js"
  ***REMOVED***,
  "test": "node test.js",
  "version": "0.12.0"
***REMOVED***
