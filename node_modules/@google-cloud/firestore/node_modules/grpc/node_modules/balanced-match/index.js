'use strict';
module.exports = balanced;
function balanced(a, b, str) ***REMOVED***
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && ***REMOVED***
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  ***REMOVED***;
***REMOVED***

function maybeMatch(reg, str) ***REMOVED***
  var m = str.match(reg);
  return m ? m[0] : null;
***REMOVED***

balanced.range = range;
function range(a, b, str) ***REMOVED***
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) ***REMOVED***
    begs = [];
    left = str.length;

    while (i >= 0 && !result) ***REMOVED***
      if (i == ai) ***REMOVED***
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      ***REMOVED*** else if (begs.length == 1) ***REMOVED***
        result = [ begs.pop(), bi ];
      ***REMOVED*** else ***REMOVED***
        beg = begs.pop();
        if (beg < left) ***REMOVED***
          left = beg;
          right = bi;
        ***REMOVED***

        bi = str.indexOf(b, i + 1);
      ***REMOVED***

      i = ai < bi && ai >= 0 ? ai : bi;
    ***REMOVED***

    if (begs.length) ***REMOVED***
      result = [ left, right ];
    ***REMOVED***
  ***REMOVED***

  return result;
***REMOVED***
