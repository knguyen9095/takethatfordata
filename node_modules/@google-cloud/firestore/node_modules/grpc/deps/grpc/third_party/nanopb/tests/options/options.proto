/* Test nanopb option parsing.
 * options.expected lists the patterns that are searched for in the output.
 */

syntax = "proto2";

import "nanopb.proto";

// File level options
option (nanopb_fileopt).max_size = 20;

message Message1
***REMOVED***
    required string filesize = 1;
***REMOVED***

// Message level options
message Message2
***REMOVED***
    option (nanopb_msgopt).max_size = 30;
    required string msgsize = 1;
***REMOVED***

// Field level options
message Message3
***REMOVED***
    option (nanopb_msgopt).msgid = 103;
    required string fieldsize = 1 [(nanopb).max_size = 40];
***REMOVED***

// Forced callback field
message Message4
***REMOVED***
    option (nanopb_msgopt).msgid = 104;
    required int32 int32_callback = 1 [(nanopb).type = FT_CALLBACK];
***REMOVED***

// Short enum names
enum Enum1
***REMOVED***
    option (nanopb_enumopt).long_names = false;
    EnumValue1 = 1;
    EnumValue2 = 2;
***REMOVED***

message EnumTest
***REMOVED***
    required Enum1 field = 1 [default = EnumValue2];
***REMOVED***

// Short enum names inside message
message Message5
***REMOVED***
    option (nanopb_msgopt).msgid = 105;
    enum Enum2
    ***REMOVED***
       option (nanopb_enumopt).long_names = false;
       EnumValue1 = 1;
    ***REMOVED***
    required Enum2 field = 1 [default = EnumValue1];
***REMOVED***

// Packed structure
message my_packed_struct
***REMOVED***
    option (nanopb_msgopt).packed_struct = true;
    optional int32 myfield = 1;
***REMOVED***

// Message with ignored field
message Message6
***REMOVED***
    required int32 field1 = 1;
    optional int32 skipped_field = 2 [(nanopb).type = FT_IGNORE];
***REMOVED***

// Message that is skipped
message SkippedMessage
***REMOVED***
    option (nanopb_msgopt).skip_message = true;
    required int32 foo = 1;
***REMOVED***

// Message with oneof field
message OneofMessage
***REMOVED***
    oneof foo ***REMOVED***
        int32 bar = 1;
    ***REMOVED***
***REMOVED***

