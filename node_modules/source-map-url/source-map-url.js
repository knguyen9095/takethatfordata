// Copyright 2014 Simon Lydell
// X11 (“MIT”) Licensed. (See LICENSE.)

void (function(root, factory) ***REMOVED***
  if (typeof define === "function" && define.amd) ***REMOVED***
    define(factory)
  ***REMOVED*** else if (typeof exports === "object") ***REMOVED***
    module.exports = factory()
  ***REMOVED*** else ***REMOVED***
    root.sourceMappingURL = factory()
  ***REMOVED***
***REMOVED***(this, function() ***REMOVED***

  var innerRegex = /[#@] sourceMappingURL=([^\s'"]*)/

  var regex = RegExp(
    "(?:" +
      "/\\*" +
      "(?:\\s*\r?\n(?://)?)?" +
      "(?:" + innerRegex.source + ")" +
      "\\s*" +
      "\\*/" +
      "|" +
      "//(?:" + innerRegex.source + ")" +
    ")" +
    "\\s*"
  )

  return ***REMOVED***

    regex: regex,
    _innerRegex: innerRegex,

    getFrom: function(code) ***REMOVED***
      var match = code.match(regex)
      return (match ? match[1] || match[2] || "" : null)
    ***REMOVED***,

    existsIn: function(code) ***REMOVED***
      return regex.test(code)
    ***REMOVED***,

    removeFrom: function(code) ***REMOVED***
      return code.replace(regex, "")
    ***REMOVED***,

    insertBefore: function(code, string) ***REMOVED***
      var match = code.match(regex)
      if (match) ***REMOVED***
        return code.slice(0, match.index) + string + code.slice(match.index)
      ***REMOVED*** else ***REMOVED***
        return code + string
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***

***REMOVED***));
