'use strict';

var isExtendable = require('is-extendable');
var forIn = require('for-in');

function mixinDeep(target, objects) ***REMOVED***
  var len = arguments.length, i = 0;
  while (++i < len) ***REMOVED***
    var obj = arguments[i];
    if (isObject(obj)) ***REMOVED***
      forIn(obj, copy, target);
    ***REMOVED***
  ***REMOVED***
  return target;
***REMOVED***

/**
 * Copy properties from the source object to the
 * target object.
 *
 * @param  ***REMOVED*******REMOVED*** `val`
 * @param  ***REMOVED***String***REMOVED*** `key`
 */

function copy(val, key) ***REMOVED***
  var obj = this[key];
  if (isObject(val) && isObject(obj)) ***REMOVED***
    mixinDeep(obj, val);
  ***REMOVED*** else ***REMOVED***
    this[key] = val;
  ***REMOVED***
***REMOVED***

/**
 * Returns true if `val` is an object or function.
 *
 * @param  ***REMOVED***any***REMOVED*** val
 * @return ***REMOVED***Boolean***REMOVED***
 */

function isObject(val) ***REMOVED***
  return isExtendable(val) && !Array.isArray(val);
***REMOVED***

/**
 * Expose `mixinDeep`
 */

module.exports = mixinDeep;
