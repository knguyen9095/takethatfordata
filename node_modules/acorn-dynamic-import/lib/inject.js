Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);
exports['default'] = injectDynamicImport;
/* eslint-disable no-underscore-dangle */

function injectDynamicImport(acorn) ***REMOVED***
  var tt = acorn.tokTypes;

  // NOTE: This allows `yield import()` to parse correctly.
  tt._import.startsExpr = true;

  function parseDynamicImport() ***REMOVED***
    var node = this.startNode();
    this.next();
    if (this.type !== tt.parenL) ***REMOVED***
      this.unexpected();
    ***REMOVED***
    return this.finishNode(node, 'Import');
  ***REMOVED***

  function peekNext() ***REMOVED***
    return this.input[this.pos];
  ***REMOVED***

  // eslint-disable-next-line no-param-reassign
  acorn.plugins.dynamicImport = function () ***REMOVED***
    function dynamicImportPlugin(instance) ***REMOVED***
      instance.extend('parseStatement', function (nextMethod) ***REMOVED***
        return function () ***REMOVED***
          function parseStatement() ***REMOVED***
            var node = this.startNode();
            if (this.type === tt._import) ***REMOVED***
              var nextToken = peekNext.call(this);
              if (nextToken === tt.parenL.label) ***REMOVED***
                var expr = this.parseExpression();
                return this.parseExpressionStatement(node, expr);
              ***REMOVED***
            ***REMOVED***

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) ***REMOVED***
              args[_key] = arguments[_key];
            ***REMOVED***

            return nextMethod.apply(this, args);
          ***REMOVED***

          return parseStatement;
        ***REMOVED***();
      ***REMOVED***);

      instance.extend('parseExprAtom', function (nextMethod) ***REMOVED***
        return function () ***REMOVED***
          function parseExprAtom(refDestructuringErrors) ***REMOVED***
            if (this.type === tt._import) ***REMOVED***
              return parseDynamicImport.call(this);
            ***REMOVED***
            return nextMethod.call(this, refDestructuringErrors);
          ***REMOVED***

          return parseExprAtom;
        ***REMOVED***();
      ***REMOVED***);
    ***REMOVED***

    return dynamicImportPlugin;
  ***REMOVED***();

  return acorn;
***REMOVED***