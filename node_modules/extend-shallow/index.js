'use strict';

var isObject = require('is-extendable');

module.exports = function extend(o/*, objects*/) ***REMOVED***
  if (!isObject(o)) ***REMOVED*** o = ***REMOVED******REMOVED***; ***REMOVED***

  var len = arguments.length;
  for (var i = 1; i < len; i++) ***REMOVED***
    var obj = arguments[i];

    if (isObject(obj)) ***REMOVED***
      assign(o, obj);
    ***REMOVED***
  ***REMOVED***
  return o;
***REMOVED***;

function assign(a, b) ***REMOVED***
  for (var key in b) ***REMOVED***
    if (hasOwn(b, key)) ***REMOVED***
      a[key] = b[key];
    ***REMOVED***
  ***REMOVED***
***REMOVED***

/**
 * Returns true if the given `key` is an own property of `obj`.
 */

function hasOwn(obj, key) ***REMOVED***
  return Object.prototype.hasOwnProperty.call(obj, key);
***REMOVED***
