/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

var Source = require("./Source");
var SourceNode = require("source-map").SourceNode;

var REPLACE_REGEX = /\n(?=.|\s)/g;

function cloneAndPrefix(node, prefix, append) ***REMOVED***
	if(typeof node === "string") ***REMOVED***
		var result = node.replace(REPLACE_REGEX, "\n" + prefix);
		if(append.length > 0) result = append.pop() + result;
		if(/\n$/.test(node)) append.push(prefix);
		return result;
	***REMOVED*** else ***REMOVED***
		var newNode = new SourceNode(
			node.line,
			node.column,
			node.source,
			node.children.map(function(node) ***REMOVED***
				return cloneAndPrefix(node, prefix, append);
			***REMOVED***),
			node.name
		);
		newNode.sourceContents = node.sourceContents;
		return newNode;
	***REMOVED***
***REMOVED***;

class PrefixSource extends Source ***REMOVED***
	constructor(prefix, source) ***REMOVED***
		super();
		this._source = source;
		this._prefix = prefix;
	***REMOVED***

	source() ***REMOVED***
		var node = typeof this._source === "string" ? this._source : this._source.source();
		var prefix = this._prefix;
		return prefix + node.replace(REPLACE_REGEX, "\n" + prefix);
	***REMOVED***

	node(options) ***REMOVED***
		var node = this._source.node(options);
		var append = [this._prefix];
		return new SourceNode(null, null, null, [
			cloneAndPrefix(node, this._prefix, append)
		]);
	***REMOVED***

	listMap(options) ***REMOVED***
		var prefix = this._prefix;
		var map = this._source.listMap(options);
		return map.mapGeneratedCode(function(code) ***REMOVED***
			return prefix + code.replace(REPLACE_REGEX, "\n" + prefix);
		***REMOVED***);
	***REMOVED***

	updateHash(hash) ***REMOVED***
		if(typeof this._source === "string")
			hash.update(this._source);
		else
			this._source.updateHash(hash);
		if(typeof this._prefix === "string")
			hash.update(this._prefix);
		else
			this._prefix.updateHash(hash);
	***REMOVED***
***REMOVED***

require("./SourceAndMapMixin")(PrefixSource.prototype);

module.exports = PrefixSource;
