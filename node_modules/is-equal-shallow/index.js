/*!
 * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */

'use strict';

var isPrimitive = require('is-primitive');

module.exports = function isEqual(a, b) ***REMOVED***
  if (!a && !b) ***REMOVED*** return true; ***REMOVED***
  if (!a && b || a && !b) ***REMOVED*** return false; ***REMOVED***

  var numKeysA = 0, numKeysB = 0, key;
  for (key in b) ***REMOVED***
    numKeysB++;
    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) ***REMOVED***
      return false;
    ***REMOVED***
  ***REMOVED***
  for (key in a) ***REMOVED***
    numKeysA++;
  ***REMOVED***
  return numKeysA === numKeysB;
***REMOVED***;
