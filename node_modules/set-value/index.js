/*!
 * set-value <https://github.com/jonschlinkert/set-value>
 *
 * Copyright (c) 2014-2015, 2017, Jon Schlinkert.
 * Released under the MIT License.
 */

'use strict';

var split = require('split-string');
var extend = require('extend-shallow');
var isPlainObject = require('is-plain-object');
var isObject = require('is-extendable');

module.exports = function(obj, prop, val) ***REMOVED***
  if (!isObject(obj)) ***REMOVED***
    return obj;
  ***REMOVED***

  if (Array.isArray(prop)) ***REMOVED***
    prop = [].concat.apply([], prop).join('.');
  ***REMOVED***

  if (typeof prop !== 'string') ***REMOVED***
    return obj;
  ***REMOVED***

  var keys = split(prop, ***REMOVED***sep: '.', brackets: true***REMOVED***);
  var len = keys.length;
  var idx = -1;
  var current = obj;

  while (++idx < len) ***REMOVED***
    var key = keys[idx];
    if (idx !== len - 1) ***REMOVED***
      if (!isObject(current[key])) ***REMOVED***
        current[key] = ***REMOVED******REMOVED***;
      ***REMOVED***
      current = current[key];
      continue;
    ***REMOVED***

    if (isPlainObject(current[key]) && isPlainObject(val)) ***REMOVED***
      current[key] = extend(***REMOVED******REMOVED***, current[key], val);
    ***REMOVED*** else ***REMOVED***
      current[key] = val;
    ***REMOVED***
  ***REMOVED***

  return obj;
***REMOVED***;
